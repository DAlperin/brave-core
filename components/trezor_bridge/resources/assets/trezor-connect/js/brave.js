
var globalDataConfig = {
    "webusb": [
        { "vendorId": "0x534c", "productId": "0x0001" },
        { "vendorId": "0x1209", "productId": "0x53c0" },
        { "vendorId": "0x1209", "productId": "0x53c1" }
    ],
    "whitelist": [
        { "origin": "chrome-extension://imloifkgjagghnncjkhggdhalmcnfklk", "priority": 1 },
        { "origin": "chrome-extension://niebkpllfhmpfbffbfifagfgoamhpflf", "priority": 1 },
        { "origin": "file://", "priority": 2 },
        { "origin": "trezor.io", "priority": 0 },
        { "origin": "sldev.cz", "priority": 0 },
        { "origin": "localhost", "priority": 0 }
    ],
    "management": [
        { "origin": "trezor.io" },
        { "origin": "sldev.cz" },
        { "origin": "localhost" }
    ],
    "knownHosts": [
        { "origin": "imloifkgjagghnncjkhggdhalmcnfklk", "label": "Trezor Password Manager (Develop)", "icon": "./data/icons/tpm.jpg" },
        { "origin": "niebkpllfhmpfbffbfifagfgoamhpflf", "label": "Trezor Password Manager" },
        { "origin": "trezor-connect@trezor.io", "label": "Trezor Connect FF Extension" },
        { "origin": "efbfhenfhihgdcmnfdkhaphjdnopihlf", "label": "Trezor Connect Chrome Extension", "icon": "./data/icons/metamask.svg" },
        { "origin": "mnpfhpndmjholfdlhpkjfmjkgppmodaf", "label": "MetaMask", "icon": "./data/icons/metamask.svg" },
        { "origin": "webextension@metamask.io", "label": "MetaMask", "icon": "./data/icons/metamask.svg" },
        { "origin": "file://", "label": " " }
    ],
    "resources": {
        "bridge": "./data/bridge/latest.txt"
    },
    "assets": [
        {
            "name": "coins",
            "url": "./data/coins.json"
        },
        {
            "name": "bridge",
            "url": "./data/bridge/releases.json"
        },
        {
            "name": "firmware-t1",
            "url": "./data/firmware/1/releases.json"
        },
        {
            "name": "firmware-t2",
            "url": "./data/firmware/2/releases.json"
        }
    ],
    "messages": [
        {
            "name": "v6",
            "range": {
                "min": ["1.0.0", "2.0.0"],
                "max": ["1.7.3", "2.0.10"]
            },
            "json": "./data/messages/messages-v6.json"
        },
        {
            "name": "v7",
            "range": {
                "min": ["1.7.4", "2.1.0"],
                "max": ["1.8.1", "2.1.1"]
            },
            "json": "./data/messages/messages-v7.json"
        },
        {
            "name": "v8",
            "range": {
                "min": ["1.8.2", "2.1.2"],
                "max": ["1.8.9", "2.2.9"]
            },
            "json": "./data/messages/messages-v8.json"
        },
        {
            "name": "default",
            "range": {
                "min": ["1.9.0", "2.3.0"]
            },
            "json": "./data/messages/messages.json"
        }
    ],
    "supportedBrowsers": {
        "chrome": {
            "version": 59,
            "download": "https://www.google.com/chrome/",
            "update": "https://support.google.com/chrome/answer/95414"
        },
        "chromium": {
            "version": 59,
            "download": "https://www.chromium.org/",
            "update": "https://www.chromium.org/"
        },
        "electron": {
            "version": 0,
            "download": "https://www.electronjs.org/",
            "update": "https://www.electronjs.org/"
        },
        "firefox": {
            "version": 54,
            "download": "https://www.mozilla.org/en-US/firefox/new/",
            "update": "https://support.mozilla.org/en-US/kb/update-firefox-latest-version"
        }
    },
    "supportedFirmware": [
        {
            "coin": ["xrp", "txrp"],
            "excludedMethods": ["getAccountInfo"],
            "min": ["0", "2.1.0"],
            "comment": ["Since firmware 2.1.0 there is a new protobuf field 'destination_tag' in RippleSignTx"]
        },
        {
            "excludedMethods": [
                "rippleGetAddress",
                "rippleSignTransaction"
            ],
            "min": ["0", "2.1.0"],
            "comment": ["Since firmware 2.1.0 there is a new protobuf field 'destination_tag' in RippleSignTx"]
        },
        {
            "excludedMethods": [
                "cardanoSignTransaction"
            ],
            "min": ["0", "2.1.0"],
            "comment": ["Since firmware 2.1.0 there is a new protobuf field 'protocol_magic' in CardanoSignTx"]
        },
        {
            "excludedMethods": [
                "tezosSignTransaction"
            ],
            "min": ["0", "2.1.8"],
            "comment": ["Since 2.1.8 there are new protobuf fields in tezos transaction (Babylon fork)"]
        }
    ]
};
var globalConfigCoins = {
    "bitcoin": [
        {
            "address_type": 0,
            "address_type_p2sh": 5,
            "bech32_prefix": "bc",
            "blockbook": [
                "https://btc1.trezor.io",
                "https://btc2.trezor.io",
                "https://btc3.trezor.io",
                "https://btc4.trezor.io",
                "https://btc5.trezor.io"
            ],
            "blocktime_seconds": 600,
            "cashaddr_prefix": null,
            "coin_label": "Bitcoin",
            "coin_name": "Bitcoin",
            "coin_shortcut": "BTC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Economy": 70,
                "High": 200,
                "Low": 10,
                "Normal": 140
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f",
            "max_address_length": 34,
            "maxfee_kb": 2000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Bitcoin",
            "segwit": true,
            "shortcut": "BTC",
            "signed_message_header": "Bitcoin Signed Message:\n",
            "slip44": 0,
            "support": {
                "connect": true,
                "trezor1": "1.5.2",
                "trezor2": "2.0.5",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 111,
            "address_type_p2sh": 196,
            "bech32_prefix": "tb",
            "blockbook": [
                "https://tbtc1.trezor.io",
                "https://tbtc2.trezor.io"
            ],
            "blocktime_seconds": 600,
            "cashaddr_prefix": null,
            "coin_label": "Testnet",
            "coin_name": "Testnet",
            "coin_shortcut": "TEST",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943",
            "max_address_length": 34,
            "maxfee_kb": 10000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Testnet",
            "segwit": true,
            "shortcut": "TEST",
            "signed_message_header": "Bitcoin Signed Message:\n",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": "1.5.2",
                "trezor2": "2.0.5",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 70615956,
            "xpub_magic": 70617039,
            "xpub_magic_segwit_native": 73342198,
            "xpub_magic_segwit_p2sh": 71979618
        },
        {
            "address_type": 53,
            "address_type_p2sh": 55,
            "bech32_prefix": "acm",
            "blockbook": [],
            "blocktime_seconds": 150,
            "cashaddr_prefix": null,
            "coin_label": "Actinium",
            "coin_name": "Actinium",
            "coin_shortcut": "ACM",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 1000
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "28d77872e23714562f49a1be792c276623c1bbe3fdcf21b6035cfde78b00b824",
            "max_address_length": 34,
            "maxfee_kb": 40000000,
            "min_address_length": 27,
            "minfee_kb": 100000,
            "name": "Actinium",
            "segwit": true,
            "shortcut": "ACM",
            "signed_message_header": "Actinium Signed Message:\n",
            "slip44": 228,
            "support": {
                "connect": true,
                "trezor1": "1.7.2",
                "trezor2": "2.0.10",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 55,
            "address_type_p2sh": 16,
            "bech32_prefix": null,
            "blockbook": [],
            "blocktime_seconds": 150,
            "cashaddr_prefix": null,
            "coin_label": "Axe",
            "coin_name": "Axe",
            "coin_shortcut": "AXE",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 5460,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "00000c33631ca6f2f61368991ce2dc03306b5bb50bf7cede5cfbba6db38e52e6",
            "max_address_length": 34,
            "maxfee_kb": 100000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Axe",
            "segwit": false,
            "shortcut": "AXE",
            "signed_message_header": "DarkCoin Signed Message:\n",
            "slip44": 4242,
            "support": {
                "connect": true,
                "trezor1": "1.7.3",
                "trezor2": "2.0.11",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 50221816,
            "xpub_magic": 50221772,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 81,
            "address_type_p2sh": 5,
            "bech32_prefix": "bz",
            "blockbook": [
                "https://zny.blockbook.ovh"
            ],
            "blocktime_seconds": 90,
            "cashaddr_prefix": null,
            "coin_label": "BitZeny",
            "coin_name": "BitZeny",
            "coin_shortcut": "ZNY",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 20
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "000009f7e55e9e3b4781e22bd87a7cfa4acada9e4340d43ca738bf4e9fb8f5ce",
            "max_address_length": 34,
            "maxfee_kb": 1000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "BitZeny",
            "segwit": true,
            "shortcut": "ZNY",
            "signed_message_header": "BitZeny Signed Message:\n",
            "slip44": 123,
            "support": {
                "connect": true,
                "trezor1": "1.8.2",
                "trezor2": "2.1.1",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 0,
            "address_type_p2sh": 5,
            "bech32_prefix": null,
            "blockbook": [
                "https://bch1.trezor.io",
                "https://bch2.trezor.io",
                "https://bch3.trezor.io",
                "https://bch4.trezor.io",
                "https://bch5.trezor.io"
            ],
            "blocktime_seconds": 600,
            "cashaddr_prefix": "bitcoincash",
            "coin_label": "Bitcoin Cash",
            "coin_name": "Bcash",
            "coin_shortcut": "BCH",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Economy": 70,
                "High": 200,
                "Low": 10,
                "Normal": 140
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": true,
            "fork_id": 0,
            "hash_genesis_block": "000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f",
            "max_address_length": 34,
            "maxfee_kb": 500000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Bitcoin Cash",
            "segwit": false,
            "shortcut": "BCH",
            "signed_message_header": "Bitcoin Signed Message:\n",
            "slip44": 145,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 111,
            "address_type_p2sh": 196,
            "bech32_prefix": null,
            "blockbook": [],
            "blocktime_seconds": 600,
            "cashaddr_prefix": "bchtest",
            "coin_label": "Bitcoin Cash Testnet",
            "coin_name": "Bcash Testnet",
            "coin_shortcut": "TBCH",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": true,
            "fork_id": 0,
            "hash_genesis_block": "000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943",
            "max_address_length": 34,
            "maxfee_kb": 10000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Bitcoin Cash Testnet",
            "segwit": false,
            "shortcut": "TBCH",
            "signed_message_header": "Bitcoin Signed Message:\n",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 70615956,
            "xpub_magic": 70617039,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 38,
            "address_type_p2sh": 23,
            "bech32_prefix": "btg",
            "blockbook": [
                "https://btg1.trezor.io",
                "https://btg2.trezor.io",
                "https://btg3.trezor.io",
                "https://btg4.trezor.io",
                "https://btg5.trezor.io"
            ],
            "blocktime_seconds": 600,
            "cashaddr_prefix": null,
            "coin_label": "Bitcoin Gold",
            "coin_name": "Bgold",
            "coin_shortcut": "BTG",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Economy": 70,
                "High": 200,
                "Low": 10,
                "Normal": 140
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": true,
            "fork_id": 79,
            "hash_genesis_block": "000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f",
            "max_address_length": 34,
            "maxfee_kb": 500000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Bitcoin Gold",
            "segwit": true,
            "shortcut": "BTG",
            "signed_message_header": "Bitcoin Gold Signed Message:\n",
            "slip44": 156,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 111,
            "address_type_p2sh": 196,
            "bech32_prefix": "tbtg",
            "blockbook": [],
            "blocktime_seconds": 600,
            "cashaddr_prefix": null,
            "coin_label": "Bitcoin Gold Testnet",
            "coin_name": "Bgold Testnet",
            "coin_shortcut": "TBTG",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Economy": 70,
                "High": 200,
                "Low": 10,
                "Normal": 140
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": true,
            "fork_id": 79,
            "hash_genesis_block": "00000000e0781ebe24b91eedc293adfea2f557b53ec379e78959de3853e6f9f6",
            "max_address_length": 34,
            "maxfee_kb": 500000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Bitcoin Gold Testnet",
            "segwit": true,
            "shortcut": "TBTG",
            "signed_message_header": "Bitcoin Gold Signed Message:\n",
            "slip44": 156,
            "support": {
                "connect": true,
                "trezor1": "1.7.1",
                "trezor2": "2.0.8",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 70615956,
            "xpub_magic": 70617039,
            "xpub_magic_segwit_native": 73342198,
            "xpub_magic_segwit_p2sh": 71979618
        },
        {
            "address_type": 4901,
            "address_type_p2sh": 5039,
            "bech32_prefix": null,
            "blockbook": [],
            "blocktime_seconds": 150,
            "cashaddr_prefix": null,
            "coin_label": "Bitcoin Private",
            "coin_name": "Bprivate",
            "coin_shortcut": "BTCP",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": 42,
            "hash_genesis_block": "0007104ccda289427919efc39dc9e4d499804b7bebc22df55f8b834301260602",
            "max_address_length": 95,
            "maxfee_kb": 1000000,
            "min_address_length": 35,
            "minfee_kb": 1000,
            "name": "Bitcoin Private",
            "segwit": false,
            "shortcut": "BTCP",
            "signed_message_header": "BitcoinPrivate Signed Message:\n",
            "slip44": 183,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 61,
            "address_type_p2sh": 123,
            "bech32_prefix": null,
            "blockbook": [
                "https://blockbook1.bitcoinrh.org",
                "https://blockbook2.bitcoinrh.org"
            ],
            "blocktime_seconds": 600,
            "cashaddr_prefix": null,
            "coin_label": "Bitcoin Rhodium",
            "coin_name": "Brhodium",
            "coin_shortcut": "XRC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Economy": 70,
                "High": 200,
                "Low": 10,
                "Normal": 140
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "baff5bfd9dc43fb672d003ec20fd21428f9282ca46bfa1730d73e1f2c75f5fdd",
            "max_address_length": 34,
            "maxfee_kb": 2000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Bitcoin Rhodium",
            "segwit": false,
            "shortcut": "XRC",
            "signed_message_header": "BitCoin Rhodium Signed Message:\n",
            "slip44": 10291,
            "support": {
                "connect": true,
                "trezor1": "1.8.2",
                "trezor2": "2.1.1",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 3,
            "address_type_p2sh": 125,
            "bech32_prefix": "btx",
            "blockbook": [],
            "blocktime_seconds": 150,
            "cashaddr_prefix": null,
            "coin_label": "Bitcore",
            "coin_name": "Bitcore",
            "coin_shortcut": "BTX",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Low": 10
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "604148281e5c4b7f2487e5d03cd60d8e6f69411d613f6448034508cea52e9574",
            "max_address_length": 34,
            "maxfee_kb": 2000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Bitcore",
            "segwit": true,
            "shortcut": "BTX",
            "signed_message_header": "BitCore Signed Message:\n",
            "slip44": 160,
            "support": {
                "connect": true,
                "trezor1": "1.7.1",
                "trezor2": "2.0.8",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 76,
            "address_type_p2sh": 16,
            "bech32_prefix": null,
            "blockbook": [
                "https://dash1.trezor.io",
                "https://dash2.trezor.io",
                "https://dash3.trezor.io",
                "https://dash4.trezor.io",
                "https://dash5.trezor.io"
            ],
            "blocktime_seconds": 150,
            "cashaddr_prefix": null,
            "coin_label": "Dash",
            "coin_name": "Dash",
            "coin_shortcut": "DASH",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 5460,
            "extra_data": true,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "00000ffd590b1485b3caadc19b22e6379c733355108f107a430458cdf3407ab6",
            "max_address_length": 34,
            "maxfee_kb": 100000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Dash",
            "segwit": false,
            "shortcut": "DASH",
            "signed_message_header": "DarkCoin Signed Message:\n",
            "slip44": 5,
            "support": {
                "connect": true,
                "trezor1": "1.5.2",
                "trezor2": "2.0.5",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 50221816,
            "xpub_magic": 50221772,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 140,
            "address_type_p2sh": 19,
            "bech32_prefix": null,
            "blockbook": [],
            "blocktime_seconds": 150,
            "cashaddr_prefix": null,
            "coin_label": "Dash Testnet",
            "coin_name": "Dash Testnet",
            "coin_shortcut": "tDASH",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 5460,
            "extra_data": true,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "00000bafbc94add76cb75e2ec92894837288a481e5c005f6563d91623bf8bc2c",
            "max_address_length": 34,
            "maxfee_kb": 100000,
            "min_address_length": 27,
            "minfee_kb": 10000,
            "name": "Dash Testnet",
            "segwit": false,
            "shortcut": "tDASH",
            "signed_message_header": "DarkCoin Signed Message:\n",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.8",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 70615956,
            "xpub_magic": 70617039,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 30,
            "address_type_p2sh": 63,
            "bech32_prefix": "dgb",
            "blockbook": [
                "https://dgb1.trezor.io",
                "https://dgb2.trezor.io"
            ],
            "blocktime_seconds": 15,
            "cashaddr_prefix": null,
            "coin_label": "DigiByte",
            "coin_name": "DigiByte",
            "coin_shortcut": "DGB",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Economy": 70,
                "High": 200,
                "Low": 10,
                "Normal": 140
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "7497ea1b465eb39f1c8f507bc877078fe016d6fcb6dfad3a64c98dcc6e1e8496",
            "max_address_length": 34,
            "maxfee_kb": 500000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "DigiByte",
            "segwit": true,
            "shortcut": "DGB",
            "signed_message_header": "DigiByte Signed Message:\n",
            "slip44": 20,
            "support": {
                "connect": true,
                "trezor1": "1.6.3",
                "trezor2": "2.0.7",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 30,
            "address_type_p2sh": 22,
            "bech32_prefix": null,
            "blockbook": [
                "https://doge1.trezor.io",
                "https://doge2.trezor.io",
                "https://doge3.trezor.io",
                "https://doge4.trezor.io",
                "https://doge5.trezor.io"
            ],
            "blocktime_seconds": 60,
            "cashaddr_prefix": null,
            "coin_label": "Dogecoin",
            "coin_name": "Dogecoin",
            "coin_shortcut": "DOGE",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 100000
            },
            "dust_limit": 10000000,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "1a91e3dace36e2be3bf030a65679fe821aa1d6ef92e7c9902eb318182c355691",
            "max_address_length": 34,
            "maxfee_kb": 1000000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Dogecoin",
            "segwit": false,
            "shortcut": "DOGE",
            "signed_message_header": "Dogecoin Signed Message:\n",
            "slip44": 3,
            "support": {
                "connect": true,
                "trezor1": "1.5.2",
                "trezor2": "2.0.5",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 49988504,
            "xpub_magic": 49990397,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 14,
            "address_type_p2sh": 5,
            "bech32_prefix": "fc",
            "blockbook": [],
            "blocktime_seconds": 60,
            "cashaddr_prefix": null,
            "coin_label": "Feathercoin",
            "coin_name": "Feathercoin",
            "coin_shortcut": "FTC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 1000
            },
            "dust_limit": 54600,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "12a765e31ffd4059bada1e25190f6e98c99d9714d334efa41a195a7e7e04bfe2",
            "max_address_length": 34,
            "maxfee_kb": 40000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Feathercoin",
            "segwit": true,
            "shortcut": "FTC",
            "signed_message_header": "Feathercoin Signed Message:\n",
            "slip44": 8,
            "support": {
                "connect": true,
                "trezor1": "1.7.1",
                "trezor2": "2.0.8",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 76077806,
            "xpub_magic": 76069926,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 35,
            "address_type_p2sh": 94,
            "bech32_prefix": "flo",
            "blockbook": [],
            "blocktime_seconds": 40,
            "cashaddr_prefix": null,
            "coin_label": "Flo",
            "coin_name": "Florincoin",
            "coin_shortcut": "FLO",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 1000
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "09c7781c9df90708e278c35d38ea5c9041d7ecfcdd1c56ba67274b7cff3e1cea",
            "max_address_length": 34,
            "maxfee_kb": 40000000,
            "min_address_length": 27,
            "minfee_kb": 100000,
            "name": "Flo",
            "segwit": true,
            "shortcut": "FLO",
            "signed_message_header": "Florincoin Signed Message:\n",
            "slip44": 216,
            "support": {
                "connect": true,
                "trezor1": "1.7.2",
                "trezor2": "2.0.11",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 15264107,
            "xpub_magic": 1526049,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 28471030
        },
        {
            "address_type": 36,
            "address_type_p2sh": 16,
            "bech32_prefix": "fc",
            "blockbook": [
                "https://explorer.fujicoin.org"
            ],
            "blocktime_seconds": 60,
            "cashaddr_prefix": null,
            "coin_label": "Fujicoin",
            "coin_name": "Fujicoin",
            "coin_shortcut": "FJC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Economy": 20000,
                "High": 100000,
                "Low": 10000,
                "Normal": 50000
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "adb6d9cfd74075e7f91608add4bd2a2ea636f70856183086842667a1597714a0",
            "max_address_length": 34,
            "maxfee_kb": 1000000000,
            "min_address_length": 27,
            "minfee_kb": 10000000,
            "name": "Fujicoin",
            "segwit": true,
            "shortcut": "FJC",
            "signed_message_header": "FujiCoin Signed Message:\n",
            "slip44": 75,
            "support": {
                "connect": true,
                "trezor1": "1.6.1",
                "trezor2": "2.0.5",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 38,
            "address_type_p2sh": 10,
            "bech32_prefix": null,
            "blockbook": [
                "https://blockbook.gincoin.io"
            ],
            "blocktime_seconds": 120,
            "cashaddr_prefix": null,
            "coin_label": "GIN",
            "coin_name": "Gincoin",
            "coin_shortcut": "GIN",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 5460,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "00000cd6bde619b2c3b23ad2e384328a450a37fa28731debf748c3b17f91f97d",
            "max_address_length": 34,
            "maxfee_kb": 100000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "GIN",
            "segwit": false,
            "shortcut": "GIN",
            "signed_message_header": "DarkCoin Signed Message:\n",
            "slip44": 2000,
            "support": {
                "connect": true,
                "trezor1": "1.7.2",
                "trezor2": "2.0.11",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 50221816,
            "xpub_magic": 50221772,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 38,
            "address_type_p2sh": 62,
            "bech32_prefix": "game",
            "blockbook": [
                "https://blockbook.gamecredits.network"
            ],
            "blocktime_seconds": 90,
            "cashaddr_prefix": null,
            "coin_label": "GameCredits",
            "coin_name": "GameCredits",
            "coin_shortcut": "GAME",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 1000
            },
            "dust_limit": 54600,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "91ec5f25ee9a0ffa1af7d4da4db9a552228dd2dc77cdb15b738be4e1f55f30ee",
            "max_address_length": 34,
            "maxfee_kb": 5000000,
            "min_address_length": 27,
            "minfee_kb": 100000,
            "name": "GameCredits",
            "segwit": true,
            "shortcut": "GAME",
            "signed_message_header": "GameCredits Signed Message:\n",
            "slip44": 101,
            "support": {
                "connect": true,
                "trezor1": "1.7.1",
                "trezor2": "2.0.8",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 27108450,
            "xpub_magic": 27106558,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 28471030
        },
        {
            "address_type": 60,
            "address_type_p2sh": 85,
            "bech32_prefix": null,
            "blockbook": [],
            "blocktime_seconds": 60,
            "cashaddr_prefix": null,
            "coin_label": "Komodo",
            "coin_name": "Komodo",
            "coin_shortcut": "KMD",
            "consensus_branch_id": {
                "1": 0,
                "2": 0,
                "3": 1537743641,
                "4": 1991772603
            },
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "027e3758c3a65b12aa1046462b486d0a63bfa1beae327897f56c5cfb7daaae71",
            "max_address_length": 34,
            "maxfee_kb": 1000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Komodo",
            "segwit": false,
            "shortcut": "KMD",
            "signed_message_header": "Komodo Signed Message:\n",
            "slip44": 141,
            "support": {
                "connect": true,
                "trezor1": "1.8.0",
                "trezor2": "2.0.11",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 6198,
            "address_type_p2sh": 6203,
            "bech32_prefix": null,
            "blockbook": [],
            "blocktime_seconds": 60,
            "cashaddr_prefix": null,
            "coin_label": "Koto",
            "coin_name": "Koto",
            "coin_shortcut": "KOTO",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "6d424c350729ae633275d51dc3496e16cd1b1d195c164da00f39c499a2e9959e",
            "max_address_length": 95,
            "maxfee_kb": 1000000,
            "min_address_length": 35,
            "minfee_kb": 1000,
            "name": "Koto",
            "segwit": false,
            "shortcut": "KOTO",
            "signed_message_header": "Koto Signed Message:\n",
            "slip44": 510,
            "support": {
                "connect": true,
                "trezor1": "1.7.1",
                "trezor2": "2.0.8",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 48,
            "address_type_p2sh": 50,
            "bech32_prefix": "ltc",
            "blockbook": [
                "https://ltc1.trezor.io",
                "https://ltc2.trezor.io",
                "https://ltc3.trezor.io",
                "https://ltc4.trezor.io",
                "https://ltc5.trezor.io"
            ],
            "blocktime_seconds": 150,
            "cashaddr_prefix": null,
            "coin_label": "Litecoin",
            "coin_name": "Litecoin",
            "coin_shortcut": "LTC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 1000
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "12a765e31ffd4059bada1e25190f6e98c99d9714d334efa41a195a7e7e04bfe2",
            "max_address_length": 34,
            "maxfee_kb": 40000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Litecoin",
            "segwit": true,
            "shortcut": "LTC",
            "signed_message_header": "Litecoin Signed Message:\n",
            "slip44": 2,
            "support": {
                "connect": true,
                "trezor1": "1.5.2",
                "trezor2": "2.0.5",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 27106558,
            "xpub_magic": 27108450,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 28471030
        },
        {
            "address_type": 111,
            "address_type_p2sh": 58,
            "bech32_prefix": "tltc",
            "blockbook": [],
            "blocktime_seconds": 150,
            "cashaddr_prefix": null,
            "coin_label": "Litecoin Testnet",
            "coin_name": "Litecoin Testnet",
            "coin_shortcut": "tLTC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 54600,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "4966625a4b2851d9fdee139e56211a0d88575f59ed816ff5e6a63deb4e3e29a0",
            "max_address_length": 34,
            "maxfee_kb": 40000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Litecoin Testnet",
            "segwit": true,
            "shortcut": "tLTC",
            "signed_message_header": "Litecoin Signed Message:\n",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 70615956,
            "xpub_magic": 70617039,
            "xpub_magic_segwit_native": 73342198,
            "xpub_magic_segwit_p2sh": 71979618
        },
        {
            "address_type": 50,
            "address_type_p2sh": 55,
            "bech32_prefix": "mona",
            "blockbook": [
                "https://blockbook.electrum-mona.org"
            ],
            "blocktime_seconds": 90,
            "cashaddr_prefix": null,
            "coin_label": "Monacoin",
            "coin_name": "Monacoin",
            "coin_shortcut": "MONA",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 1000
            },
            "dust_limit": 54600,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "ff9f1c0116d19de7c9963845e129f9ed1bfc0b376eb54fd7afa42e0d418c8bb6",
            "max_address_length": 34,
            "maxfee_kb": 5000000,
            "min_address_length": 27,
            "minfee_kb": 100000,
            "name": "Monacoin",
            "segwit": true,
            "shortcut": "MONA",
            "signed_message_header": "Monacoin Signed Message:\n",
            "slip44": 22,
            "support": {
                "connect": true,
                "trezor1": "1.6.0",
                "trezor2": "2.0.5",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 16,
            "address_type_p2sh": 76,
            "bech32_prefix": null,
            "blockbook": [
                "https://blockbook.monetaryunit.org"
            ],
            "blocktime_seconds": 40,
            "cashaddr_prefix": null,
            "coin_label": "MonetaryUnit",
            "coin_name": "MonetaryUnit",
            "coin_shortcut": "MUE",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 5460,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "0b58ed450b3819ca54ab0054c4d220ca4f887d21c9e55d2a333173adf76d987f",
            "max_address_length": 34,
            "maxfee_kb": 100000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "MonetaryUnit",
            "segwit": false,
            "shortcut": "MUE",
            "signed_message_header": "MonetaryUnit Signed Message:\n",
            "slip44": 31,
            "support": {
                "connect": true,
                "trezor1": "1.7.1",
                "trezor2": "2.0.8",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 38,
            "address_type_p2sh": 53,
            "bech32_prefix": "nix",
            "blockbook": [],
            "blocktime_seconds": 120,
            "cashaddr_prefix": null,
            "coin_label": "NIX",
            "coin_name": "NIX",
            "coin_shortcut": "NIX",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 1000
            },
            "dust_limit": 54600,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "dd28ad86def767c3cfc34267a950d871fc7462bc57ea4a929fc3596d9b598e41",
            "max_address_length": 34,
            "maxfee_kb": 40000000,
            "min_address_length": 27,
            "minfee_kb": 0,
            "name": "NIX",
            "segwit": true,
            "shortcut": "NIX",
            "signed_message_header": "NIX Signed Message:\n",
            "slip44": 400,
            "support": {
                "connect": true,
                "trezor1": "1.7.2",
                "trezor2": "2.0.11",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 52,
            "address_type_p2sh": 5,
            "bech32_prefix": null,
            "blockbook": [
                "https://nmc1.trezor.io",
                "https://nmc2.trezor.io"
            ],
            "blocktime_seconds": 600,
            "cashaddr_prefix": null,
            "coin_label": "Namecoin",
            "coin_name": "Namecoin",
            "coin_shortcut": "NMC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 2940,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "000000000062b72c5e2ceb45fbc8587e807c155b0da735e6483dfba2f0a9c770",
            "max_address_length": 34,
            "maxfee_kb": 10000000,
            "min_address_length": 27,
            "minfee_kb": 100000,
            "name": "Namecoin",
            "segwit": false,
            "shortcut": "NMC",
            "signed_message_header": "Namecoin Signed Message:\n",
            "slip44": 7,
            "support": {
                "connect": true,
                "trezor1": "1.5.2",
                "trezor2": "2.0.5",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 30,
            "address_type_p2sh": 13,
            "bech32_prefix": null,
            "blockbook": [
                "https://blockbook.pivx.link"
            ],
            "blocktime_seconds": 60,
            "cashaddr_prefix": null,
            "coin_label": "PIVX",
            "coin_name": "PIVX",
            "coin_shortcut": "PIVX",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "0000041e482b9b9691d98eefb48473405c0b8ec31b76df3797c74a78680ef818",
            "max_address_length": 34,
            "maxfee_kb": 100000,
            "min_address_length": 27,
            "minfee_kb": 100,
            "name": "PIVX",
            "segwit": false,
            "shortcut": "PIVX",
            "signed_message_header": "DarkNet Signed Message:\n",
            "slip44": 119,
            "support": {
                "connect": true,
                "trezor1": "1.8.0",
                "trezor2": "2.0.11",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 35729707,
            "xpub_magic": 36513075,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 139,
            "address_type_p2sh": 19,
            "bech32_prefix": null,
            "blockbook": [
                "https://blockbook-testnet.pivx.link"
            ],
            "blocktime_seconds": 60,
            "cashaddr_prefix": null,
            "coin_label": "PIVX Testnet",
            "coin_name": "PIVX Testnet",
            "coin_shortcut": "tPIVX",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 54600,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "0000041e482b9b9691d98eefb48473405c0b8ec31b76df3797c74a78680ef818",
            "max_address_length": 34,
            "maxfee_kb": 100000,
            "min_address_length": 27,
            "minfee_kb": 100,
            "name": "PIVX Testnet",
            "segwit": false,
            "shortcut": "tPIVX",
            "signed_message_header": "DarkNet Signed Message:\n",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": "1.8.0",
                "trezor2": "2.0.11",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 981489719,
            "xpub_magic": 981492128,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 55,
            "address_type_p2sh": 117,
            "bech32_prefix": "pc",
            "blockbook": [
                "https://blockbook.peercoin.net"
            ],
            "blocktime_seconds": 600,
            "cashaddr_prefix": null,
            "coin_label": "Peercoin",
            "coin_name": "Peercoin",
            "coin_shortcut": "PPC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 6,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 10000,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "0000000032fe677166d54963b62a4677d8957e87c508eaa4fd7eb1c880cd27e3",
            "max_address_length": 34,
            "maxfee_kb": 2000000,
            "min_address_length": 27,
            "minfee_kb": 10000,
            "name": "Peercoin",
            "segwit": true,
            "shortcut": "PPC",
            "signed_message_header": "Peercoin Signed Message:\n",
            "slip44": 6,
            "support": {
                "connect": true,
                "trezor1": "1.8.4",
                "trezor2": "2.1.9",
                "webwallet": true
            },
            "timestamp": true,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 111,
            "address_type_p2sh": 196,
            "bech32_prefix": "tpc",
            "blockbook": [
                "https://tblockbook.peercoin.net"
            ],
            "blocktime_seconds": 600,
            "cashaddr_prefix": null,
            "coin_label": "Peercoin Testnet",
            "coin_name": "Peercoin Testnet",
            "coin_shortcut": "tPPC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 6,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 10000,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "00000001f757bb737f6596503e17cd17b0658ce630cc727c0cca81aec47c9f06",
            "max_address_length": 34,
            "maxfee_kb": 2000000,
            "min_address_length": 27,
            "minfee_kb": 10000,
            "name": "Peercoin Testnet",
            "segwit": true,
            "shortcut": "tPPC",
            "signed_message_header": "Peercoin Signed Message:\n",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": "1.8.4",
                "trezor2": "2.1.9",
                "webwallet": true
            },
            "timestamp": true,
            "xprv_magic": 70615956,
            "xpub_magic": 70617039,
            "xpub_magic_segwit_native": 73342198,
            "xpub_magic_segwit_p2sh": 71979618
        },
        {
            "address_type": 47,
            "address_type_p2sh": 22,
            "bech32_prefix": null,
            "blockbook": [],
            "blocktime_seconds": 60,
            "cashaddr_prefix": null,
            "coin_label": "Pesetacoin",
            "coin_name": "Pesetacoin",
            "coin_shortcut": "PTC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 10000000,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "edfe5830b53251bfff733600b1cd5c192e761c011b055f07924634818c906438",
            "max_address_length": 34,
            "maxfee_kb": 1000000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Pesetacoin",
            "segwit": false,
            "shortcut": "PTC",
            "signed_message_header": "Pesetacoin Signed Message:\n",
            "slip44": 109,
            "support": {
                "connect": true,
                "trezor1": "1.7.1",
                "trezor2": "2.0.8",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 76079604,
            "xpub_magic": 76071982,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 55,
            "address_type_p2sh": 56,
            "bech32_prefix": null,
            "blockbook": [
                "https://blockbook.polispay.org"
            ],
            "blocktime_seconds": 120,
            "cashaddr_prefix": null,
            "coin_label": "Polis",
            "coin_name": "Polis",
            "coin_shortcut": "POLIS",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 5460,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "000009701eb781a8113b1af1d814e2f060f6408a2c990db291bc5108a1345c1e",
            "max_address_length": 34,
            "maxfee_kb": 100000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Polis",
            "segwit": false,
            "shortcut": "POLIS",
            "signed_message_header": "Polis Signed Message:\n",
            "slip44": 1997,
            "support": {
                "connect": true,
                "trezor1": "1.8.2",
                "trezor2": "2.1.1",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 65165637,
            "xpub_magic": 65166718,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 23,
            "address_type_p2sh": 83,
            "bech32_prefix": null,
            "blockbook": [],
            "blocktime_seconds": 60,
            "cashaddr_prefix": null,
            "coin_label": "Primecoin",
            "coin_name": "Primecoin",
            "coin_shortcut": "XPM",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "963d17ba4dc753138078a2f56afb3af9674e2546822badff26837db9a0152106",
            "max_address_length": 35,
            "maxfee_kb": 1000000,
            "min_address_length": 26,
            "minfee_kb": 1000,
            "name": "Primecoin",
            "segwit": false,
            "shortcut": "XPM",
            "signed_message_header": "Primecoin Signed Message:\n",
            "slip44": 24,
            "support": {
                "connect": true,
                "trezor1": "1.8.0",
                "trezor2": "2.0.11",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 60,
            "address_type_p2sh": 122,
            "bech32_prefix": null,
            "blockbook": [
                "https://blockbook.ravencoin.org"
            ],
            "blocktime_seconds": 60,
            "cashaddr_prefix": null,
            "coin_label": "Ravencoin",
            "coin_name": "Ravencoin",
            "coin_shortcut": "RVN",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Low": 10
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "0000006b444bc2f2ffe627be9d9e7e7a0730000870ef6eb6da46c8eae389df90",
            "max_address_length": 34,
            "maxfee_kb": 2000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Ravencoin",
            "segwit": false,
            "shortcut": "RVN",
            "signed_message_header": "Raven Signed Message:\n",
            "slip44": 175,
            "support": {
                "connect": true,
                "trezor1": "1.7.2",
                "trezor2": "2.0.10",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 25,
            "address_type_p2sh": 105,
            "bech32_prefix": null,
            "blockbook": [
                "https://blockbook.ritocoin.org"
            ],
            "blocktime_seconds": 60,
            "cashaddr_prefix": null,
            "coin_label": "Ritocoin",
            "coin_name": "Ritocoin",
            "coin_shortcut": "RITO",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Low": 10
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "00000075e344bdf1c0e433f453764b1830a7aa19b2a5213e707502a22b779c1b",
            "max_address_length": 34,
            "maxfee_kb": 2000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Ritocoin",
            "segwit": false,
            "shortcut": "RITO",
            "signed_message_header": "Rito Signed Message:\n",
            "slip44": 19169,
            "support": {
                "connect": true,
                "trezor1": "1.8.2",
                "trezor2": "2.1.1",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 87326380,
            "xpub_magic": 87353290,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 76,
            "address_type_p2sh": 16,
            "bech32_prefix": "xc",
            "blockbook": [],
            "blocktime_seconds": 60,
            "cashaddr_prefix": null,
            "coin_label": "Stakenet",
            "coin_name": "Stakenet",
            "coin_shortcut": "XSN",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Economy": 70,
                "High": 200,
                "Low": 10,
                "Normal": 140
            },
            "dust_limit": 1000,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "00000c822abdbb23e28f79a49d29b41429737c6c7e15df40d1b1f1b35907ae34",
            "max_address_length": 47,
            "maxfee_kb": 2000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Stakenet",
            "segwit": true,
            "shortcut": "XSN",
            "signed_message_header": "DarkCoin Signed Message:\n",
            "slip44": 199,
            "support": {
                "connect": true,
                "trezor1": "1.8.0",
                "trezor2": "2.0.11",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 130,
            "address_type_p2sh": 30,
            "bech32_prefix": null,
            "blockbook": [
                "https://blockbook.flurbo.xyz",
                "https://blockbook.unobtanium.uno"
            ],
            "blocktime_seconds": 30,
            "cashaddr_prefix": null,
            "coin_label": "Unobtanium",
            "coin_name": "Unobtanium",
            "coin_shortcut": "UNO",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Economy": 50,
                "High": 160,
                "Low": 10,
                "Normal": 100
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "000004c2fc5fffb810dccc197d603690099a68305232e552d96ccbe8e2c52b75",
            "max_address_length": 34,
            "maxfee_kb": 2000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Unobtanium",
            "segwit": false,
            "shortcut": "UNO",
            "signed_message_header": "Unobtanium Signed Message:\n",
            "slip44": 92,
            "support": {
                "connect": true,
                "trezor1": "1.8.4",
                "trezor2": "2.1.6",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 71,
            "address_type_p2sh": 5,
            "bech32_prefix": "vtc",
            "blockbook": [
                "https://vtc1.trezor.io",
                "https://vtc2.trezor.io",
                "https://vtc3.trezor.io",
                "https://vtc4.trezor.io",
                "https://vtc5.trezor.io"
            ],
            "blocktime_seconds": 150,
            "cashaddr_prefix": null,
            "coin_label": "Vertcoin",
            "coin_name": "Vertcoin",
            "coin_shortcut": "VTC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 1000
            },
            "dust_limit": 54600,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "4d96a915f49d40b1e5c2844d1ee2dccb90013a990ccea12c492d22110489f0c4",
            "max_address_length": 34,
            "maxfee_kb": 40000000,
            "min_address_length": 27,
            "minfee_kb": 100000,
            "name": "Vertcoin",
            "segwit": true,
            "shortcut": "VTC",
            "signed_message_header": "Vertcoin Signed Message:\n",
            "slip44": 28,
            "support": {
                "connect": true,
                "trezor1": "1.6.1",
                "trezor2": "2.0.5",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 71,
            "address_type_p2sh": 33,
            "bech32_prefix": "via",
            "blockbook": [],
            "blocktime_seconds": 24,
            "cashaddr_prefix": null,
            "coin_label": "Viacoin",
            "coin_name": "Viacoin",
            "coin_shortcut": "VIA",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Economy": 7000,
                "High": 20000,
                "Low": 1000,
                "Normal": 14000
            },
            "dust_limit": 54600,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "4e9b54001f9976049830128ec0331515eaabe35a70970d79971da1539a400ba1",
            "max_address_length": 34,
            "maxfee_kb": 40000000,
            "min_address_length": 27,
            "minfee_kb": 1000,
            "name": "Viacoin",
            "segwit": true,
            "shortcut": "VIA",
            "signed_message_header": "Viacoin Signed Message:\n",
            "slip44": 14,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": 78792518,
            "xpub_magic_segwit_p2sh": 77429938
        },
        {
            "address_type": 142,
            "address_type_p2sh": 145,
            "bech32_prefix": null,
            "blockbook": [
                "https://blockbook.zcore.cash"
            ],
            "blocktime_seconds": 120,
            "cashaddr_prefix": null,
            "coin_label": "ZCore",
            "coin_name": "ZCore",
            "coin_shortcut": "ZCR",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "695b79c8c234b45b2eeb4722f33373e471c9b686ff78efeb39da95f824a9f81b",
            "max_address_length": 95,
            "maxfee_kb": 1000000,
            "min_address_length": 34,
            "minfee_kb": 1000,
            "name": "ZCore",
            "segwit": false,
            "shortcut": "ZCR",
            "signed_message_header": "DarkNet Signed Message:\n",
            "slip44": 428,
            "support": {
                "connect": true,
                "trezor1": "1.8.4",
                "trezor2": "2.1.7",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 78791432,
            "xpub_magic": 78792518,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 7352,
            "address_type_p2sh": 7357,
            "bech32_prefix": null,
            "blockbook": [
                "https://zec1.trezor.io",
                "https://zec2.trezor.io",
                "https://zec3.trezor.io",
                "https://zec4.trezor.io",
                "https://zec5.trezor.io"
            ],
            "blocktime_seconds": 150,
            "cashaddr_prefix": null,
            "coin_label": "Zcash",
            "coin_name": "Zcash",
            "coin_shortcut": "ZEC",
            "consensus_branch_id": {
                "1": 0,
                "2": 0,
                "3": 1537743641,
                "4": 733220448
            },
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 546,
            "extra_data": true,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "00040fe8ec8471911baa1db1266ea15dd06b4a8a5c453883c000b031973dce08",
            "max_address_length": 95,
            "maxfee_kb": 1000000,
            "min_address_length": 35,
            "minfee_kb": 1000,
            "name": "Zcash",
            "segwit": false,
            "shortcut": "ZEC",
            "signed_message_header": "Zcash Signed Message:\n",
            "slip44": 133,
            "support": {
                "connect": true,
                "trezor1": "1.7.1",
                "trezor2": "2.0.8",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 7461,
            "address_type_p2sh": 7354,
            "bech32_prefix": null,
            "blockbook": [],
            "blocktime_seconds": 150,
            "cashaddr_prefix": null,
            "coin_label": "Zcash Testnet",
            "coin_name": "Zcash Testnet",
            "coin_shortcut": "TAZ",
            "consensus_branch_id": {
                "1": 0,
                "2": 0,
                "3": 1537743641,
                "4": 733220448
            },
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Normal": 10
            },
            "dust_limit": 546,
            "extra_data": true,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "05a60a92d99d85997cce3b87616c089f6124d7342af37106edc76126334a2c38",
            "max_address_length": 95,
            "maxfee_kb": 10000000,
            "min_address_length": 35,
            "minfee_kb": 1000,
            "name": "Zcash Testnet",
            "segwit": false,
            "shortcut": "TAZ",
            "signed_message_header": "Zcash Signed Message:\n",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 70615956,
            "xpub_magic": 70617039,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 82,
            "address_type_p2sh": 7,
            "bech32_prefix": null,
            "blockbook": [],
            "blocktime_seconds": 600,
            "cashaddr_prefix": null,
            "coin_label": "Zcoin",
            "coin_name": "Zcoin",
            "coin_shortcut": "XZC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Economy": 10,
                "High": 200,
                "Low": 1,
                "Normal": 100
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "4381deb85b1b2c9843c222944b616d997516dcbd6a964e1eaf0def0830695233",
            "max_address_length": 34,
            "maxfee_kb": 1000000,
            "min_address_length": 27,
            "minfee_kb": 0,
            "name": "Zcoin",
            "segwit": false,
            "shortcut": "XZC",
            "signed_message_header": "Zcoin Signed Message:\n",
            "slip44": 136,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": true
            },
            "timestamp": false,
            "xprv_magic": 76066276,
            "xpub_magic": 76067358,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        },
        {
            "address_type": 65,
            "address_type_p2sh": 178,
            "bech32_prefix": null,
            "blockbook": [],
            "blocktime_seconds": 600,
            "cashaddr_prefix": null,
            "coin_label": "Zcoin Testnet",
            "coin_name": "Zcoin Testnet",
            "coin_shortcut": "tXZC",
            "consensus_branch_id": null,
            "curve_name": "secp256k1",
            "decimals": 8,
            "decred": false,
            "default_fee_b": {
                "Economy": 10,
                "High": 200,
                "Low": 1,
                "Normal": 100
            },
            "dust_limit": 546,
            "extra_data": false,
            "force_bip143": false,
            "fork_id": null,
            "hash_genesis_block": "7ac038c193c2158c428c59f9ae0c02a07115141c6e9dc244ae96132e99b4e642",
            "max_address_length": 35,
            "maxfee_kb": 1000000,
            "min_address_length": 27,
            "minfee_kb": 0,
            "name": "Zcoin Testnet",
            "segwit": false,
            "shortcut": "tXZC",
            "signed_message_header": "Zcoin Signed Message:\n",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "timestamp": false,
            "xprv_magic": 70615956,
            "xpub_magic": 70617039,
            "xpub_magic_segwit_native": null,
            "xpub_magic_segwit_p2sh": null
        }
    ],
    "erc20": [],
    "eth": [
        {
            "blockbook": [
                "https://eth1.trezor.io",
                "https://eth2.trezor.io"
            ],
            "chain": "eth",
            "chain_id": 1,
            "name": "Ethereum",
            "rskip60": false,
            "shortcut": "ETH",
            "slip44": 60,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": true
            },
            "url": "https://www.ethereum.org"
        },
        {
            "blockbook": [],
            "chain": "exp",
            "chain_id": 2,
            "name": "Expanse",
            "rskip60": false,
            "shortcut": "EXP",
            "slip44": 40,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://expanse.tech"
        },
        {
            "blockbook": [
                "https://ropsten1.trezor.io",
                "https://ropsten2.trezor.io"
            ],
            "chain": "rop",
            "chain_id": 3,
            "name": "Ethereum Testnet Ropsten",
            "rskip60": false,
            "shortcut": "tROP",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://www.ethereum.org"
        },
        {
            "blockbook": [],
            "chain": "rin",
            "chain_id": 4,
            "name": "Ethereum Testnet Rinkeby",
            "rskip60": false,
            "shortcut": "tRIN",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://rinkeby.io"
        },
        {
            "blockbook": [],
            "chain": "ubq",
            "chain_id": 8,
            "name": "Ubiq",
            "rskip60": false,
            "shortcut": "UBQ",
            "slip44": 108,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://ubiqsmart.com"
        },
        {
            "blockbook": [],
            "chain": "etsc",
            "chain_id": 28,
            "name": "Ethereum Social",
            "rskip60": false,
            "shortcut": "ETSC",
            "slip44": 1128,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://ethereumsocial.kr"
        },
        {
            "blockbook": [],
            "chain": "rsk",
            "chain_id": 30,
            "name": "RSK",
            "rskip60": true,
            "shortcut": "RBTC",
            "slip44": 137,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://www.rsk.co"
        },
        {
            "blockbook": [],
            "chain": "trsk",
            "chain_id": 31,
            "name": "RSK Testnet",
            "rskip60": true,
            "shortcut": "tRBTC",
            "slip44": 37310,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://www.rsk.co"
        },
        {
            "blockbook": [],
            "chain": "kov",
            "chain_id": 42,
            "name": "Ethereum Testnet Kovan",
            "rskip60": false,
            "shortcut": "tKOV",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://www.ethereum.org"
        },
        {
            "blockbook": [],
            "chain": "go",
            "chain_id": 60,
            "name": "GoChain",
            "rskip60": false,
            "shortcut": "GO",
            "slip44": 6060,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://gochain.io"
        },
        {
            "blockbook": [
                "https://etc1.trezor.io",
                "https://etc2.trezor.io"
            ],
            "chain": "etc",
            "chain_id": 61,
            "name": "Ethereum Classic",
            "rskip60": false,
            "shortcut": "ETC",
            "slip44": 61,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": true
            },
            "url": "https://ethereumclassic.github.io"
        },
        {
            "blockbook": [],
            "chain": "tetc",
            "chain_id": 62,
            "name": "Ethereum Classic Testnet",
            "rskip60": false,
            "shortcut": "tETC",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://ethereumclassic.github.io"
        },
        {
            "blockbook": [],
            "chain": "ella",
            "chain_id": 64,
            "name": "Ellaism",
            "rskip60": false,
            "shortcut": "ELLA",
            "slip44": 163,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://ellaism.org"
        },
        {
            "blockbook": [],
            "chain": "mix",
            "chain_id": 76,
            "name": "Mix",
            "rskip60": false,
            "shortcut": "MIX",
            "slip44": 76,
            "support": {
                "connect": true,
                "trezor1": "1.7.2",
                "trezor2": "2.0.10",
                "webwallet": false
            },
            "url": "https://www.mix-blockchain.org"
        },
        {
            "blockbook": [],
            "chain": "ere",
            "chain_id": 466,
            "name": "EtherCore",
            "rskip60": false,
            "shortcut": "ERE",
            "slip44": 466,
            "support": {
                "connect": true,
                "trezor1": "1.8.4",
                "trezor2": "2.2.2",
                "webwallet": false
            },
            "url": "https://ethercore.org"
        },
        {
            "blockbook": [],
            "chain": "clo",
            "chain_id": 820,
            "name": "Callisto",
            "rskip60": false,
            "shortcut": "CLO",
            "slip44": 820,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://callisto.network"
        },
        {
            "blockbook": [],
            "chain": "ath",
            "chain_id": 1620,
            "name": "Atheios",
            "rskip60": false,
            "shortcut": "ATH",
            "slip44": 1620,
            "support": {
                "connect": true,
                "trezor1": "1.6.3",
                "trezor2": "2.0.8",
                "webwallet": false
            },
            "url": "https://atheios.com"
        },
        {
            "blockbook": [],
            "chain": "egem",
            "chain_id": 1987,
            "name": "EtherGem",
            "rskip60": false,
            "shortcut": "EGEM",
            "slip44": 1987,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://egem.io"
        },
        {
            "blockbook": [],
            "chain": "eosc",
            "chain_id": 2018,
            "name": "EOS Classic",
            "rskip60": false,
            "shortcut": "EOSC",
            "slip44": 2018,
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "url": "https://eos-classic.io"
        },
        {
            "blockbook": [],
            "chain": "reosc",
            "chain_id": 2894,
            "name": "REOSC Ecosystem",
            "rskip60": false,
            "shortcut": "REOSC",
            "slip44": 2894,
            "support": {
                "connect": true,
                "trezor1": "1.7.2",
                "trezor2": "2.0.11",
                "webwallet": false
            },
            "url": "https://reosc.io"
        },
        {
            "blockbook": [],
            "chain": "esn",
            "chain_id": 31102,
            "name": "Ethersocial Network",
            "rskip60": false,
            "shortcut": "ESN",
            "slip44": 31102,
            "support": {
                "connect": true,
                "trezor1": "1.6.3",
                "trezor2": "2.0.8",
                "webwallet": false
            },
            "url": "https://ethersocial.org"
        },
        {
            "blockbook": [],
            "chain": "teo",
            "chain_id": 33416,
            "name": "Trust ETH reOrigin",
            "rskip60": false,
            "shortcut": "TEO",
            "slip44": 33416,
            "support": {
                "connect": true,
                "trezor1": "1.8.2",
                "trezor2": "2.1.1",
                "webwallet": false
            },
            "url": "https://tao.foundation"
        },
        {
            "blockbook": [],
            "chain": "akroma",
            "chain_id": 200625,
            "name": "Akroma",
            "rskip60": false,
            "shortcut": "AKA",
            "slip44": 200625,
            "support": {
                "connect": true,
                "trezor1": "1.6.3",
                "trezor2": "2.0.8",
                "webwallet": false
            },
            "url": "https://akroma.io"
        },
        {
            "blockbook": [],
            "chain": "etho",
            "chain_id": 1313114,
            "name": "Ether-1",
            "rskip60": false,
            "shortcut": "ETHO",
            "slip44": 1313114,
            "support": {
                "connect": true,
                "trezor1": "1.6.3",
                "trezor2": "2.0.8",
                "webwallet": false
            },
            "url": "https://ether1.org"
        },
        {
            "blockbook": [],
            "chain": "music",
            "chain_id": 7762959,
            "name": "Musicoin",
            "rskip60": false,
            "shortcut": "MUSIC",
            "slip44": 184,
            "support": {
                "connect": true,
                "trezor1": "1.6.3",
                "trezor2": "2.0.8",
                "webwallet": false
            },
            "url": "https://musicoin.org"
        },
        {
            "blockbook": [],
            "chain": "pirl",
            "chain_id": 3125659152,
            "name": "Pirl",
            "rskip60": false,
            "shortcut": "PIRL",
            "slip44": 164,
            "support": {
                "connect": true,
                "trezor1": "1.6.3",
                "trezor2": "2.0.8",
                "webwallet": false
            },
            "url": "https://pirl.io"
        }
    ],
    "misc": [
        {
            "blockchain_link": null,
            "curve": "ed25519",
            "decimals": 6,
            "name": "Cardano",
            "shortcut": "ADA",
            "slip44": 1815,
            "support": {
                "connect": true,
                "trezor1": false,
                "trezor2": "2.0.8",
                "webwallet": false
            }
        },
        {
            "blockchain_link": null,
            "curve": "secp256k1",
            "decimals": 8,
            "name": "Binance Chain",
            "shortcut": "BNB",
            "slip44": 714,
            "support": {
                "connect": true,
                "trezor1": false,
                "trezor2": "2.1.5",
                "webwallet": false
            }
        },
        {
            "blockchain_link": null,
            "curve": "secp256k1",
            "decimals": 4,
            "name": "EOS",
            "shortcut": "EOS",
            "slip44": 194,
            "support": {
                "connect": true,
                "trezor1": false,
                "trezor2": "2.1.1",
                "webwallet": false
            }
        },
        {
            "blockchain_link": null,
            "curve": "ed25519",
            "decimals": 8,
            "name": "Lisk",
            "shortcut": "LSK",
            "slip44": 134,
            "support": {
                "connect": true,
                "trezor1": "1.7.1",
                "trezor2": "2.0.7",
                "webwallet": false
            }
        },
        {
            "blockchain_link": {
                "type": "ripple",
                "url": [
                    "wss://s.altnet.rippletest.net"
                ]
            },
            "curve": "secp256k1",
            "decimals": 6,
            "name": "Ripple Testnet",
            "shortcut": "tXRP",
            "slip44": 1,
            "support": {
                "connect": true,
                "trezor1": false,
                "trezor2": "2.0.8",
                "webwallet": false
            }
        },
        {
            "blockchain_link": null,
            "curve": "ed25519",
            "decimals": 7,
            "name": "Stellar",
            "shortcut": "XLM",
            "slip44": 148,
            "support": {
                "connect": true,
                "trezor1": "1.7.1",
                "trezor2": "2.0.8",
                "webwallet": false
            }
        },
        {
            "blockchain_link": {
                "type": "ripple",
                "url": [
                    "wss://s1.ripple.com",
                    "wss://s-east.ripple.com",
                    "wss://s-west.ripple.com"
                ]
            },
            "curve": "secp256k1",
            "decimals": 6,
            "name": "Ripple",
            "shortcut": "XRP",
            "slip44": 144,
            "support": {
                "connect": true,
                "trezor1": false,
                "trezor2": "2.0.8",
                "webwallet": false
            }
        },
        {
            "blockchain_link": null,
            "curve": "ed25519",
            "decimals": 6,
            "name": "Tezos",
            "shortcut": "XTZ",
            "slip44": 1729,
            "support": {
                "connect": true,
                "trezor1": false,
                "trezor2": "2.0.8",
                "webwallet": false
            }
        }
    ],
    "nem": [
        {
            "divisibility": 6,
            "mosaic": "xem",
            "name": "NEM",
            "namespace": "nem",
            "shortcut": "XEM",
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "ticker": "XEM"
        },
        {
            "divisibility": 6,
            "fee": 10,
            "levy": "MosaicLevy_Percentile",
            "levy_mosaic": "coin",
            "levy_namespace": "dim",
            "mosaic": "coin",
            "name": "DIMCOIN",
            "namespace": "dim",
            "networks": [
                104
            ],
            "shortcut": "DIM",
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "ticker": "DIM"
        },
        {
            "divisibility": 6,
            "mosaic": "token",
            "name": "DIM TOKEN",
            "namespace": "dim",
            "networks": [
                104
            ],
            "shortcut": "DIMTOK",
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "ticker": "DIMTOK"
        },
        {
            "divisibility": 0,
            "mosaic": "breeze-token",
            "name": "Breeze Token",
            "namespace": "breeze",
            "networks": [
                104
            ],
            "shortcut": "BREEZE",
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "ticker": "BREEZE"
        },
        {
            "divisibility": 0,
            "mosaic": "heart",
            "name": "PacNEM Game Credits",
            "namespace": "pacnem",
            "networks": [
                104
            ],
            "shortcut": "PAC:HRT",
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "ticker": "PAC:HRT"
        },
        {
            "divisibility": 6,
            "fee": 100,
            "levy": "MosaicLevy_Percentile",
            "levy_mosaic": "xem",
            "levy_namespace": "nem",
            "mosaic": "cheese",
            "name": "PacNEM Score Tokens",
            "namespace": "pacnem",
            "networks": [
                104
            ],
            "shortcut": "PAC:CHS",
            "support": {
                "connect": true,
                "trezor1": "1.6.2",
                "trezor2": "2.0.7",
                "webwallet": false
            },
            "ticker": "PAC:CHS"
        }
    ]
};

var globalBridgeReleases = [
    {
        "version": [2, 0, 27],
        "directory": "bridge/{version}/",
        "packages": [
            {
                "platform": ["deb64"],
                "name": "Linux 64-bit (deb)",
                "url": "trezor-bridge_{version}_amd64.deb"
            },
            {
                "platform": ["rpm64"],
                "name": "Linux 64-bit (rpm)",
                "url": "trezor-bridge-{version}-1.x86_64.rpm"
            },
            {
                "platform": ["deb32"],
                "name": "Linux 32-bit (deb)",
                "url": "trezor-bridge_{version}_i386.deb"
            },
            {
                "platform": ["rpm32"],
                "name": "Linux 32-bit (rpm)",
                "url": "trezor-bridge-{version}-1.i386.rpm"
            },
            {
                "platform": ["mac"],
                "name": "Mac OS X",
                "url": "trezor-bridge-{version}.pkg",
                "signature": "trezor-bridge-{version}.pkg.asc"
            },
            {
                "platform": ["win32", "win64"],
                "name": "Windows",
                "url": "trezor-bridge-{version}-win32-install.exe",
                "signature": "trezor-bridge-{version}-win32-install.exe.asc"
            }
        ],
        "changelog": "* Fix Certificate issue on Windows"
    }
];

var globalFirmwareReleases = [
    {
        "required": false,
        "version": [1, 9, 0],
        "bootloader_version": [1, 8, 0],
        "min_bridge_version": [2, 0, 25],
        "min_firmware_version": [1, 6, 2],
        "min_bootloader_version": [1, 5, 0],
        "url": "data/firmware/1/trezor-1.9.0.bin",
        "url_bitcoinonly": "data/firmware/1/trezor-1.9.0-bitcoinonly.bin",
        "fingerprint": "1f40d1e68f9d182888b5b60da5209eff047ec68fcc96a5c9b61b0e55dd07d458",
        "fingerprint_bitcoinonly": "93a670dd20d044bf76cfce6eecd2a85918acdebe616229dbb31250fd03a33870",
        "changelog": "*Introduce Wipe Code\n* Introduce passphrase cache"
    },
    {
        "required": false,
        "version": [1, 8, 3],
        "bootloader_version": [1, 8, 0],
        "min_bridge_version": [2, 0, 25],
        "min_firmware_version": [1, 6, 2],
        "min_bootloader_version": [1, 5, 0],
        "url": "data/firmware/1/trezor-1.8.3.bin",
        "url_bitcoinonly": "data/firmware/1/trezor-1.8.3-bitcoinonly.bin",
        "fingerprint": "496aecfab867504b2283a9f057a0b2fd9d17970a22c81f6ad74232e7b914ce68",
        "fingerprint_bitcoinonly": "13d6089cb935f453eaddbfe193e0ab37924a7aa66f684355a4fe5c660c18247a",
        "changelog": "* Small code improvements"
    },
    {
        "required": false,
        "version": [1, 8, 2],
        "bootloader_version": [1, 8, 0],
        "min_bridge_version": [2, 0, 25],
        "min_firmware_version": [1, 6, 2],
        "min_bootloader_version": [1, 5, 0],
        "url": "data/firmware/1/trezor-1.8.2.bin",
        "fingerprint": "909742eddcffdc72ca854557962ecad90e97585770f514170abe7a691b0c6eb1",
        "changelog": "* Security improvements\n* Fix display of non-divisible OMNI amounts"
    },
    {
        "required": false,
        "version": [1, 8, 1],
        "bootloader_version": [1, 8, 0],
        "min_bridge_version": [2, 0, 25],
        "min_firmware_version": [1, 6, 2],
        "min_bootloader_version": [1, 5, 0],
        "url": "data/firmware/1/trezor-1.8.1.bin",
        "fingerprint": "019e849c1eb285a03a92bbad6d18a328af3b4dc6999722ebb47677b403a4cd16",
        "changelog": "* Fix fault when using the device with no PIN* Fix OMNI transactions parsing"
    },
    {
        "required": false,
        "version": [1, 8, 0],
        "bootloader_version": [1, 8, 0],
        "min_bridge_version": [2, 0, 25],
        "min_firmware_version": [1, 6, 2],
        "min_bootloader_version": [1, 5, 0],
        "url": "data/firmware/1/trezor-1.8.0.bin",
        "tags": ["security"],
        "fingerprint": "d65f0c07a6a9c53d8b5287798eb53154b33f9e87cd38a3701970e3d0a750a659",
        "changelog": "* Security improvements\n* Upgraded to new storage format\n* Stellar and NEM fixes\n* New coins: ATS, KMD, XPM, XSN, ZCL\n* New ETH tokens"
    },
    {
        "required": false,
        "version": [1, 7, 3],
        "bootloader_version": [1, 6, 1],
        "min_bridge_version": [2, 0, 25],
        "min_firmware_version": [1, 6, 2],
        "min_bootloader_version": [1, 5, 0],
        "url": "data/firmware/1/trezor-1.7.3.bin",
        "fingerprint": "10acc6aa4f24aff36627473b98c23dc4f6d0220d33bc1e09cb572f02410ffdaf",
        "changelog": "* Fix USB issue on some Windows 10 installations"
    },
    {
        "required": false,
        "version": [1, 7, 2],
        "bootloader_version": [1, 6, 0],
        "min_bridge_version": [2, 0, 25],
        "min_firmware_version": [1, 6, 2],
        "min_bootloader_version": [1, 5, 0],
        "url": "data/firmware/1/trezor-1.7.2.bin",
        "fingerprint": "4d5c7ac191dba315b2433af27c187925fb713d06984cc6f566231d809dd8d370",
        "changelog": "* Add support for OMNI layer: OMNI/MAID/USDT\n* U2F fixes\n* Don't ask for PIN if it has been just set",
        "notes": "https://blog.trezor.io/trezor-one-1-7-2-support-for-omni-layer-cbf699e4ffae"
    },
    {
        "required": false,
        "version": [1, 7, 1],
        "bootloader_version": [1, 6, 0],
        "min_bridge_version": [2, 0, 25],
        "min_firmware_version": [1, 6, 2],
        "min_bootloader_version": [1, 5, 0],
        "url": "data/firmware/1/trezor-1.7.1.bin",
        "fingerprint": "1c303c50bb45d3f35da9e962d8405d0b8e89cc45e122496a48fce3995fa71d48",
        "changelog": "* Switch from HID to WebUSB\n* Add support for Stellar\n* Add support for Lisk\n* Add support for Zcash Sapling hardfork\n* Implement seedless setup",
        "notes": "https://blog.trezor.io/firmware-updates-moving-from-the-beta-wallet-to-stable-c487931c3596"
    },
    {
        "required": false,
        "version": [1, 6, 3],
        "bootloader_version": [1, 5, 1],
        "min_bridge_version": [1, 1, 5],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.6.3.bin",
        "fingerprint": "e8dbb4b7fe8384afd4c99790277c2f2f366a1a0f3957aa3545c75371a99a8fcc",
        "changelog": "* Implement RSKIP-60 Ethereum checksum encoding\n* Add support for new Ethereum networks (ESN, AKA, ETHO, MUSI, PIRL, ATH, GO)\n* Add support for new 80 Ethereum tokens\n* Improve MPU configuration",
        "notes": "https://blog.trezor.io/trezor-one-firmware-update-1-6-3-73894c0506d"
    },
    {
        "required": false,
        "version": [1, 6, 2],
        "bootloader_version": [1, 5, 0],
        "min_bridge_version": [1, 1, 5],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.6.2.bin",
        "fingerprint": "d31304f793854e343df6ccf1804f7e2abf48ddcd82a379ca2d3711d54127e138",
        "changelog": "* Add possibility to set custom auto-lock delay\n* Bitcoin Cash cashaddr support\n* Zcash Overwinter hardfork support\n* Support for new coins:\n  - Decred, Bitcoin Private, Fujicoin, Groestlcoin, Vertcoin, Viacoin, Zcoin\n* Support for new Ethereum networks:\n  - EOS Classic, Ethereum Social, Ellaism, Callisto, EtherGem, Wanchain\n* Support for 500+ new Ethereum tokens",
        "notes": "https://blog.trezor.io/june-updates-trezor-devices-one-modelt-wallet-zcash-cashaddr-doge-8d98c2a73036"
    },
    {
        "required": true,
        "version": [1, 6, 1],
        "bootloader_version": [1, 4, 0],
        "min_bridge_version": [1, 1, 5],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.6.1.bin",
        "fingerprint": "83c3190a94e524ac83a1704eb584a2ab53f8a65a893b1ab52e7135812857c807",
        "changelog": "* Use fixed-width font for addresses\n* Lots of under-the-hood improvements\n* Fixed issue with write-protection settings",
        "notes": "https://blog.trezor.io/trezor-one-firmware-update-1-6-1-eecd0534ab95"
    },
    {
        "required": false,
        "version": [1, 6, 0],
        "min_bridge_version": [1, 1, 5],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.6.0.bin",
        "fingerprint": "e40f6ce12724c2d24234a7752953b88fd9ec28b3ec72c0dbfa280095a67a06ca",
        "changelog": "* Native SegWit (Bech32) address support\n* Show recognized BIP44/BIP49 paths in GetAddress dialog\n* NEM support\n* Expanse and UBIQ chains support\n* Bitcoin Gold, DigiByte, Monacoin support\n* Ed25519 collective signatures (CoSi) support",
        "notes": "https://blog.trezor.io/expanded-cryptos-cryptocurrency-support-firmware-1-6-0-3825b5853470"
    },
    {
        "required": true,
        "version": [1, 5, 2],
        "min_bridge_version": [1, 1, 5],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.5.2.bin",
        "fingerprint": "99f71379dec893fbe109832a1150f338660be686fe6b4903ff10ff751ba4e448",
        "changelog": "* clean memory on start\n* fix storage import from older versions",
        "notes": "https://blog.trezor.io/trezor-firmware-security-update-1-5-2-5ef1b6f13fed"
    },
    {
        "required": false,
        "version": [1, 5, 1],
        "min_bridge_version": [1, 1, 5],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.5.1.bin",
        "fingerprint": "1c1fa9802cbd6a947a4f3e78f209d3efe49eb4abbacb101bbc3a0a709c742707",
        "changelog": "* Wipe storage after 16 wrong PIN attempts\n* Enable Segwit for Bitcoin\n* Bcash aka Bitcoin Cash support\n* Message signing/verification for Ethereum and Segwit\n* Make address dialog nicer (switch text/QR via button)\n* Use checksum for Ethereum addresses\n* Add more ERC-20 tokens, handle unrecognized ERC-20 tokens\n* Allow \"dry run\" recovery procedure\n* Allow separated backup procedure"
    },
    {
        "required": false,
        "version": [1, 5, 0],
        "min_bridge_version": [1, 1, 5],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.5.0.bin",
        "fingerprint": "c4eddafd29b580d8482cda68e61bdcf1740d77520ef3a603758646bbffe957ea",
        "changelog": "* Enable Segwit for Testnet and Litecoin\n* Enable ERC-20 tokens for Ethereum chains"
    },
    {
        "required": false,
        "version": [1, 4, 2],
        "min_bridge_version": [1, 1, 5],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.4.2.bin",
        "fingerprint": "a4b39f01bd134d01d7534821445bf779dbe6c25f0fcf7c7cb285a79b17f25e0a",
        "changelog": "* New Matrix-based recovery method\n* Minor Ethereum fixes (including EIP-155 replay protection)\n* Minor USB, U2F and GPG fixes"
    },
    {
        "required": false,
        "version": [1, 4, 1],
        "min_bridge_version": [1, 1, 5],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.4.1.bin",
        "fingerprint": "92636493f76f352213e681bbc26eb3a8844f7b8a3044214b65c3c2c10a0f788c",
        "changelog": "* Support for Zcash JoinSplit transactions\n* Enable device lock after 10 minutes of inactivity\n* Enable device lock by pressing left button for 2 seconds\n* Confirm dialog for U2F counter change"
    },
    {
        "required": false,
        "version": [1, 4, 0],
        "min_bridge_version": [1, 1, 5],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.4.0.bin",
        "fingerprint": "5764715dbcf8ed88bc0ae1c2f715277f22b67f26c15e1f7543b2b44913b5c255",
        "changelog": "* U2F support\n* Ethereum support\n* GPG decryption support\n* Zcash support",
        "notes": "https://blog.trezor.io/secure-two-factor-authentication-with-trezor-u2f-e940fd5a60af"
    },
    {
        "required": false,
        "version": [1, 3, 6],
        "min_bridge_version": [1, 1, 5],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.3.6.bin",
        "fingerprint": "03b559a758961b2bfd4443e6c36c10025268cf033ecd376fdd7a79ff658bf511",
        "changelog": "* Enable advanced transactions such as ones with REPLACE-BY-FEE and CHECKLOCKTIMEVERIFY\n* Fix message signing for altcoins\n* Message verification now shows address\n* Enable GPG signing support\n* Enable Ed25519 curve (for SSH and GPG)\n* Use separate deterministic hierarchy for NIST256P1 and Ed25519 curves\n* Users using SSH already need to regenerate their keys using the new firmware!!!",
        "notes": "https://blog.trezor.io/trezor-firmware-1-3-6-20a7df6e692"
    },
    {
        "required": false,
        "version": [1, 3, 5],
        "min_bridge_version": [1, 1, 2],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.3.5.bin",
        "fingerprint": "7d5d2c7defb93081a7fb7a2d1e57677fbac2a3e3e50f22fa3ff83ec4ddaafd9d",
        "changelog": "* Double size font for recovery words during the device setup\n* Optimizations for simultaneous access when more applications try communicate with the device",
        "notes": "https://blog.trezor.io/trezor-firmware-1-3-5-allows-for-multisession-operation-cc4c25197855"
    },
    {
        "required": false,
        "version": [1, 3, 4],
        "min_bridge_version": [1, 1, 2],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.3.4.bin",
        "fingerprint": "49e044eec84a9c210a09319d27a3ab8ba889ddeaa4d68f99d163f65267fce134",
        "changelog": "* Screensaver active on ClearSession message\n* Support for NIST P-256 curve\n* Updated SignIdentity to v2 format\n* Show seconds counter during PIN lockdown\n* Updated maxfee per kb for coins",
        "notes": "https://blog.trezor.io/trezor-firmware-1-3-4-enables-ssh-login-86a622d7e609"
    },
    {
        "required": true,
        "version": [1, 3, 3],
        "min_bridge_version": [1, 1, 0],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.3.3.bin",
        "fingerprint": "7fcee4c0459c22109f3fcfe0040148e9be6d30947f7fffb76c66cc500681257c",
        "changelog": "* Ask for PIN on GetAddress and GetPublicKey\n* Signing speed improved",
        "notes": "http://satoshilabs.com/old/news/2015-04-07-trezor-firmware-1-3-3-connect-api/"
    },
    {
        "required": false,
        "version": [1, 3, 2],
        "min_bridge_version": [1, 1, 0],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.3.2.bin",
        "fingerprint": "180656fbf94e43e0092eaf22c30ab3451a547b4213119bd62763dc97b94ad0d0",
        "changelog": "* Fix check during transaction streaming\n* Login feature via SignIdentity message\n* GetAddress for multisig shows M of N description\n* PIN checking in constant time",
        "notes": ""
    },
    {
        "required": false,
        "version": [1, 3, 1],
        "min_bridge_version": [1, 1, 0],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.3.1.bin",
        "fingerprint": "8030e257fc4c75a8f4a0325f8ea37428dd8fc68a5f9ec5f8e2d1a0de328860cc",
        "changelog": "* Optimized signing speed\n* Enabled OP_RETURN\n* Added option to change home screen\n* Moved fee calculation before any signing\n* Made PIN delay increase immune against hardware hacking",
        "notes": "http://satoshilabs.com/old/news/2015-02-18-trezor-firmware-1-3-1-smart-property-notary-service-customized-home-screen/"
    },
    {
        "required": false,
        "version": [1, 3, 0],
        "min_bridge_version": [1, 1, 0],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.3.0.bin",
        "fingerprint": "1d417e1e99a4880f7e03b991cf318eebe7b6cb453d2f55b8112adc5fd1a8293c",
        "changelog": "* Added multisig support\n* Added visual validation of receiving address\n* Added ECIES encryption capabilities",
        "notes": "http://satoshilabs.com/old/news/2015-01-13-trezor-firmware-1-3-0-update-multisig/"
    },
    {
        "required": true,
        "version": [1, 2, 1],
        "min_bridge_version": [1, 1, 0],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.2.1.bin",
        "fingerprint": "0f8685ee46632162b549eb22b99a1e4e013d6796ae536ea6acb877a491f564f6",
        "changelog": "* Added stack overflow protection\n* Added compatibility with Trezor Bridge",
        "notes": "http://satoshilabs.com/old/news/2014-08-01-trezor-firmware-1-2-1-released/"
    },
    {
        "required": false,
        "version": [1, 2, 0],
        "min_bridge_version": [1, 1, 0],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.2.0.bin",
        "fingerprint": "0eec6fd320730acfa40963f0f470a47109378663907cc78b9c5797c19938c873",
        "changelog": "* Fix false positives for fee warning\n* Better UI for signing/verifying messages\n* Smaller firmware size"
    },
    {
        "required": false,
        "version": [1, 1, 0],
        "min_bridge_version": [1, 1, 0],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.1.0.bin",
        "fingerprint": "a1709ead62659851933830f494cf9aa40047d1f098955aa93bd483b92df88c8e",
        "changelog": "* Minor UI fixes\n* Better handling of unexpected messages\n* Added AES support"
    },
    {
        "required": true,
        "version": [1, 0, 0],
        "min_bridge_version": [1, 1, 0],
        "min_firmware_version": [1, 0, 0],
        "min_bootloader_version": [1, 0, 0],
        "url": "data/firmware/1/trezor-1.0.0.bin",
        "fingerprint": "79371ee2ed2db8489aa4a5bce6907c24afc6de47e9658fef4cc12e2d902d9c51",
        "changelog": "* Added support for streaming of transactions into the device\n* Removed all current limits on size of signed transaction"
    }
];

var globalFirmware2Releases = [
    {
        "required": false,
        "version": [2, 3, 0],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 0, 8],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.3.0.bin",
        "url_bitcoinonly": "data/firmware/2/trezor-2.3.0-bitcoinonly.bin",
        "fingerprint": "212929f63fe1393e2ff57e06537a38cff281e3cfb3a4e17235079e2f08871e6c",
        "fingerprint_bitcoinonly": "bddc0fd3b52fd32d94b776048f62b3d03dcb6ab90140e482a042a2863093115f",
        "changelog": "* Introduce Wipe code\n* Introduce SD card protection\n* Introduce passphrase cache\n* U2F UX improvements\n* Security fixes"
    },
    {
        "required": false,
        "version": [2, 1, 8],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 0, 8],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.1.8.bin",
        "url_bitcoinonly": "data/firmware/2/trezor-2.1.8-bitcoinonly.bin",
        "fingerprint": "8a5fa12132651b6e33344fd025d0d90885f5cc1c342427ebcea4f0ae98b50d8c",
        "fingerprint_bitcoinonly": "ec752e9fa99a29979497e093b32bdb2b592783e2b48c87d8f6f0c18c73cd3022",
        "changelog": "* Support Tezos 005-BABYLON hardfork\n* Show XPUBs in GetAddress for multisig\n* Security improvements"
    },
    {
        "required": false,
        "version": [2, 1, 7],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 0, 8],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.1.7.bin",
        "url_bitcoinonly": "data/firmware/2/trezor-2.1.7-bitcoinonly.bin",
        "fingerprint": "acf1b4c6fec3624a8fc53f9130ff53d690c3fa1c134bd4ca3e58ee7b5a0441d8",
        "fingerprint_bitcoinonly": "fd92ac173a2cf93cc07ced3287e07800ed10466dc38c0c7240d9b20c689dd1d1",
        "changelog": "* Super Shamir (with Groups)\n* FIDO2 support with credential management\n* Fix low memory issue"
    },
    {
        "required": false,
        "version": [2, 1, 6],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 0, 8],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.1.6.bin",
        "url_bitcoinonly": "data/firmware/2/trezor-2.1.6-bitcoinonly.bin",
        "fingerprint": "e2032ad84108a85d4014d477b955b9181a1a56e6f222ef21bb7d47b503a02f0b",
        "fingerprint_bitcoinonly": "4e7f0f95d71631159b9e873f36a812c93a10eca1fad5f38c78ae7fbe4c1f6ed4",
        "changelog": "* Super Shamir (with Groups)\n* FIDO2 support with credential management"
    },
    {
        "required": false,
        "version": [2, 1, 5],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 1, 0],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.1.5.bin",
        "url_bitcoinonly": "data/firmware/2/trezor-2.1.5-bitcoinonly.bin",
        "fingerprint": "40e4bfaf3c5ec77872c1aaaac085aafcc443f60279ca2bb38d29c669233fdf62",
        "fingerprint_bitcoinonly": "9de90d9f8ca12506f3b9a4cbe7616294144d965d67daa3a03bfe6c0b74a44843",
        "changelog": "* Fix for sluggish U2F authentication when using Shamir\n* Fix UI for Shamir with 33 words\n* Fix Wanchain signing"
    },
    {
        "required": false,
        "version": [2, 1, 4],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 1, 0],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.1.4.bin",
        "fingerprint": "820611a92605b1ccc612b9bf8550617aec6962bd2484fcb6ae4792bc498654e4",
        "changelog": "* Shamir Backup with Recovery persistence\n* Touchscreen freeze fix\n* Fix display of non-divisible OMNI amounts"
    },
    {
        "required": false,
        "version": [2, 1, 1],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 0, 5],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.1.1.bin",
        "fingerprint": "1b3166a878658fcd2ff82c7ac9a2587da544fd105f678cc7b4d41cba5a8d4c01",
        "changelog": "* Hotfix for touchscreen freeze\n* Don't rotate the screen via swipe gesture\n* Set screen rotation via user setting\n* More strict path validations\n* Display non-zero locktime values\n* EOS support\n* Monero UI fixes\n* Speed and memory optimizations"
    },
    {
        "required": false,
        "version": [2, 1, 0],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 0, 5],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.1.0.bin",
        "tags": ["security"],
        "fingerprint": "bb5b0308807b45d41d1e2ab66a468152997ad69a01099789d8a35e464cde999f",
        "changelog": "* Security improvements\n* Upgraded to new storage format\n* Ripple, Stellar, Cardano and NEM fixes\n* New coins: ATS, AXE, FLO, GIN, KMD, NIX,\n  PIVX, REOSC, XPM, XSN, ZCL\n* New ETH tokens"
    },
    {
        "required": false,
        "version": [2, 0, 10],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 0, 5],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.0.10.bin",
        "fingerprint": "fcaa6ee206c2c121eb2d45d065d66f0879f14be45c244d4acf908be1de22275e",
        "changelog": "* Fix Monero payment ID computation\n* Fix issue with touch screen and flickering\n* Add support for OMNI layer: OMNI/MAID/USDT\n* Add support for new coins: BTX, CPC, GAME, RVN\n* Add support for new Ethereum tokens"
    },
    {
        "required": false,
        "version": [2, 0, 9],
        "bootloader_version": [2, 0, 0],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 0, 5],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.0.9.bin",
        "fingerprint": "87be93d6966e7a9eff78dc7b434d1a138ec8d1ee0300882d16f90b606f3a806b",
        "changelog": "* Small Monero and Segwit bugfixes"
    },
    {
        "required": false,
        "version": [2, 0, 8],
        "bootloader_version": [2, 0, 0],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 0, 5],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.0.8.bin",
        "fingerprint": "642b6215bda981f8eacafee34dbee5cdeee7d47d49f605bbe2828a8d9b79813d",
        "changelog": "* Monero support\n* Cardano support\n* Stellar support\n* Ripple support\n* Tezos support\n* Decred support\n* Groestlcoin support\n* Zencash support\n* Zcash sapling hardfork support\n* Implemented seedless setup"
    },
    {
        "required": false,
        "version": [2, 0, 7],
        "bootloader_version": [2, 0, 0],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 0, 5],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.0.7.bin",
        "fingerprint": "f3a42e640e526fba6574fafa520fc7d97ef9f557d24da24d9a2ea4176a4c4164",
        "changelog": "* Bitcoin Cash cashaddr support\n* Zcash Overwinter hardfork support\n* NEM support\n* Lisk support\n* Show warning on home screen if PIN is not set\n* Support for new coins:\n  - Bitcoin Private, Fujicoin, Vertcoin, Viacoin, Zcoin\n* Support for new Ethereum networks:\n  - EOS Classic, Ethereum Social, Ellaism, Callisto, EtherGem, Wanchain\n* Support for 500+ new Ethereum tokens",
        "notes": "https://blog.trezor.io/june-updates-trezor-devices-one-modelt-wallet-zcash-cashaddr-doge-8d98c2a73036"
    },
    {
        "required": false,
        "version": [2, 0, 6],
        "bootloader_version": [2, 0, 0],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 0, 5],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.0.6.bin",
        "fingerprint": "4eccabf2fd7e121ed0da657c064a65c5694402497e60ea2ac2dcf1e118db9cc6",
        "changelog": "* Fix layout for Ethereum transactions\n* Fix public key generation for SSH and GPG\n* Add special characters to passphrase keyboard"
    },
    {
        "required": true,
        "version": [2, 0, 5],
        "bootloader_version": [2, 0, 0],
        "min_bridge_version": [2, 0, 7],
        "min_firmware_version": [2, 0, 5],
        "min_bootloader_version": [2, 0, 0],
        "url": "data/firmware/2/trezor-2.0.5.bin",
        "fingerprint": "851172eab96c07bf9efb43771cb0fd14dc0320a68de047132c7bd787a1ad64e9",
        "changelog": "* First public release"
    }
];


var globalMessagesV6 = {
    "package": null,
    "messages": [
        {
            "name": "MultisigRedeemScriptType",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "HDNodePathType",
                    "name": "pubkeys",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "signatures",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "m",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "HDNodePathType",
                    "fields": [
                        {
                            "rule": "required",
                            "options": {},
                            "type": "HDNodeType",
                            "name": "node",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "ecdsa_curve_name",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "SPENDADDRESS"
                    },
                    "type": "InputScriptType",
                    "name": "script_type",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PublicKey",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "xpub",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MultisigRedeemScriptType",
                    "name": "multisig",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "SPENDADDRESS"
                    },
                    "type": "InputScriptType",
                    "name": "script_type",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Address",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "SPENDADDRESS"
                    },
                    "type": "InputScriptType",
                    "name": "script_type",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MessageSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "VerifyMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignTx",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "outputs_count",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "inputs_count",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 1
                    },
                    "type": "uint32",
                    "name": "version",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 0
                    },
                    "type": "uint32",
                    "name": "lock_time",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "expiry",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "overwintered",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "version_group_id",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "timestamp",
                    "id": 9
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TxRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "RequestType",
                    "name": "request_type",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TxRequestDetailsType",
                    "name": "details",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TxRequestSerializedType",
                    "name": "serialized",
                    "id": 3
                }
            ],
            "enums": [
                {
                    "name": "RequestType",
                    "values": [
                        {
                            "name": "TXINPUT",
                            "id": 0
                        },
                        {
                            "name": "TXOUTPUT",
                            "id": 1
                        },
                        {
                            "name": "TXMETA",
                            "id": 2
                        },
                        {
                            "name": "TXFINISHED",
                            "id": 3
                        },
                        {
                            "name": "TXEXTRADATA",
                            "id": 4
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [
                {
                    "name": "TxRequestDetailsType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "request_index",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "tx_hash",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "extra_data_len",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "extra_data_offset",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TxRequestSerializedType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "signature_index",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "signature",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "serialized_tx",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TxAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TransactionType",
                    "name": "tx",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "TransactionType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "version",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "TxInputType",
                            "name": "inputs",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "TxOutputBinType",
                            "name": "bin_outputs",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "lock_time",
                            "id": 4
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "TxOutputType",
                            "name": "outputs",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "inputs_cnt",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "outputs_cnt",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "extra_data",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "extra_data_len",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "expiry",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "overwintered",
                            "id": 11
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "version_group_id",
                            "id": 12
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "timestamp",
                            "id": 13
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "TxInputType",
                            "fields": [
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "address_n",
                                    "id": 1
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "prev_hash",
                                    "id": 2
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "prev_index",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "script_sig",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {
                                        "default": 4294967295
                                    },
                                    "type": "uint32",
                                    "name": "sequence",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {
                                        "default": "SPENDADDRESS"
                                    },
                                    "type": "InputScriptType",
                                    "name": "script_type",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "MultisigRedeemScriptType",
                                    "name": "multisig",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_tree",
                                    "id": 9
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_script_version",
                                    "id": 10
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "prev_block_hash_bip115",
                                    "id": 11
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "prev_block_height_bip115",
                                    "id": 12
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TxOutputBinType",
                            "fields": [
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 1
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "script_pubkey",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_script_version",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TxOutputType",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "address",
                                    "id": 1
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "address_n",
                                    "id": 2
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 3
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "OutputScriptType",
                                    "name": "script_type",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "MultisigRedeemScriptType",
                                    "name": "multisig",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "op_return_data",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_script_version",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "block_hash_bip115",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "block_height_bip115",
                                    "id": 9
                                }
                            ],
                            "enums": [
                                {
                                    "name": "OutputScriptType",
                                    "values": [
                                        {
                                            "name": "PAYTOADDRESS",
                                            "id": 0
                                        },
                                        {
                                            "name": "PAYTOSCRIPTHASH",
                                            "id": 1
                                        },
                                        {
                                            "name": "PAYTOMULTISIG",
                                            "id": 2
                                        },
                                        {
                                            "name": "PAYTOOPRETURN",
                                            "id": 3
                                        },
                                        {
                                            "name": "PAYTOWITNESS",
                                            "id": 4
                                        },
                                        {
                                            "name": "PAYTOP2SHWITNESS",
                                            "id": 5
                                        }
                                    ],
                                    "options": {}
                                }
                            ],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "FirmwareErase",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "length",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "FirmwareRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "offset",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "length",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "FirmwareUpload",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "hash",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SelfTest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "xpub",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "CardanoTxInputType",
                    "name": "inputs",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "CardanoTxOutputType",
                    "name": "outputs",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "transactions_count",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "CardanoTxInputType",
                    "fields": [
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "prev_hash",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "prev_index",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "type",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "CardanoTxOutputType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "address",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoTxRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "tx_index",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_hash",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_body",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoTxAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "transaction",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_hash",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_body",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Success",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "message",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Failure",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "FailureType",
                    "name": "code",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "message",
                    "id": 2
                }
            ],
            "enums": [
                {
                    "name": "FailureType",
                    "values": [
                        {
                            "name": "Failure_UnexpectedMessage",
                            "id": 1
                        },
                        {
                            "name": "Failure_ButtonExpected",
                            "id": 2
                        },
                        {
                            "name": "Failure_DataError",
                            "id": 3
                        },
                        {
                            "name": "Failure_ActionCancelled",
                            "id": 4
                        },
                        {
                            "name": "Failure_PinExpected",
                            "id": 5
                        },
                        {
                            "name": "Failure_PinCancelled",
                            "id": 6
                        },
                        {
                            "name": "Failure_PinInvalid",
                            "id": 7
                        },
                        {
                            "name": "Failure_InvalidSignature",
                            "id": 8
                        },
                        {
                            "name": "Failure_ProcessError",
                            "id": 9
                        },
                        {
                            "name": "Failure_NotEnoughFunds",
                            "id": 10
                        },
                        {
                            "name": "Failure_NotInitialized",
                            "id": 11
                        },
                        {
                            "name": "Failure_PinMismatch",
                            "id": 12
                        },
                        {
                            "name": "Failure_FirmwareError",
                            "id": 99
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ButtonRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "ButtonRequestType",
                    "name": "code",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "data",
                    "id": 2
                }
            ],
            "enums": [
                {
                    "name": "ButtonRequestType",
                    "values": [
                        {
                            "name": "ButtonRequest_Other",
                            "id": 1
                        },
                        {
                            "name": "ButtonRequest_FeeOverThreshold",
                            "id": 2
                        },
                        {
                            "name": "ButtonRequest_ConfirmOutput",
                            "id": 3
                        },
                        {
                            "name": "ButtonRequest_ResetDevice",
                            "id": 4
                        },
                        {
                            "name": "ButtonRequest_ConfirmWord",
                            "id": 5
                        },
                        {
                            "name": "ButtonRequest_WipeDevice",
                            "id": 6
                        },
                        {
                            "name": "ButtonRequest_ProtectCall",
                            "id": 7
                        },
                        {
                            "name": "ButtonRequest_SignTx",
                            "id": 8
                        },
                        {
                            "name": "ButtonRequest_FirmwareCheck",
                            "id": 9
                        },
                        {
                            "name": "ButtonRequest_Address",
                            "id": 10
                        },
                        {
                            "name": "ButtonRequest_PublicKey",
                            "id": 11
                        },
                        {
                            "name": "ButtonRequest_MnemonicWordCount",
                            "id": 12
                        },
                        {
                            "name": "ButtonRequest_MnemonicInput",
                            "id": 13
                        },
                        {
                            "name": "ButtonRequest_PassphraseType",
                            "id": 14
                        },
                        {
                            "name": "ButtonRequest_UnknownDerivationPath",
                            "id": 15
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ButtonAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PinMatrixRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "PinMatrixRequestType",
                    "name": "type",
                    "id": 1
                }
            ],
            "enums": [
                {
                    "name": "PinMatrixRequestType",
                    "values": [
                        {
                            "name": "PinMatrixRequestType_Current",
                            "id": 1
                        },
                        {
                            "name": "PinMatrixRequestType_NewFirst",
                            "id": 2
                        },
                        {
                            "name": "PinMatrixRequestType_NewSecond",
                            "id": 3
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PinMatrixAck",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "pin",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "on_device",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "passphrase",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "state",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseStateRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "state",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseStateAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "HDNodeType",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "depth",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "fingerprint",
                    "id": 2
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "child_num",
                    "id": 3
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "chain_code",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "private_key",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CipherKeyValue",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "encrypt",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "ask_on_encrypt",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "ask_on_decrypt",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "iv",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CipheredKeyValue",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "IdentityType",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "proto",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "user",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "host",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "port",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "path",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 0
                    },
                    "type": "uint32",
                    "name": "index",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignIdentity",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "IdentityType",
                    "name": "identity",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "challenge_hidden",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "challenge_visual",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "ecdsa_curve_name",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignedIdentity",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetECDHSessionKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "IdentityType",
                    "name": "identity",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "peer_public_key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "ecdsa_curve_name",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ECDHSessionKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "session_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiCommit",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiCommitment",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "commitment",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pubkey",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiSign",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "global_commitment",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "global_pubkey",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkDecision",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "yes_no",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "up_down",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "input",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkGetState",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkState",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "layout",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "pin",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "matrix",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "mnemonic",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "reset_word",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "reset_entropy",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "recovery_fake_word",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "recovery_word_pos",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "reset_word_pos",
                    "id": 11
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkStop",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkLog",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "level",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "bucket",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "text",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkMemoryRead",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "length",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkMemory",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "memory",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkMemoryWrite",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "memory",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "flash",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkFlashErase",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sector",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumAddress",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "nonce",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "gas_price",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "gas_limit",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "to",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data_initial_chunk",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "data_length",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "chain_id",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "tx_type",
                    "id": 10
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumTxRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "data_length",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "signature_v",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature_r",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature_s",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumTxAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data_chunk",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumSignMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumMessageSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumVerifyMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "LiskTransactionCommon",
                    "name": "transaction",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "LiskTransactionCommon",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "LiskTransactionType",
                            "name": "type",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {
                                "default": 0
                            },
                            "type": "uint64",
                            "name": "amount",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "recipient_id",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "sender_public_key",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "requester_public_key",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "signature",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "timestamp",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "LiskTransactionAsset",
                            "name": "asset",
                            "id": 9
                        }
                    ],
                    "enums": [
                        {
                            "name": "LiskTransactionType",
                            "values": [
                                {
                                    "name": "Transfer",
                                    "id": 0
                                },
                                {
                                    "name": "RegisterSecondPassphrase",
                                    "id": 1
                                },
                                {
                                    "name": "RegisterDelegate",
                                    "id": 2
                                },
                                {
                                    "name": "CastVotes",
                                    "id": 3
                                },
                                {
                                    "name": "RegisterMultisignatureAccount",
                                    "id": 4
                                },
                                {
                                    "name": "CreateDapp",
                                    "id": 5
                                },
                                {
                                    "name": "TransferIntoDapp",
                                    "id": 6
                                },
                                {
                                    "name": "TransferOutOfDapp",
                                    "id": 7
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [
                        {
                            "name": "LiskTransactionAsset",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "LiskSignatureType",
                                    "name": "signature",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "LiskDelegateType",
                                    "name": "delegate",
                                    "id": 2
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "string",
                                    "name": "votes",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "LiskMultisignatureType",
                                    "name": "multisignature",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "data",
                                    "id": 5
                                }
                            ],
                            "enums": [],
                            "messages": [
                                {
                                    "name": "LiskSignatureType",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "bytes",
                                            "name": "public_key",
                                            "id": 1
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                },
                                {
                                    "name": "LiskDelegateType",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "string",
                                            "name": "username",
                                            "id": 1
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                },
                                {
                                    "name": "LiskMultisignatureType",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint32",
                                            "name": "min",
                                            "id": 1
                                        },
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint32",
                                            "name": "life_time",
                                            "id": 2
                                        },
                                        {
                                            "rule": "repeated",
                                            "options": {},
                                            "type": "string",
                                            "name": "keys_group",
                                            "id": 3
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                }
                            ],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskSignMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskMessageSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskVerifyMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Initialize",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "state",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "skip_passphrase",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetFeatures",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Features",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "vendor",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "major_version",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "minor_version",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "patch_version",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "bootloader_mode",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "device_id",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "language",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "initialized",
                    "id": 12
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "revision",
                    "id": 13
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "bootloader_hash",
                    "id": 14
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "imported",
                    "id": 15
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_cached",
                    "id": 16
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_cached",
                    "id": 17
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "firmware_present",
                    "id": 18
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "needs_backup",
                    "id": 19
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "flags",
                    "id": 20
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "model",
                    "id": 21
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fw_major",
                    "id": 22
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fw_minor",
                    "id": 23
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fw_patch",
                    "id": 24
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "fw_vendor",
                    "id": 25
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "fw_vendor_keys",
                    "id": 26
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "unfinished_backup",
                    "id": 27
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "no_backup",
                    "id": 28
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ClearSession",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ApplySettings",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "language",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "use_passphrase",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "homescreen",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "PassphraseSourceType",
                    "name": "passphrase_source",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "auto_lock_delay_ms",
                    "id": 6
                }
            ],
            "enums": [
                {
                    "name": "PassphraseSourceType",
                    "values": [
                        {
                            "name": "ASK",
                            "id": 0
                        },
                        {
                            "name": "DEVICE",
                            "id": 1
                        },
                        {
                            "name": "HOST",
                            "id": 2
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ApplyFlags",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "flags",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ChangePin",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "remove",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Ping",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "message",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "button_protection",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Cancel",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetEntropy",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "size",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Entropy",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "entropy",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WipeDevice",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LoadDevice",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "mnemonic",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "pin",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "english"
                    },
                    "type": "string",
                    "name": "language",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "skip_checksum",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 8
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ResetDevice",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "display_random",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 256
                    },
                    "type": "uint32",
                    "name": "strength",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "english"
                    },
                    "type": "string",
                    "name": "language",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "skip_backup",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "no_backup",
                    "id": 9
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BackupDevice",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EntropyRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EntropyAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "entropy",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RecoveryDevice",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "word_count",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "english"
                    },
                    "type": "string",
                    "name": "language",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "enforce_wordlist",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "RecoveryDeviceType",
                    "name": "type",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "dry_run",
                    "id": 10
                }
            ],
            "enums": [
                {
                    "name": "RecoveryDeviceType",
                    "values": [
                        {
                            "name": "RecoveryDeviceType_ScrambledWords",
                            "id": 0
                        },
                        {
                            "name": "RecoveryDeviceType_Matrix",
                            "id": 1
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WordRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "WordRequestType",
                    "name": "type",
                    "id": 1
                }
            ],
            "enums": [
                {
                    "name": "WordRequestType",
                    "values": [
                        {
                            "name": "WordRequestType_Plain",
                            "id": 0
                        },
                        {
                            "name": "WordRequestType_Matrix9",
                            "id": 1
                        },
                        {
                            "name": "WordRequestType_Matrix6",
                            "id": 2
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WordAck",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "word",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SetU2FCounter",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSourceEntry",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroOutputEntry",
                    "name": "outputs",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "real_output",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "real_out_tx_key",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "real_out_additional_tx_keys",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "real_output_in_tx_index",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "amount",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "rct",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "mask",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroMultisigKLRki",
                    "name": "multisig_kLRki",
                    "id": 9
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroOutputEntry",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "idx",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "MoneroRctKey",
                            "name": "key",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "MoneroRctKey",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "dest",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "mask",
                                    "id": 2
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "MoneroMultisigKLRki",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "K",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "L",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "R",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "ki",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionDestinationEntry",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "amount",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroAccountPublicAddress",
                    "name": "addr",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "is_subaddress",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroAccountPublicAddress",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "spend_public_key",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "view_public_key",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionRsigData",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "version",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "rsig_type",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "offload_type",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint64",
                    "name": "grouping",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "step",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "operation",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "seed",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "mask",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "amount",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "rsig",
                    "id": 10
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "rsig_parts",
                    "id": 11
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroTransactionDestinationEntry",
                    "name": "outputs",
                    "id": 12
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "account",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "minor",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetWatchKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroWatchKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "watch_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "address",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInitRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "version",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionData",
                    "name": "tsx_data",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroTransactionData",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "version",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "payment_id",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "unlock_time",
                            "id": 3
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "MoneroTransactionDestinationEntry",
                            "name": "outputs",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "MoneroTransactionDestinationEntry",
                            "name": "change_dts",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "num_inputs",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "mixin",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "account",
                            "id": 9
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "minor_indices",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "is_multisig",
                            "id": 11
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "exp_tx_prefix_hash",
                            "id": 12
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "bytes",
                            "name": "use_tx_keys",
                            "id": 13
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "MoneroTransactionRsigData",
                            "name": "rsig_data",
                            "id": 14
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "integrated_indices",
                            "id": 15
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInitAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "version",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "status",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "in_memory",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "hmacs",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "many_inputs",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "many_outputs",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetInputRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "version",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionSourceEntry",
                    "name": "src_entr",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetInputAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini_hmac",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_hmac",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "alpha_enc",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "spend_enc",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputsPermutationRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "perm",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputsPermutationAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputViniRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionSourceEntry",
                    "name": "src_entr",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini_hmac",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_hmac",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputViniAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllInputsSetRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllInputsSetAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetOutputRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionDestinationEntry",
                    "name": "dst_entr",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "dst_entr_hmac",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetOutputAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_out",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vouti_hmac",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "out_pk",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "ecdh_info",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllOutSetRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllOutSetAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "extra",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_prefix_hash",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroRingCtSig",
                    "name": "rv",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroRingCtSig",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "txn_fee",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "message",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "rv_type",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionMlsagDoneRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionMlsagDoneAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "full_message_hash",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSignInputRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionSourceEntry",
                    "name": "src_entr",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini_hmac",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_hmac",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "alpha_enc",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "spend_enc",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSignInputAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "cout",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionFinalRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionFinalAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "cout_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "rand_mult",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_enc_keys",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageExportInitRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "num",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "hash",
                    "id": 2
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 4
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroSubAddressIndicesList",
                    "name": "subs",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroSubAddressIndicesList",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "minor_indices",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageExportInitAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncStepRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroTransferDetails",
                    "name": "tdis",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroTransferDetails",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "out_key",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "tx_pub_key",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "bytes",
                            "name": "additional_tx_pub_keys",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "internal_output_index",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncStepAck",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroExportedKeyImage",
                    "name": "kis",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroExportedKeyImage",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "iv",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "tag",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "blob",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncFinalRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncFinalAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "enc_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugMoneroDiagRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "ins",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p1",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p2",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint64",
                    "name": "pd",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data1",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data2",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugMoneroDiagAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "ins",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p1",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p2",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint64",
                    "name": "pd",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data1",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data2",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMAddress",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMSignTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMTransactionCommon",
                    "name": "transaction",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMTransactionCommon",
                    "name": "multisig",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMTransfer",
                    "name": "transfer",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "cosigning",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMProvisionNamespace",
                    "name": "provision_namespace",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMMosaicCreation",
                    "name": "mosaic_creation",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMMosaicSupplyChange",
                    "name": "supply_change",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMAggregateModification",
                    "name": "aggregate_modification",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMImportanceTransfer",
                    "name": "importance_transfer",
                    "id": 9
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "NEMTransactionCommon",
                    "fields": [
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "network",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "timestamp",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "deadline",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "signer",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMTransfer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "recipient",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "payload",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 4
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "NEMMosaic",
                            "name": "mosaics",
                            "id": 5
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "NEMMosaic",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "namespace",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "mosaic",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "quantity",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMProvisionNamespace",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "namespace",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "parent",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "sink",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMMosaicCreation",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "NEMMosaicDefinition",
                            "name": "definition",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "sink",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "NEMMosaicDefinition",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "name",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "ticker",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "namespace",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "mosaic",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "divisibility",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "NEMMosaicLevy",
                                    "name": "levy",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "fee",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "levy_address",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "levy_namespace",
                                    "id": 9
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "levy_mosaic",
                                    "id": 10
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "supply",
                                    "id": 11
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bool",
                                    "name": "mutable_supply",
                                    "id": 12
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bool",
                                    "name": "transferable",
                                    "id": 13
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "description",
                                    "id": 14
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "networks",
                                    "id": 15
                                }
                            ],
                            "enums": [
                                {
                                    "name": "NEMMosaicLevy",
                                    "values": [
                                        {
                                            "name": "MosaicLevy_Absolute",
                                            "id": 1
                                        },
                                        {
                                            "name": "MosaicLevy_Percentile",
                                            "id": 2
                                        }
                                    ],
                                    "options": {}
                                }
                            ],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMMosaicSupplyChange",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "namespace",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "mosaic",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "NEMSupplyChangeType",
                            "name": "type",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "delta",
                            "id": 4
                        }
                    ],
                    "enums": [
                        {
                            "name": "NEMSupplyChangeType",
                            "values": [
                                {
                                    "name": "SupplyChange_Increase",
                                    "id": 1
                                },
                                {
                                    "name": "SupplyChange_Decrease",
                                    "id": 2
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMAggregateModification",
                    "fields": [
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "NEMCosignatoryModification",
                            "name": "modifications",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "sint32",
                            "name": "relative_change",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "NEMCosignatoryModification",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "NEMModificationType",
                                    "name": "type",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "public_key",
                                    "id": 2
                                }
                            ],
                            "enums": [
                                {
                                    "name": "NEMModificationType",
                                    "values": [
                                        {
                                            "name": "CosignatoryModification_Add",
                                            "id": 1
                                        },
                                        {
                                            "name": "CosignatoryModification_Delete",
                                            "id": 2
                                        }
                                    ],
                                    "options": {}
                                }
                            ],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMImportanceTransfer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "NEMImportanceTransferMode",
                            "name": "mode",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 2
                        }
                    ],
                    "enums": [
                        {
                            "name": "NEMImportanceTransferMode",
                            "values": [
                                {
                                    "name": "ImportanceTransfer_Activate",
                                    "id": 1
                                },
                                {
                                    "name": "ImportanceTransfer_Deactivate",
                                    "id": 2
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMDecryptMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMDecryptedMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologyTransaction",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "version",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "type",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "nonce",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "gas_price",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "gas_limit",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "payer",
                    "id": 6
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "OntologyTxAttribute",
                    "name": "tx_attributes",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "OntologyTxAttribute",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "usage",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "data",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologyGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologyPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologyGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologyAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologySignTransfer",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "OntologyTransaction",
                    "name": "transaction",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "OntologyTransfer",
                    "name": "transfer",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "OntologyTransfer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "OntologyAsset",
                            "name": "asset",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "from_address",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "to_address",
                            "id": 4
                        }
                    ],
                    "enums": [
                        {
                            "name": "OntologyAsset",
                            "values": [
                                {
                                    "name": "ONT",
                                    "id": 1
                                },
                                {
                                    "name": "ONG",
                                    "id": 2
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologySignedTransfer",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologySignWithdrawOng",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "OntologyTransaction",
                    "name": "transaction",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "OntologyWithdrawOng",
                    "name": "withdraw_ong",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "OntologyWithdrawOng",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "from_address",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "to_address",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologySignedWithdrawOng",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologySignOntIdRegister",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "OntologyTransaction",
                    "name": "transaction",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "OntologyOntIdRegister",
                    "name": "ont_id_register",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "OntologyOntIdRegister",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "ont_id",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologySignedOntIdRegister",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologySignOntIdAddAttributes",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "OntologyTransaction",
                    "name": "transaction",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "OntologyOntIdAddAttributes",
                    "name": "ont_id_add_attributes",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "OntologyOntIdAddAttributes",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "ont_id",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "OntologyOntIdAttribute",
                            "name": "ont_id_attributes",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "OntologyOntIdAttribute",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "key",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "type",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "value",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "OntologySignedOntIdAddAttributes",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "fee",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "flags",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sequence",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "last_ledger_sequence",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "RipplePayment",
                    "name": "payment",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "RipplePayment",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "destination",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "serialized_tx",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAssetType",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "type",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "code",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "issuer",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "network_passphrase",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fee",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "sequence_number",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "timebounds_start",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "timebounds_end",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "memo_type",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "memo_text",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "memo_id",
                    "id": 12
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "memo_hash",
                    "id": 13
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "num_operations",
                    "id": 14
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarTxOpRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarPaymentOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "destination_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "asset",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "amount",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarCreateAccountOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "new_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "starting_balance",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarPathPaymentOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "send_asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "send_max",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "destination_account",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "destination_asset",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "destination_amount",
                    "id": 6
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "paths",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarManageOfferOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "selling_asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "buying_asset",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "amount",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_n",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_d",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "offer_id",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarCreatePassiveOfferOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "selling_asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "buying_asset",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "amount",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_n",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_d",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarSetOptionsOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "inflation_destination_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "clear_flags",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "set_flags",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "master_weight",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "low_threshold",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "medium_threshold",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "high_threshold",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "home_domain",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "signer_type",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signer_key",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "signer_weight",
                    "id": 12
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarChangeTrustOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "limit",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAllowTrustOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "trusted_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "asset_type",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "asset_code",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "is_authorized",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAccountMergeOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "destination_account",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarManageDataOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarBumpSequenceOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "bump_to",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "public_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "branch",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosRevealOp",
                    "name": "reveal",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosTransactionOp",
                    "name": "transaction",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosOriginationOp",
                    "name": "origination",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosDelegationOp",
                    "name": "delegation",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "TezosContractID",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractType",
                            "name": "tag",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "hash",
                            "id": 2
                        }
                    ],
                    "enums": [
                        {
                            "name": "TezosContractType",
                            "values": [
                                {
                                    "name": "Implicit",
                                    "id": 0
                                },
                                {
                                    "name": "Originated",
                                    "id": 1
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosRevealOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractID",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosTransactionOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractID",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractID",
                            "name": "destination",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "parameters",
                            "id": 8
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosOriginationOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractID",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "manager_pubkey",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "balance",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "spendable",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "delegatable",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "delegate",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "script",
                            "id": 11
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosDelegationOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractID",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "delegate",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "sig_op_contents",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "operation_hash",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TronGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TronAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TronSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "ref_block_bytes",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "ref_block_hash",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "expiration",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "data",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TronContract",
                    "name": "contract",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "timestamp",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "TronContract",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronTransferContract",
                            "name": "transfer_contract",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronTransferAssetContract",
                            "name": "transfer_asset_contract",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronVoteWitnessContract",
                            "name": "vote_witness_contract",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronWitnessCreateContract",
                            "name": "witness_create_contract",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronAssetIssueContract",
                            "name": "asset_issue_contract",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronWitnessUpdateContract",
                            "name": "witness_update_contract",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronParticipateAssetIssueContract",
                            "name": "participate_asset_issue_contract",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronAccountUpdateContract",
                            "name": "account_update_contract",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronFreezeBalanceContract",
                            "name": "freeze_balance_contract",
                            "id": 11
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronUnfreezeBalanceContract",
                            "name": "unfreeze_balance_contract",
                            "id": 12
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronWithdrawBalanceContract",
                            "name": "withdraw_balance_contract",
                            "id": 13
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronUnfreezeAssetContract",
                            "name": "unfreeze_asset_contract",
                            "id": 14
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronUpdateAssetContract",
                            "name": "update_asset_contract",
                            "id": 15
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronProposalCreateContract",
                            "name": "proposal_create_contract",
                            "id": 16
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronProposalApproveContract",
                            "name": "proposal_approve_contract",
                            "id": 17
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TronProposalDeleteContract",
                            "name": "proposal_delete_contract",
                            "id": 18
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "TronAccountUpdateContract",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "account_name",
                                    "id": 1
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronTransferContract",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "to_address",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 2
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronTransferAssetContract",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "asset_name",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "to_address",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronVoteWitnessContract",
                            "fields": [
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "TronVote",
                                    "name": "votes",
                                    "id": 1
                                }
                            ],
                            "enums": [],
                            "messages": [
                                {
                                    "name": "TronVote",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "bytes",
                                            "name": "vote_address",
                                            "id": 1
                                        },
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint64",
                                            "name": "vote_count",
                                            "id": 2
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                }
                            ],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronWitnessCreateContract",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "url",
                                    "id": 1
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronWitnessUpdateContract",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "update_url",
                                    "id": 2
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronAssetIssueContract",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "name",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "abbr",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "total_supply",
                                    "id": 4
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "TronFrozenSupply",
                                    "name": "frozen_supply",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "trx_num",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "num",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "start_time",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "end_time",
                                    "id": 9
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "description",
                                    "id": 10
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "url",
                                    "id": 11
                                }
                            ],
                            "enums": [],
                            "messages": [
                                {
                                    "name": "TronFrozenSupply",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint64",
                                            "name": "frozen_amount",
                                            "id": 1
                                        },
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint64",
                                            "name": "frozen_days",
                                            "id": 2
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                }
                            ],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronParticipateAssetIssueContract",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "to_address",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "asset_name",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronFreezeBalanceContract",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "frozen_balance",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "frozen_duration",
                                    "id": 2
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronUnfreezeBalanceContract",
                            "fields": [],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronUnfreezeAssetContract",
                            "fields": [],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronWithdrawBalanceContract",
                            "fields": [],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronUpdateAssetContract",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "description",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "url",
                                    "id": 2
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronProposalCreateContract",
                            "fields": [
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "TronProposalParameters",
                                    "name": "parameters",
                                    "id": 1
                                }
                            ],
                            "enums": [],
                            "messages": [
                                {
                                    "name": "TronProposalParameters",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint64",
                                            "name": "key",
                                            "id": 1
                                        },
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint64",
                                            "name": "value",
                                            "id": 2
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                }
                            ],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronProposalApproveContract",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "proposal_id",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bool",
                                    "name": "is_add_approval",
                                    "id": 2
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TronProposalDeleteContract",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "proposal_id",
                                    "id": 1
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TronSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "serialized_tx",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "ref": "google.protobuf.EnumValueOptions",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_in",
                    "id": 50002
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_out",
                    "id": 50003
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_debug_in",
                    "id": 50004
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_debug_out",
                    "id": 50005
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_tiny",
                    "id": 50006
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_bootloader",
                    "id": 50007
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_no_fsm",
                    "id": 50008
                }
            ]
        }
    ],
    "enums": [
        {
            "name": "InputScriptType",
            "values": [
                {
                    "name": "SPENDADDRESS",
                    "id": 0
                },
                {
                    "name": "SPENDMULTISIG",
                    "id": 1
                },
                {
                    "name": "EXTERNAL",
                    "id": 2
                },
                {
                    "name": "SPENDWITNESS",
                    "id": 3
                },
                {
                    "name": "SPENDP2SHWITNESS",
                    "id": 4
                }
            ],
            "options": {}
        },
        {
            "name": "MessageType",
            "values": [
                {
                    "name": "MessageType_Initialize",
                    "id": 0
                },
                {
                    "name": "MessageType_Ping",
                    "id": 1
                },
                {
                    "name": "MessageType_Success",
                    "id": 2
                },
                {
                    "name": "MessageType_Failure",
                    "id": 3
                },
                {
                    "name": "MessageType_ChangePin",
                    "id": 4
                },
                {
                    "name": "MessageType_WipeDevice",
                    "id": 5
                },
                {
                    "name": "MessageType_GetEntropy",
                    "id": 9
                },
                {
                    "name": "MessageType_Entropy",
                    "id": 10
                },
                {
                    "name": "MessageType_LoadDevice",
                    "id": 13
                },
                {
                    "name": "MessageType_ResetDevice",
                    "id": 14
                },
                {
                    "name": "MessageType_Features",
                    "id": 17
                },
                {
                    "name": "MessageType_PinMatrixRequest",
                    "id": 18
                },
                {
                    "name": "MessageType_PinMatrixAck",
                    "id": 19
                },
                {
                    "name": "MessageType_Cancel",
                    "id": 20
                },
                {
                    "name": "MessageType_ClearSession",
                    "id": 24
                },
                {
                    "name": "MessageType_ApplySettings",
                    "id": 25
                },
                {
                    "name": "MessageType_ButtonRequest",
                    "id": 26
                },
                {
                    "name": "MessageType_ButtonAck",
                    "id": 27
                },
                {
                    "name": "MessageType_ApplyFlags",
                    "id": 28
                },
                {
                    "name": "MessageType_BackupDevice",
                    "id": 34
                },
                {
                    "name": "MessageType_EntropyRequest",
                    "id": 35
                },
                {
                    "name": "MessageType_EntropyAck",
                    "id": 36
                },
                {
                    "name": "MessageType_PassphraseRequest",
                    "id": 41
                },
                {
                    "name": "MessageType_PassphraseAck",
                    "id": 42
                },
                {
                    "name": "MessageType_PassphraseStateRequest",
                    "id": 77
                },
                {
                    "name": "MessageType_PassphraseStateAck",
                    "id": 78
                },
                {
                    "name": "MessageType_RecoveryDevice",
                    "id": 45
                },
                {
                    "name": "MessageType_WordRequest",
                    "id": 46
                },
                {
                    "name": "MessageType_WordAck",
                    "id": 47
                },
                {
                    "name": "MessageType_GetFeatures",
                    "id": 55
                },
                {
                    "name": "MessageType_SetU2FCounter",
                    "id": 63
                },
                {
                    "name": "MessageType_FirmwareErase",
                    "id": 6
                },
                {
                    "name": "MessageType_FirmwareUpload",
                    "id": 7
                },
                {
                    "name": "MessageType_FirmwareRequest",
                    "id": 8
                },
                {
                    "name": "MessageType_SelfTest",
                    "id": 32
                },
                {
                    "name": "MessageType_GetPublicKey",
                    "id": 11
                },
                {
                    "name": "MessageType_PublicKey",
                    "id": 12
                },
                {
                    "name": "MessageType_SignTx",
                    "id": 15
                },
                {
                    "name": "MessageType_TxRequest",
                    "id": 21
                },
                {
                    "name": "MessageType_TxAck",
                    "id": 22
                },
                {
                    "name": "MessageType_GetAddress",
                    "id": 29
                },
                {
                    "name": "MessageType_Address",
                    "id": 30
                },
                {
                    "name": "MessageType_SignMessage",
                    "id": 38
                },
                {
                    "name": "MessageType_VerifyMessage",
                    "id": 39
                },
                {
                    "name": "MessageType_MessageSignature",
                    "id": 40
                },
                {
                    "name": "MessageType_CipherKeyValue",
                    "id": 23
                },
                {
                    "name": "MessageType_CipheredKeyValue",
                    "id": 48
                },
                {
                    "name": "MessageType_SignIdentity",
                    "id": 53
                },
                {
                    "name": "MessageType_SignedIdentity",
                    "id": 54
                },
                {
                    "name": "MessageType_GetECDHSessionKey",
                    "id": 61
                },
                {
                    "name": "MessageType_ECDHSessionKey",
                    "id": 62
                },
                {
                    "name": "MessageType_CosiCommit",
                    "id": 71
                },
                {
                    "name": "MessageType_CosiCommitment",
                    "id": 72
                },
                {
                    "name": "MessageType_CosiSign",
                    "id": 73
                },
                {
                    "name": "MessageType_CosiSignature",
                    "id": 74
                },
                {
                    "name": "MessageType_DebugLinkDecision",
                    "id": 100
                },
                {
                    "name": "MessageType_DebugLinkGetState",
                    "id": 101
                },
                {
                    "name": "MessageType_DebugLinkState",
                    "id": 102
                },
                {
                    "name": "MessageType_DebugLinkStop",
                    "id": 103
                },
                {
                    "name": "MessageType_DebugLinkLog",
                    "id": 104
                },
                {
                    "name": "MessageType_DebugLinkMemoryRead",
                    "id": 110
                },
                {
                    "name": "MessageType_DebugLinkMemory",
                    "id": 111
                },
                {
                    "name": "MessageType_DebugLinkMemoryWrite",
                    "id": 112
                },
                {
                    "name": "MessageType_DebugLinkFlashErase",
                    "id": 113
                },
                {
                    "name": "MessageType_EthereumGetAddress",
                    "id": 56
                },
                {
                    "name": "MessageType_EthereumAddress",
                    "id": 57
                },
                {
                    "name": "MessageType_EthereumSignTx",
                    "id": 58
                },
                {
                    "name": "MessageType_EthereumTxRequest",
                    "id": 59
                },
                {
                    "name": "MessageType_EthereumTxAck",
                    "id": 60
                },
                {
                    "name": "MessageType_EthereumSignMessage",
                    "id": 64
                },
                {
                    "name": "MessageType_EthereumVerifyMessage",
                    "id": 65
                },
                {
                    "name": "MessageType_EthereumMessageSignature",
                    "id": 66
                },
                {
                    "name": "MessageType_NEMGetAddress",
                    "id": 67
                },
                {
                    "name": "MessageType_NEMAddress",
                    "id": 68
                },
                {
                    "name": "MessageType_NEMSignTx",
                    "id": 69
                },
                {
                    "name": "MessageType_NEMSignedTx",
                    "id": 70
                },
                {
                    "name": "MessageType_NEMDecryptMessage",
                    "id": 75
                },
                {
                    "name": "MessageType_NEMDecryptedMessage",
                    "id": 76
                },
                {
                    "name": "MessageType_LiskGetAddress",
                    "id": 114
                },
                {
                    "name": "MessageType_LiskAddress",
                    "id": 115
                },
                {
                    "name": "MessageType_LiskSignTx",
                    "id": 116
                },
                {
                    "name": "MessageType_LiskSignedTx",
                    "id": 117
                },
                {
                    "name": "MessageType_LiskSignMessage",
                    "id": 118
                },
                {
                    "name": "MessageType_LiskMessageSignature",
                    "id": 119
                },
                {
                    "name": "MessageType_LiskVerifyMessage",
                    "id": 120
                },
                {
                    "name": "MessageType_LiskGetPublicKey",
                    "id": 121
                },
                {
                    "name": "MessageType_LiskPublicKey",
                    "id": 122
                },
                {
                    "name": "MessageType_TezosGetAddress",
                    "id": 150
                },
                {
                    "name": "MessageType_TezosAddress",
                    "id": 151
                },
                {
                    "name": "MessageType_TezosSignTx",
                    "id": 152
                },
                {
                    "name": "MessageType_TezosSignedTx",
                    "id": 153
                },
                {
                    "name": "MessageType_TezosGetPublicKey",
                    "id": 154
                },
                {
                    "name": "MessageType_TezosPublicKey",
                    "id": 155
                },
                {
                    "name": "MessageType_StellarSignTx",
                    "id": 202
                },
                {
                    "name": "MessageType_StellarTxOpRequest",
                    "id": 203
                },
                {
                    "name": "MessageType_StellarGetAddress",
                    "id": 207
                },
                {
                    "name": "MessageType_StellarAddress",
                    "id": 208
                },
                {
                    "name": "MessageType_StellarCreateAccountOp",
                    "id": 210
                },
                {
                    "name": "MessageType_StellarPaymentOp",
                    "id": 211
                },
                {
                    "name": "MessageType_StellarPathPaymentOp",
                    "id": 212
                },
                {
                    "name": "MessageType_StellarManageOfferOp",
                    "id": 213
                },
                {
                    "name": "MessageType_StellarCreatePassiveOfferOp",
                    "id": 214
                },
                {
                    "name": "MessageType_StellarSetOptionsOp",
                    "id": 215
                },
                {
                    "name": "MessageType_StellarChangeTrustOp",
                    "id": 216
                },
                {
                    "name": "MessageType_StellarAllowTrustOp",
                    "id": 217
                },
                {
                    "name": "MessageType_StellarAccountMergeOp",
                    "id": 218
                },
                {
                    "name": "MessageType_StellarManageDataOp",
                    "id": 220
                },
                {
                    "name": "MessageType_StellarBumpSequenceOp",
                    "id": 221
                },
                {
                    "name": "MessageType_StellarSignedTx",
                    "id": 230
                },
                {
                    "name": "MessageType_TronGetAddress",
                    "id": 250
                },
                {
                    "name": "MessageType_TronAddress",
                    "id": 251
                },
                {
                    "name": "MessageType_TronSignTx",
                    "id": 252
                },
                {
                    "name": "MessageType_TronSignedTx",
                    "id": 253
                },
                {
                    "name": "MessageType_CardanoSignTx",
                    "id": 303
                },
                {
                    "name": "MessageType_CardanoTxRequest",
                    "id": 304
                },
                {
                    "name": "MessageType_CardanoGetPublicKey",
                    "id": 305
                },
                {
                    "name": "MessageType_CardanoPublicKey",
                    "id": 306
                },
                {
                    "name": "MessageType_CardanoGetAddress",
                    "id": 307
                },
                {
                    "name": "MessageType_CardanoAddress",
                    "id": 308
                },
                {
                    "name": "MessageType_CardanoTxAck",
                    "id": 309
                },
                {
                    "name": "MessageType_CardanoSignedTx",
                    "id": 310
                },
                {
                    "name": "MessageType_OntologyGetAddress",
                    "id": 350
                },
                {
                    "name": "MessageType_OntologyAddress",
                    "id": 351
                },
                {
                    "name": "MessageType_OntologyGetPublicKey",
                    "id": 352
                },
                {
                    "name": "MessageType_OntologyPublicKey",
                    "id": 353
                },
                {
                    "name": "MessageType_OntologySignTransfer",
                    "id": 354
                },
                {
                    "name": "MessageType_OntologySignedTransfer",
                    "id": 355
                },
                {
                    "name": "MessageType_OntologySignWithdrawOng",
                    "id": 356
                },
                {
                    "name": "MessageType_OntologySignedWithdrawOng",
                    "id": 357
                },
                {
                    "name": "MessageType_OntologySignOntIdRegister",
                    "id": 358
                },
                {
                    "name": "MessageType_OntologySignedOntIdRegister",
                    "id": 359
                },
                {
                    "name": "MessageType_OntologySignOntIdAddAttributes",
                    "id": 360
                },
                {
                    "name": "MessageType_OntologySignedOntIdAddAttributes",
                    "id": 361
                },
                {
                    "name": "MessageType_RippleGetAddress",
                    "id": 400
                },
                {
                    "name": "MessageType_RippleAddress",
                    "id": 401
                },
                {
                    "name": "MessageType_RippleSignTx",
                    "id": 402
                },
                {
                    "name": "MessageType_RippleSignedTx",
                    "id": 403
                },
                {
                    "name": "MessageType_MoneroTransactionInitRequest",
                    "id": 501
                },
                {
                    "name": "MessageType_MoneroTransactionInitAck",
                    "id": 502
                },
                {
                    "name": "MessageType_MoneroTransactionSetInputRequest",
                    "id": 503
                },
                {
                    "name": "MessageType_MoneroTransactionSetInputAck",
                    "id": 504
                },
                {
                    "name": "MessageType_MoneroTransactionInputsPermutationRequest",
                    "id": 505
                },
                {
                    "name": "MessageType_MoneroTransactionInputsPermutationAck",
                    "id": 506
                },
                {
                    "name": "MessageType_MoneroTransactionInputViniRequest",
                    "id": 507
                },
                {
                    "name": "MessageType_MoneroTransactionInputViniAck",
                    "id": 508
                },
                {
                    "name": "MessageType_MoneroTransactionAllInputsSetRequest",
                    "id": 509
                },
                {
                    "name": "MessageType_MoneroTransactionAllInputsSetAck",
                    "id": 510
                },
                {
                    "name": "MessageType_MoneroTransactionSetOutputRequest",
                    "id": 511
                },
                {
                    "name": "MessageType_MoneroTransactionSetOutputAck",
                    "id": 512
                },
                {
                    "name": "MessageType_MoneroTransactionAllOutSetRequest",
                    "id": 513
                },
                {
                    "name": "MessageType_MoneroTransactionAllOutSetAck",
                    "id": 514
                },
                {
                    "name": "MessageType_MoneroTransactionMlsagDoneRequest",
                    "id": 515
                },
                {
                    "name": "MessageType_MoneroTransactionMlsagDoneAck",
                    "id": 516
                },
                {
                    "name": "MessageType_MoneroTransactionSignInputRequest",
                    "id": 517
                },
                {
                    "name": "MessageType_MoneroTransactionSignInputAck",
                    "id": 518
                },
                {
                    "name": "MessageType_MoneroTransactionFinalRequest",
                    "id": 519
                },
                {
                    "name": "MessageType_MoneroTransactionFinalAck",
                    "id": 520
                },
                {
                    "name": "MessageType_MoneroKeyImageExportInitRequest",
                    "id": 530
                },
                {
                    "name": "MessageType_MoneroKeyImageExportInitAck",
                    "id": 531
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncStepRequest",
                    "id": 532
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncStepAck",
                    "id": 533
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncFinalRequest",
                    "id": 534
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncFinalAck",
                    "id": 535
                },
                {
                    "name": "MessageType_MoneroGetAddress",
                    "id": 540
                },
                {
                    "name": "MessageType_MoneroAddress",
                    "id": 541
                },
                {
                    "name": "MessageType_MoneroGetWatchKey",
                    "id": 542
                },
                {
                    "name": "MessageType_MoneroWatchKey",
                    "id": 543
                },
                {
                    "name": "MessageType_DebugMoneroDiagRequest",
                    "id": 546
                },
                {
                    "name": "MessageType_DebugMoneroDiagAck",
                    "id": 547
                }
            ],
            "options": {}
        }
    ],
    "imports": [],
    "options": {},
    "services": []
};

var globalMessagesV7 = {
    "package": null,
    "messages": [
        {
            "name": "BinanceGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinancePublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "msg_count",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "account_number",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "chain_id",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "memo",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "sequence",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "source",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceTxRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceTransferMsg",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "BinanceInputOutput",
                    "name": "inputs",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "BinanceInputOutput",
                    "name": "outputs",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "BinanceInputOutput",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "address",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "BinanceCoin",
                            "name": "coins",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "BinanceCoin",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "sint64",
                            "name": "amount",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "denom",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceOrderMsg",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "id",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "BinanceOrderType",
                    "name": "ordertype",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "price",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "quantity",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "sender",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "BinanceOrderSide",
                    "name": "side",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "symbol",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "BinanceTimeInForce",
                    "name": "timeinforce",
                    "id": 8
                }
            ],
            "enums": [
                {
                    "name": "BinanceOrderType",
                    "values": [
                        {
                            "name": "OT_UNKNOWN",
                            "id": 0
                        },
                        {
                            "name": "MARKET",
                            "id": 1
                        },
                        {
                            "name": "LIMIT",
                            "id": 2
                        },
                        {
                            "name": "OT_RESERVED",
                            "id": 3
                        }
                    ],
                    "options": {}
                },
                {
                    "name": "BinanceOrderSide",
                    "values": [
                        {
                            "name": "SIDE_UNKNOWN",
                            "id": 0
                        },
                        {
                            "name": "BUY",
                            "id": 1
                        },
                        {
                            "name": "SELL",
                            "id": 2
                        }
                    ],
                    "options": {}
                },
                {
                    "name": "BinanceTimeInForce",
                    "values": [
                        {
                            "name": "TIF_UNKNOWN",
                            "id": 0
                        },
                        {
                            "name": "GTE",
                            "id": 1
                        },
                        {
                            "name": "TIF_RESERVED",
                            "id": 2
                        },
                        {
                            "name": "IOC",
                            "id": 3
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceCancelMsg",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "refid",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "sender",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "symbol",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "json",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MultisigRedeemScriptType",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "HDNodePathType",
                    "name": "pubkeys",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "signatures",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "m",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "nodes",
                    "id": 4
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "HDNodePathType",
                    "fields": [
                        {
                            "rule": "required",
                            "options": {},
                            "type": "HDNodeType",
                            "name": "node",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "ecdsa_curve_name",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "SPENDADDRESS"
                    },
                    "type": "InputScriptType",
                    "name": "script_type",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "xpub",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MultisigRedeemScriptType",
                    "name": "multisig",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "SPENDADDRESS"
                    },
                    "type": "InputScriptType",
                    "name": "script_type",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Address",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "SPENDADDRESS"
                    },
                    "type": "InputScriptType",
                    "name": "script_type",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MessageSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "VerifyMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignTx",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "outputs_count",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "inputs_count",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 1
                    },
                    "type": "uint32",
                    "name": "version",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 0
                    },
                    "type": "uint32",
                    "name": "lock_time",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "expiry",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "overwintered",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "version_group_id",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "timestamp",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "branch_id",
                    "id": 10
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TxRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "RequestType",
                    "name": "request_type",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TxRequestDetailsType",
                    "name": "details",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TxRequestSerializedType",
                    "name": "serialized",
                    "id": 3
                }
            ],
            "enums": [
                {
                    "name": "RequestType",
                    "values": [
                        {
                            "name": "TXINPUT",
                            "id": 0
                        },
                        {
                            "name": "TXOUTPUT",
                            "id": 1
                        },
                        {
                            "name": "TXMETA",
                            "id": 2
                        },
                        {
                            "name": "TXFINISHED",
                            "id": 3
                        },
                        {
                            "name": "TXEXTRADATA",
                            "id": 4
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [
                {
                    "name": "TxRequestDetailsType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "request_index",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "tx_hash",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "extra_data_len",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "extra_data_offset",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TxRequestSerializedType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "signature_index",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "signature",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "serialized_tx",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TxAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TransactionType",
                    "name": "tx",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "TransactionType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "version",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "TxInputType",
                            "name": "inputs",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "TxOutputBinType",
                            "name": "bin_outputs",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "lock_time",
                            "id": 4
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "TxOutputType",
                            "name": "outputs",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "inputs_cnt",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "outputs_cnt",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "extra_data",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "extra_data_len",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "expiry",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "overwintered",
                            "id": 11
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "version_group_id",
                            "id": 12
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "timestamp",
                            "id": 13
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "branch_id",
                            "id": 14
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "TxInputType",
                            "fields": [
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "address_n",
                                    "id": 1
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "prev_hash",
                                    "id": 2
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "prev_index",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "script_sig",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {
                                        "default": 4294967295
                                    },
                                    "type": "uint32",
                                    "name": "sequence",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {
                                        "default": "SPENDADDRESS"
                                    },
                                    "type": "InputScriptType",
                                    "name": "script_type",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "MultisigRedeemScriptType",
                                    "name": "multisig",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_tree",
                                    "id": 9
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_script_version",
                                    "id": 10
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "prev_block_hash_bip115",
                                    "id": 11
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "prev_block_height_bip115",
                                    "id": 12
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TxOutputBinType",
                            "fields": [
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 1
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "script_pubkey",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_script_version",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TxOutputType",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "address",
                                    "id": 1
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "address_n",
                                    "id": 2
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 3
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "OutputScriptType",
                                    "name": "script_type",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "MultisigRedeemScriptType",
                                    "name": "multisig",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "op_return_data",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_script_version",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "block_hash_bip115",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "block_height_bip115",
                                    "id": 9
                                }
                            ],
                            "enums": [
                                {
                                    "name": "OutputScriptType",
                                    "values": [
                                        {
                                            "name": "PAYTOADDRESS",
                                            "id": 0
                                        },
                                        {
                                            "name": "PAYTOSCRIPTHASH",
                                            "id": 1
                                        },
                                        {
                                            "name": "PAYTOMULTISIG",
                                            "id": 2
                                        },
                                        {
                                            "name": "PAYTOOPRETURN",
                                            "id": 3
                                        },
                                        {
                                            "name": "PAYTOWITNESS",
                                            "id": 4
                                        },
                                        {
                                            "name": "PAYTOP2SHWITNESS",
                                            "id": 5
                                        }
                                    ],
                                    "options": {}
                                }
                            ],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "FirmwareErase",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "length",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "FirmwareRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "offset",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "length",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "FirmwareUpload",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "hash",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SelfTest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "xpub",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "CardanoTxInputType",
                    "name": "inputs",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "CardanoTxOutputType",
                    "name": "outputs",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "transactions_count",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "protocol_magic",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "CardanoTxInputType",
                    "fields": [
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "prev_hash",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "prev_index",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "type",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "CardanoTxOutputType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "address",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoTxRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "tx_index",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_hash",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_body",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoTxAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "transaction",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_hash",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_body",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Success",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "message",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Failure",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "FailureType",
                    "name": "code",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "message",
                    "id": 2
                }
            ],
            "enums": [
                {
                    "name": "FailureType",
                    "values": [
                        {
                            "name": "Failure_UnexpectedMessage",
                            "id": 1
                        },
                        {
                            "name": "Failure_ButtonExpected",
                            "id": 2
                        },
                        {
                            "name": "Failure_DataError",
                            "id": 3
                        },
                        {
                            "name": "Failure_ActionCancelled",
                            "id": 4
                        },
                        {
                            "name": "Failure_PinExpected",
                            "id": 5
                        },
                        {
                            "name": "Failure_PinCancelled",
                            "id": 6
                        },
                        {
                            "name": "Failure_PinInvalid",
                            "id": 7
                        },
                        {
                            "name": "Failure_InvalidSignature",
                            "id": 8
                        },
                        {
                            "name": "Failure_ProcessError",
                            "id": 9
                        },
                        {
                            "name": "Failure_NotEnoughFunds",
                            "id": 10
                        },
                        {
                            "name": "Failure_NotInitialized",
                            "id": 11
                        },
                        {
                            "name": "Failure_PinMismatch",
                            "id": 12
                        },
                        {
                            "name": "Failure_FirmwareError",
                            "id": 99
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ButtonRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "ButtonRequestType",
                    "name": "code",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "data",
                    "id": 2
                }
            ],
            "enums": [
                {
                    "name": "ButtonRequestType",
                    "values": [
                        {
                            "name": "ButtonRequest_Other",
                            "id": 1
                        },
                        {
                            "name": "ButtonRequest_FeeOverThreshold",
                            "id": 2
                        },
                        {
                            "name": "ButtonRequest_ConfirmOutput",
                            "id": 3
                        },
                        {
                            "name": "ButtonRequest_ResetDevice",
                            "id": 4
                        },
                        {
                            "name": "ButtonRequest_ConfirmWord",
                            "id": 5
                        },
                        {
                            "name": "ButtonRequest_WipeDevice",
                            "id": 6
                        },
                        {
                            "name": "ButtonRequest_ProtectCall",
                            "id": 7
                        },
                        {
                            "name": "ButtonRequest_SignTx",
                            "id": 8
                        },
                        {
                            "name": "ButtonRequest_FirmwareCheck",
                            "id": 9
                        },
                        {
                            "name": "ButtonRequest_Address",
                            "id": 10
                        },
                        {
                            "name": "ButtonRequest_PublicKey",
                            "id": 11
                        },
                        {
                            "name": "ButtonRequest_MnemonicWordCount",
                            "id": 12
                        },
                        {
                            "name": "ButtonRequest_MnemonicInput",
                            "id": 13
                        },
                        {
                            "name": "ButtonRequest_PassphraseType",
                            "id": 14
                        },
                        {
                            "name": "ButtonRequest_UnknownDerivationPath",
                            "id": 15
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ButtonAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PinMatrixRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "PinMatrixRequestType",
                    "name": "type",
                    "id": 1
                }
            ],
            "enums": [
                {
                    "name": "PinMatrixRequestType",
                    "values": [
                        {
                            "name": "PinMatrixRequestType_Current",
                            "id": 1
                        },
                        {
                            "name": "PinMatrixRequestType_NewFirst",
                            "id": 2
                        },
                        {
                            "name": "PinMatrixRequestType_NewSecond",
                            "id": 3
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PinMatrixAck",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "pin",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "on_device",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "passphrase",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "state",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseStateRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "state",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseStateAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "HDNodeType",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "depth",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "fingerprint",
                    "id": 2
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "child_num",
                    "id": 3
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "chain_code",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "private_key",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CipherKeyValue",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "encrypt",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "ask_on_encrypt",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "ask_on_decrypt",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "iv",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CipheredKeyValue",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "IdentityType",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "proto",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "user",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "host",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "port",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "path",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 0
                    },
                    "type": "uint32",
                    "name": "index",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignIdentity",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "IdentityType",
                    "name": "identity",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "challenge_hidden",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "challenge_visual",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "ecdsa_curve_name",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignedIdentity",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetECDHSessionKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "IdentityType",
                    "name": "identity",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "peer_public_key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "ecdsa_curve_name",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ECDHSessionKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "session_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiCommit",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiCommitment",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "commitment",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pubkey",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiSign",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "global_commitment",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "global_pubkey",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkDecision",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "yes_no",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "up_down",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "input",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkGetState",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkState",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "layout",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "pin",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "matrix",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "mnemonic_secret",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "reset_word",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "reset_entropy",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "recovery_fake_word",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "recovery_word_pos",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "reset_word_pos",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "mnemonic_type",
                    "id": 12
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkStop",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkLog",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "level",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "bucket",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "text",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkMemoryRead",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "length",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkMemory",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "memory",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkMemoryWrite",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "memory",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "flash",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkFlashErase",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sector",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "wif_public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "raw_public_key",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "chain_id",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosTxHeader",
                    "name": "header",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "num_actions",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "EosTxHeader",
                    "fields": [
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "expiration",
                            "id": 1
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "ref_block_num",
                            "id": 2
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "ref_block_prefix",
                            "id": 3
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "max_net_usage_words",
                            "id": 4
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "max_cpu_usage_ms",
                            "id": 5
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "delay_sec",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosTxActionRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "data_size",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosTxActionAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionCommon",
                    "name": "common",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionTransfer",
                    "name": "transfer",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionDelegate",
                    "name": "delegate",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionUndelegate",
                    "name": "undelegate",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionRefund",
                    "name": "refund",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionBuyRam",
                    "name": "buy_ram",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionBuyRamBytes",
                    "name": "buy_ram_bytes",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionSellRam",
                    "name": "sell_ram",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionVoteProducer",
                    "name": "vote_producer",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionUpdateAuth",
                    "name": "update_auth",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionDeleteAuth",
                    "name": "delete_auth",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionLinkAuth",
                    "name": "link_auth",
                    "id": 12
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionUnlinkAuth",
                    "name": "unlink_auth",
                    "id": 13
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionNewAccount",
                    "name": "new_account",
                    "id": 14
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionUnknown",
                    "name": "unknown",
                    "id": 15
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "EosAsset",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "sint64",
                            "name": "amount",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "symbol",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosPermissionLevel",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "actor",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "permission",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosAuthorizationKey",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "type",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "key",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "weight",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosAuthorizationAccount",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosPermissionLevel",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "weight",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosAuthorizationWait",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "wait_sec",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "weight",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosAuthorization",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "threshold",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "EosAuthorizationKey",
                            "name": "keys",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "EosAuthorizationAccount",
                            "name": "accounts",
                            "id": 3
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "EosAuthorizationWait",
                            "name": "waits",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionCommon",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "name",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "EosPermissionLevel",
                            "name": "authorization",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionTransfer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "sender",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "quantity",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "memo",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionDelegate",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "sender",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "net_quantity",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "cpu_quantity",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "transfer",
                            "id": 5
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionUndelegate",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "sender",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "net_quantity",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "cpu_quantity",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionRefund",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "owner",
                            "id": 1
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionBuyRam",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "payer",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "quantity",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionBuyRamBytes",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "payer",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "bytes",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionSellRam",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "bytes",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionVoteProducer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "voter",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "proxy",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint64",
                            "name": "producers",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionUpdateAuth",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "permission",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "parent",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAuthorization",
                            "name": "auth",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionDeleteAuth",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "permission",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionLinkAuth",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "code",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "type",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "requirement",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionUnlinkAuth",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "code",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "type",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionNewAccount",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "creator",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "name",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAuthorization",
                            "name": "owner",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAuthorization",
                            "name": "active",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionUnknown",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "data_size",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "data_chunk",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "signature",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "xpub",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {
                        "deprecated": true
                    },
                    "type": "bytes",
                    "name": "old_address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "nonce",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "gas_price",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "gas_limit",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "to",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data_initial_chunk",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "data_length",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "chain_id",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "tx_type",
                    "id": 10
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumTxRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "data_length",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "signature_v",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature_r",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature_s",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumTxAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data_chunk",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumSignMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumMessageSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumVerifyMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "LiskTransactionCommon",
                    "name": "transaction",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "LiskTransactionCommon",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "LiskTransactionType",
                            "name": "type",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {
                                "default": 0
                            },
                            "type": "uint64",
                            "name": "amount",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "recipient_id",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "sender_public_key",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "requester_public_key",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "signature",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "timestamp",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "LiskTransactionAsset",
                            "name": "asset",
                            "id": 9
                        }
                    ],
                    "enums": [
                        {
                            "name": "LiskTransactionType",
                            "values": [
                                {
                                    "name": "Transfer",
                                    "id": 0
                                },
                                {
                                    "name": "RegisterSecondPassphrase",
                                    "id": 1
                                },
                                {
                                    "name": "RegisterDelegate",
                                    "id": 2
                                },
                                {
                                    "name": "CastVotes",
                                    "id": 3
                                },
                                {
                                    "name": "RegisterMultisignatureAccount",
                                    "id": 4
                                },
                                {
                                    "name": "CreateDapp",
                                    "id": 5
                                },
                                {
                                    "name": "TransferIntoDapp",
                                    "id": 6
                                },
                                {
                                    "name": "TransferOutOfDapp",
                                    "id": 7
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [
                        {
                            "name": "LiskTransactionAsset",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "LiskSignatureType",
                                    "name": "signature",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "LiskDelegateType",
                                    "name": "delegate",
                                    "id": 2
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "string",
                                    "name": "votes",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "LiskMultisignatureType",
                                    "name": "multisignature",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "data",
                                    "id": 5
                                }
                            ],
                            "enums": [],
                            "messages": [
                                {
                                    "name": "LiskSignatureType",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "bytes",
                                            "name": "public_key",
                                            "id": 1
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                },
                                {
                                    "name": "LiskDelegateType",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "string",
                                            "name": "username",
                                            "id": 1
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                },
                                {
                                    "name": "LiskMultisignatureType",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint32",
                                            "name": "min",
                                            "id": 1
                                        },
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint32",
                                            "name": "life_time",
                                            "id": 2
                                        },
                                        {
                                            "rule": "repeated",
                                            "options": {},
                                            "type": "string",
                                            "name": "keys_group",
                                            "id": 3
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                }
                            ],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskSignMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskMessageSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskVerifyMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Initialize",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "state",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "skip_passphrase",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetFeatures",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Features",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "vendor",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "major_version",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "minor_version",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "patch_version",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "bootloader_mode",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "device_id",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "language",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "initialized",
                    "id": 12
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "revision",
                    "id": 13
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "bootloader_hash",
                    "id": 14
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "imported",
                    "id": 15
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_cached",
                    "id": 16
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_cached",
                    "id": 17
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "firmware_present",
                    "id": 18
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "needs_backup",
                    "id": 19
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "flags",
                    "id": 20
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "model",
                    "id": 21
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fw_major",
                    "id": 22
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fw_minor",
                    "id": 23
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fw_patch",
                    "id": 24
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "fw_vendor",
                    "id": 25
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "fw_vendor_keys",
                    "id": 26
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "unfinished_backup",
                    "id": 27
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "no_backup",
                    "id": 28
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ClearSession",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ApplySettings",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "language",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "use_passphrase",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "homescreen",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "PassphraseSourceType",
                    "name": "passphrase_source",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "auto_lock_delay_ms",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "display_rotation",
                    "id": 7
                }
            ],
            "enums": [
                {
                    "name": "PassphraseSourceType",
                    "values": [
                        {
                            "name": "ASK",
                            "id": 0
                        },
                        {
                            "name": "DEVICE",
                            "id": 1
                        },
                        {
                            "name": "HOST",
                            "id": 2
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ApplyFlags",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "flags",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ChangePin",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "remove",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Ping",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "message",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "button_protection",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Cancel",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetEntropy",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "size",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Entropy",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "entropy",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WipeDevice",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LoadDevice",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "mnemonic",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "pin",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "english"
                    },
                    "type": "string",
                    "name": "language",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "skip_checksum",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 8
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ResetDevice",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "display_random",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 256
                    },
                    "type": "uint32",
                    "name": "strength",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "english"
                    },
                    "type": "string",
                    "name": "language",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "skip_backup",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "no_backup",
                    "id": 9
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BackupDevice",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EntropyRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EntropyAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "entropy",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RecoveryDevice",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "word_count",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "english"
                    },
                    "type": "string",
                    "name": "language",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "enforce_wordlist",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "RecoveryDeviceType",
                    "name": "type",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "dry_run",
                    "id": 10
                }
            ],
            "enums": [
                {
                    "name": "RecoveryDeviceType",
                    "values": [
                        {
                            "name": "RecoveryDeviceType_ScrambledWords",
                            "id": 0
                        },
                        {
                            "name": "RecoveryDeviceType_Matrix",
                            "id": 1
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WordRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "WordRequestType",
                    "name": "type",
                    "id": 1
                }
            ],
            "enums": [
                {
                    "name": "WordRequestType",
                    "values": [
                        {
                            "name": "WordRequestType_Plain",
                            "id": 0
                        },
                        {
                            "name": "WordRequestType_Matrix9",
                            "id": 1
                        },
                        {
                            "name": "WordRequestType_Matrix6",
                            "id": 2
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WordAck",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "word",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SetU2FCounter",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSourceEntry",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroOutputEntry",
                    "name": "outputs",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "real_output",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "real_out_tx_key",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "real_out_additional_tx_keys",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "real_output_in_tx_index",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "amount",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "rct",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "mask",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroMultisigKLRki",
                    "name": "multisig_kLRki",
                    "id": 9
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroOutputEntry",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "idx",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "MoneroRctKeyPublic",
                            "name": "key",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "MoneroRctKeyPublic",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "dest",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "commitment",
                                    "id": 2
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "MoneroMultisigKLRki",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "K",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "L",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "R",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "ki",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionDestinationEntry",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "amount",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroAccountPublicAddress",
                    "name": "addr",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "is_subaddress",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "original",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "is_integrated",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroAccountPublicAddress",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "spend_public_key",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "view_public_key",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionRsigData",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "rsig_type",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "offload_type",
                    "id": 2
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint64",
                    "name": "grouping",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "mask",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "rsig",
                    "id": 5
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "rsig_parts",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "bp_version",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "account",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "minor",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payment_id",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetWatchKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroWatchKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "watch_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "address",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInitRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "version",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionData",
                    "name": "tsx_data",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroTransactionData",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "version",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "payment_id",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "unlock_time",
                            "id": 3
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "MoneroTransactionDestinationEntry",
                            "name": "outputs",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "MoneroTransactionDestinationEntry",
                            "name": "change_dts",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "num_inputs",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "mixin",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "account",
                            "id": 9
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "minor_indices",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "MoneroTransactionRsigData",
                            "name": "rsig_data",
                            "id": 11
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "integrated_indices",
                            "id": 12
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "client_version",
                            "id": 13
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "hard_fork",
                            "id": 14
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "monero_version",
                            "id": 15
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInitAck",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "hmacs",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetInputRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionSourceEntry",
                    "name": "src_entr",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetInputAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini_hmac",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_hmac",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_alpha",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "spend_key",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputsPermutationRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "perm",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputsPermutationAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputViniRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionSourceEntry",
                    "name": "src_entr",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini_hmac",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_hmac",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputViniAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllInputsSetRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllInputsSetAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetOutputRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionDestinationEntry",
                    "name": "dst_entr",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "dst_entr_hmac",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "is_offloaded_bp",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetOutputAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_out",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vouti_hmac",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "out_pk",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "ecdh_info",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllOutSetRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllOutSetAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "extra",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_prefix_hash",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroRingCtSig",
                    "name": "rv",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "full_message_hash",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroRingCtSig",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "txn_fee",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "message",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "rv_type",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSignInputRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionSourceEntry",
                    "name": "src_entr",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini_hmac",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_hmac",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_alpha",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "spend_key",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSignInputAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionFinalRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionFinalAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "cout_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "rand_mult",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_enc_keys",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageExportInitRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "num",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "hash",
                    "id": 2
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 4
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroSubAddressIndicesList",
                    "name": "subs",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroSubAddressIndicesList",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "minor_indices",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageExportInitAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncStepRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroTransferDetails",
                    "name": "tdis",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroTransferDetails",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "out_key",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "tx_pub_key",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "bytes",
                            "name": "additional_tx_pub_keys",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "internal_output_index",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncStepAck",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroExportedKeyImage",
                    "name": "kis",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroExportedKeyImage",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "iv",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "blob",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncFinalRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncFinalAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "enc_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetTxKeyRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt1",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt2",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_enc_keys",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_prefix_hash",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "reason",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "view_public_key",
                    "id": 8
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetTxKeyAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_keys",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_derivations",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshStartRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshStartAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshStepRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "out_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "recv_deriv",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "real_out_idx",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sub_addr_major",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sub_addr_minor",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshStepAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "key_image",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshFinalRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshFinalAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugMoneroDiagRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "ins",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p1",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p2",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint64",
                    "name": "pd",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data1",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data2",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugMoneroDiagAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "ins",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p1",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p2",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint64",
                    "name": "pd",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data1",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data2",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMAddress",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMSignTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMTransactionCommon",
                    "name": "transaction",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMTransactionCommon",
                    "name": "multisig",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMTransfer",
                    "name": "transfer",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "cosigning",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMProvisionNamespace",
                    "name": "provision_namespace",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMMosaicCreation",
                    "name": "mosaic_creation",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMMosaicSupplyChange",
                    "name": "supply_change",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMAggregateModification",
                    "name": "aggregate_modification",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMImportanceTransfer",
                    "name": "importance_transfer",
                    "id": 9
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "NEMTransactionCommon",
                    "fields": [
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "network",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "timestamp",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "deadline",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "signer",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMTransfer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "recipient",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "payload",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 4
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "NEMMosaic",
                            "name": "mosaics",
                            "id": 5
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "NEMMosaic",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "namespace",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "mosaic",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "quantity",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMProvisionNamespace",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "namespace",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "parent",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "sink",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMMosaicCreation",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "NEMMosaicDefinition",
                            "name": "definition",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "sink",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "NEMMosaicDefinition",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "name",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "ticker",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "namespace",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "mosaic",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "divisibility",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "NEMMosaicLevy",
                                    "name": "levy",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "fee",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "levy_address",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "levy_namespace",
                                    "id": 9
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "levy_mosaic",
                                    "id": 10
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "supply",
                                    "id": 11
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bool",
                                    "name": "mutable_supply",
                                    "id": 12
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bool",
                                    "name": "transferable",
                                    "id": 13
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "description",
                                    "id": 14
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "networks",
                                    "id": 15
                                }
                            ],
                            "enums": [
                                {
                                    "name": "NEMMosaicLevy",
                                    "values": [
                                        {
                                            "name": "MosaicLevy_Absolute",
                                            "id": 1
                                        },
                                        {
                                            "name": "MosaicLevy_Percentile",
                                            "id": 2
                                        }
                                    ],
                                    "options": {}
                                }
                            ],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMMosaicSupplyChange",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "namespace",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "mosaic",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "NEMSupplyChangeType",
                            "name": "type",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "delta",
                            "id": 4
                        }
                    ],
                    "enums": [
                        {
                            "name": "NEMSupplyChangeType",
                            "values": [
                                {
                                    "name": "SupplyChange_Increase",
                                    "id": 1
                                },
                                {
                                    "name": "SupplyChange_Decrease",
                                    "id": 2
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMAggregateModification",
                    "fields": [
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "NEMCosignatoryModification",
                            "name": "modifications",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "sint32",
                            "name": "relative_change",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "NEMCosignatoryModification",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "NEMModificationType",
                                    "name": "type",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "public_key",
                                    "id": 2
                                }
                            ],
                            "enums": [
                                {
                                    "name": "NEMModificationType",
                                    "values": [
                                        {
                                            "name": "CosignatoryModification_Add",
                                            "id": 1
                                        },
                                        {
                                            "name": "CosignatoryModification_Delete",
                                            "id": 2
                                        }
                                    ],
                                    "options": {}
                                }
                            ],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMImportanceTransfer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "NEMImportanceTransferMode",
                            "name": "mode",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 2
                        }
                    ],
                    "enums": [
                        {
                            "name": "NEMImportanceTransferMode",
                            "values": [
                                {
                                    "name": "ImportanceTransfer_Activate",
                                    "id": 1
                                },
                                {
                                    "name": "ImportanceTransfer_Deactivate",
                                    "id": 2
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMDecryptMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMDecryptedMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "fee",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "flags",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sequence",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "last_ledger_sequence",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "RipplePayment",
                    "name": "payment",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "RipplePayment",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "destination",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "destination_tag",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "serialized_tx",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAssetType",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "type",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "code",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "issuer",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "network_passphrase",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fee",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "sequence_number",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "timebounds_start",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "timebounds_end",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "memo_type",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "memo_text",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "memo_id",
                    "id": 12
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "memo_hash",
                    "id": 13
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "num_operations",
                    "id": 14
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarTxOpRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarPaymentOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "destination_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "asset",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "amount",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarCreateAccountOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "new_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "starting_balance",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarPathPaymentOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "send_asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "send_max",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "destination_account",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "destination_asset",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "destination_amount",
                    "id": 6
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "paths",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarManageOfferOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "selling_asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "buying_asset",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "amount",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_n",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_d",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "offer_id",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarCreatePassiveOfferOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "selling_asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "buying_asset",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "amount",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_n",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_d",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarSetOptionsOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "inflation_destination_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "clear_flags",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "set_flags",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "master_weight",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "low_threshold",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "medium_threshold",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "high_threshold",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "home_domain",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "signer_type",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signer_key",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "signer_weight",
                    "id": 12
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarChangeTrustOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "limit",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAllowTrustOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "trusted_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "asset_type",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "asset_code",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "is_authorized",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAccountMergeOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "destination_account",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarManageDataOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarBumpSequenceOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "bump_to",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "public_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "branch",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosRevealOp",
                    "name": "reveal",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosTransactionOp",
                    "name": "transaction",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosOriginationOp",
                    "name": "origination",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosDelegationOp",
                    "name": "delegation",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosProposalOp",
                    "name": "proposal",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosBallotOp",
                    "name": "ballot",
                    "id": 8
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "TezosContractID",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractType",
                            "name": "tag",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "hash",
                            "id": 2
                        }
                    ],
                    "enums": [
                        {
                            "name": "TezosContractType",
                            "values": [
                                {
                                    "name": "Implicit",
                                    "id": 0
                                },
                                {
                                    "name": "Originated",
                                    "id": 1
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosRevealOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractID",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosTransactionOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractID",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractID",
                            "name": "destination",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "parameters",
                            "id": 8
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosOriginationOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractID",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "manager_pubkey",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "balance",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "spendable",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "delegatable",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "delegate",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "script",
                            "id": 11
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosDelegationOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractID",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "delegate",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosProposalOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "period",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "bytes",
                            "name": "proposals",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosBallotOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "period",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "proposal",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosBallotType",
                            "name": "ballot",
                            "id": 4
                        }
                    ],
                    "enums": [
                        {
                            "name": "TezosBallotType",
                            "values": [
                                {
                                    "name": "Yay",
                                    "id": 0
                                },
                                {
                                    "name": "Nay",
                                    "id": 1
                                },
                                {
                                    "name": "Pass",
                                    "id": 2
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "sig_op_contents",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "operation_hash",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "ref": "google.protobuf.EnumValueOptions",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_in",
                    "id": 50002
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_out",
                    "id": 50003
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_debug_in",
                    "id": 50004
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_debug_out",
                    "id": 50005
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_tiny",
                    "id": 50006
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_bootloader",
                    "id": 50007
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_no_fsm",
                    "id": 50008
                }
            ]
        }
    ],
    "enums": [
        {
            "name": "InputScriptType",
            "values": [
                {
                    "name": "SPENDADDRESS",
                    "id": 0
                },
                {
                    "name": "SPENDMULTISIG",
                    "id": 1
                },
                {
                    "name": "EXTERNAL",
                    "id": 2
                },
                {
                    "name": "SPENDWITNESS",
                    "id": 3
                },
                {
                    "name": "SPENDP2SHWITNESS",
                    "id": 4
                }
            ],
            "options": {}
        },
        {
            "name": "MessageType",
            "values": [
                {
                    "name": "MessageType_Initialize",
                    "id": 0
                },
                {
                    "name": "MessageType_Ping",
                    "id": 1
                },
                {
                    "name": "MessageType_Success",
                    "id": 2
                },
                {
                    "name": "MessageType_Failure",
                    "id": 3
                },
                {
                    "name": "MessageType_ChangePin",
                    "id": 4
                },
                {
                    "name": "MessageType_WipeDevice",
                    "id": 5
                },
                {
                    "name": "MessageType_GetEntropy",
                    "id": 9
                },
                {
                    "name": "MessageType_Entropy",
                    "id": 10
                },
                {
                    "name": "MessageType_LoadDevice",
                    "id": 13
                },
                {
                    "name": "MessageType_ResetDevice",
                    "id": 14
                },
                {
                    "name": "MessageType_Features",
                    "id": 17
                },
                {
                    "name": "MessageType_PinMatrixRequest",
                    "id": 18
                },
                {
                    "name": "MessageType_PinMatrixAck",
                    "id": 19
                },
                {
                    "name": "MessageType_Cancel",
                    "id": 20
                },
                {
                    "name": "MessageType_ClearSession",
                    "id": 24
                },
                {
                    "name": "MessageType_ApplySettings",
                    "id": 25
                },
                {
                    "name": "MessageType_ButtonRequest",
                    "id": 26
                },
                {
                    "name": "MessageType_ButtonAck",
                    "id": 27
                },
                {
                    "name": "MessageType_ApplyFlags",
                    "id": 28
                },
                {
                    "name": "MessageType_BackupDevice",
                    "id": 34
                },
                {
                    "name": "MessageType_EntropyRequest",
                    "id": 35
                },
                {
                    "name": "MessageType_EntropyAck",
                    "id": 36
                },
                {
                    "name": "MessageType_PassphraseRequest",
                    "id": 41
                },
                {
                    "name": "MessageType_PassphraseAck",
                    "id": 42
                },
                {
                    "name": "MessageType_PassphraseStateRequest",
                    "id": 77
                },
                {
                    "name": "MessageType_PassphraseStateAck",
                    "id": 78
                },
                {
                    "name": "MessageType_RecoveryDevice",
                    "id": 45
                },
                {
                    "name": "MessageType_WordRequest",
                    "id": 46
                },
                {
                    "name": "MessageType_WordAck",
                    "id": 47
                },
                {
                    "name": "MessageType_GetFeatures",
                    "id": 55
                },
                {
                    "name": "MessageType_SetU2FCounter",
                    "id": 63
                },
                {
                    "name": "MessageType_FirmwareErase",
                    "id": 6
                },
                {
                    "name": "MessageType_FirmwareUpload",
                    "id": 7
                },
                {
                    "name": "MessageType_FirmwareRequest",
                    "id": 8
                },
                {
                    "name": "MessageType_SelfTest",
                    "id": 32
                },
                {
                    "name": "MessageType_GetPublicKey",
                    "id": 11
                },
                {
                    "name": "MessageType_PublicKey",
                    "id": 12
                },
                {
                    "name": "MessageType_SignTx",
                    "id": 15
                },
                {
                    "name": "MessageType_TxRequest",
                    "id": 21
                },
                {
                    "name": "MessageType_TxAck",
                    "id": 22
                },
                {
                    "name": "MessageType_GetAddress",
                    "id": 29
                },
                {
                    "name": "MessageType_Address",
                    "id": 30
                },
                {
                    "name": "MessageType_SignMessage",
                    "id": 38
                },
                {
                    "name": "MessageType_VerifyMessage",
                    "id": 39
                },
                {
                    "name": "MessageType_MessageSignature",
                    "id": 40
                },
                {
                    "name": "MessageType_CipherKeyValue",
                    "id": 23
                },
                {
                    "name": "MessageType_CipheredKeyValue",
                    "id": 48
                },
                {
                    "name": "MessageType_SignIdentity",
                    "id": 53
                },
                {
                    "name": "MessageType_SignedIdentity",
                    "id": 54
                },
                {
                    "name": "MessageType_GetECDHSessionKey",
                    "id": 61
                },
                {
                    "name": "MessageType_ECDHSessionKey",
                    "id": 62
                },
                {
                    "name": "MessageType_CosiCommit",
                    "id": 71
                },
                {
                    "name": "MessageType_CosiCommitment",
                    "id": 72
                },
                {
                    "name": "MessageType_CosiSign",
                    "id": 73
                },
                {
                    "name": "MessageType_CosiSignature",
                    "id": 74
                },
                {
                    "name": "MessageType_DebugLinkDecision",
                    "id": 100
                },
                {
                    "name": "MessageType_DebugLinkGetState",
                    "id": 101
                },
                {
                    "name": "MessageType_DebugLinkState",
                    "id": 102
                },
                {
                    "name": "MessageType_DebugLinkStop",
                    "id": 103
                },
                {
                    "name": "MessageType_DebugLinkLog",
                    "id": 104
                },
                {
                    "name": "MessageType_DebugLinkMemoryRead",
                    "id": 110
                },
                {
                    "name": "MessageType_DebugLinkMemory",
                    "id": 111
                },
                {
                    "name": "MessageType_DebugLinkMemoryWrite",
                    "id": 112
                },
                {
                    "name": "MessageType_DebugLinkFlashErase",
                    "id": 113
                },
                {
                    "name": "MessageType_EthereumGetPublicKey",
                    "id": 450
                },
                {
                    "name": "MessageType_EthereumPublicKey",
                    "id": 451
                },
                {
                    "name": "MessageType_EthereumGetAddress",
                    "id": 56
                },
                {
                    "name": "MessageType_EthereumAddress",
                    "id": 57
                },
                {
                    "name": "MessageType_EthereumSignTx",
                    "id": 58
                },
                {
                    "name": "MessageType_EthereumTxRequest",
                    "id": 59
                },
                {
                    "name": "MessageType_EthereumTxAck",
                    "id": 60
                },
                {
                    "name": "MessageType_EthereumSignMessage",
                    "id": 64
                },
                {
                    "name": "MessageType_EthereumVerifyMessage",
                    "id": 65
                },
                {
                    "name": "MessageType_EthereumMessageSignature",
                    "id": 66
                },
                {
                    "name": "MessageType_NEMGetAddress",
                    "id": 67
                },
                {
                    "name": "MessageType_NEMAddress",
                    "id": 68
                },
                {
                    "name": "MessageType_NEMSignTx",
                    "id": 69
                },
                {
                    "name": "MessageType_NEMSignedTx",
                    "id": 70
                },
                {
                    "name": "MessageType_NEMDecryptMessage",
                    "id": 75
                },
                {
                    "name": "MessageType_NEMDecryptedMessage",
                    "id": 76
                },
                {
                    "name": "MessageType_LiskGetAddress",
                    "id": 114
                },
                {
                    "name": "MessageType_LiskAddress",
                    "id": 115
                },
                {
                    "name": "MessageType_LiskSignTx",
                    "id": 116
                },
                {
                    "name": "MessageType_LiskSignedTx",
                    "id": 117
                },
                {
                    "name": "MessageType_LiskSignMessage",
                    "id": 118
                },
                {
                    "name": "MessageType_LiskMessageSignature",
                    "id": 119
                },
                {
                    "name": "MessageType_LiskVerifyMessage",
                    "id": 120
                },
                {
                    "name": "MessageType_LiskGetPublicKey",
                    "id": 121
                },
                {
                    "name": "MessageType_LiskPublicKey",
                    "id": 122
                },
                {
                    "name": "MessageType_TezosGetAddress",
                    "id": 150
                },
                {
                    "name": "MessageType_TezosAddress",
                    "id": 151
                },
                {
                    "name": "MessageType_TezosSignTx",
                    "id": 152
                },
                {
                    "name": "MessageType_TezosSignedTx",
                    "id": 153
                },
                {
                    "name": "MessageType_TezosGetPublicKey",
                    "id": 154
                },
                {
                    "name": "MessageType_TezosPublicKey",
                    "id": 155
                },
                {
                    "name": "MessageType_StellarSignTx",
                    "id": 202
                },
                {
                    "name": "MessageType_StellarTxOpRequest",
                    "id": 203
                },
                {
                    "name": "MessageType_StellarGetAddress",
                    "id": 207
                },
                {
                    "name": "MessageType_StellarAddress",
                    "id": 208
                },
                {
                    "name": "MessageType_StellarCreateAccountOp",
                    "id": 210
                },
                {
                    "name": "MessageType_StellarPaymentOp",
                    "id": 211
                },
                {
                    "name": "MessageType_StellarPathPaymentOp",
                    "id": 212
                },
                {
                    "name": "MessageType_StellarManageOfferOp",
                    "id": 213
                },
                {
                    "name": "MessageType_StellarCreatePassiveOfferOp",
                    "id": 214
                },
                {
                    "name": "MessageType_StellarSetOptionsOp",
                    "id": 215
                },
                {
                    "name": "MessageType_StellarChangeTrustOp",
                    "id": 216
                },
                {
                    "name": "MessageType_StellarAllowTrustOp",
                    "id": 217
                },
                {
                    "name": "MessageType_StellarAccountMergeOp",
                    "id": 218
                },
                {
                    "name": "MessageType_StellarManageDataOp",
                    "id": 220
                },
                {
                    "name": "MessageType_StellarBumpSequenceOp",
                    "id": 221
                },
                {
                    "name": "MessageType_StellarSignedTx",
                    "id": 230
                },
                {
                    "name": "MessageType_CardanoSignTx",
                    "id": 303
                },
                {
                    "name": "MessageType_CardanoTxRequest",
                    "id": 304
                },
                {
                    "name": "MessageType_CardanoGetPublicKey",
                    "id": 305
                },
                {
                    "name": "MessageType_CardanoPublicKey",
                    "id": 306
                },
                {
                    "name": "MessageType_CardanoGetAddress",
                    "id": 307
                },
                {
                    "name": "MessageType_CardanoAddress",
                    "id": 308
                },
                {
                    "name": "MessageType_CardanoTxAck",
                    "id": 309
                },
                {
                    "name": "MessageType_CardanoSignedTx",
                    "id": 310
                },
                {
                    "name": "MessageType_RippleGetAddress",
                    "id": 400
                },
                {
                    "name": "MessageType_RippleAddress",
                    "id": 401
                },
                {
                    "name": "MessageType_RippleSignTx",
                    "id": 402
                },
                {
                    "name": "MessageType_RippleSignedTx",
                    "id": 403
                },
                {
                    "name": "MessageType_MoneroTransactionInitRequest",
                    "id": 501
                },
                {
                    "name": "MessageType_MoneroTransactionInitAck",
                    "id": 502
                },
                {
                    "name": "MessageType_MoneroTransactionSetInputRequest",
                    "id": 503
                },
                {
                    "name": "MessageType_MoneroTransactionSetInputAck",
                    "id": 504
                },
                {
                    "name": "MessageType_MoneroTransactionInputsPermutationRequest",
                    "id": 505
                },
                {
                    "name": "MessageType_MoneroTransactionInputsPermutationAck",
                    "id": 506
                },
                {
                    "name": "MessageType_MoneroTransactionInputViniRequest",
                    "id": 507
                },
                {
                    "name": "MessageType_MoneroTransactionInputViniAck",
                    "id": 508
                },
                {
                    "name": "MessageType_MoneroTransactionAllInputsSetRequest",
                    "id": 509
                },
                {
                    "name": "MessageType_MoneroTransactionAllInputsSetAck",
                    "id": 510
                },
                {
                    "name": "MessageType_MoneroTransactionSetOutputRequest",
                    "id": 511
                },
                {
                    "name": "MessageType_MoneroTransactionSetOutputAck",
                    "id": 512
                },
                {
                    "name": "MessageType_MoneroTransactionAllOutSetRequest",
                    "id": 513
                },
                {
                    "name": "MessageType_MoneroTransactionAllOutSetAck",
                    "id": 514
                },
                {
                    "name": "MessageType_MoneroTransactionSignInputRequest",
                    "id": 515
                },
                {
                    "name": "MessageType_MoneroTransactionSignInputAck",
                    "id": 516
                },
                {
                    "name": "MessageType_MoneroTransactionFinalRequest",
                    "id": 517
                },
                {
                    "name": "MessageType_MoneroTransactionFinalAck",
                    "id": 518
                },
                {
                    "name": "MessageType_MoneroKeyImageExportInitRequest",
                    "id": 530
                },
                {
                    "name": "MessageType_MoneroKeyImageExportInitAck",
                    "id": 531
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncStepRequest",
                    "id": 532
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncStepAck",
                    "id": 533
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncFinalRequest",
                    "id": 534
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncFinalAck",
                    "id": 535
                },
                {
                    "name": "MessageType_MoneroGetAddress",
                    "id": 540
                },
                {
                    "name": "MessageType_MoneroAddress",
                    "id": 541
                },
                {
                    "name": "MessageType_MoneroGetWatchKey",
                    "id": 542
                },
                {
                    "name": "MessageType_MoneroWatchKey",
                    "id": 543
                },
                {
                    "name": "MessageType_DebugMoneroDiagRequest",
                    "id": 546
                },
                {
                    "name": "MessageType_DebugMoneroDiagAck",
                    "id": 547
                },
                {
                    "name": "MessageType_MoneroGetTxKeyRequest",
                    "id": 550
                },
                {
                    "name": "MessageType_MoneroGetTxKeyAck",
                    "id": 551
                },
                {
                    "name": "MessageType_MoneroLiveRefreshStartRequest",
                    "id": 552
                },
                {
                    "name": "MessageType_MoneroLiveRefreshStartAck",
                    "id": 553
                },
                {
                    "name": "MessageType_MoneroLiveRefreshStepRequest",
                    "id": 554
                },
                {
                    "name": "MessageType_MoneroLiveRefreshStepAck",
                    "id": 555
                },
                {
                    "name": "MessageType_MoneroLiveRefreshFinalRequest",
                    "id": 556
                },
                {
                    "name": "MessageType_MoneroLiveRefreshFinalAck",
                    "id": 557
                },
                {
                    "name": "MessageType_EosGetPublicKey",
                    "id": 600
                },
                {
                    "name": "MessageType_EosPublicKey",
                    "id": 601
                },
                {
                    "name": "MessageType_EosSignTx",
                    "id": 602
                },
                {
                    "name": "MessageType_EosTxActionRequest",
                    "id": 603
                },
                {
                    "name": "MessageType_EosTxActionAck",
                    "id": 604
                },
                {
                    "name": "MessageType_EosSignedTx",
                    "id": 605
                },
                {
                    "name": "MessageType_BinanceGetAddress",
                    "id": 700
                },
                {
                    "name": "MessageType_BinanceAddress",
                    "id": 701
                },
                {
                    "name": "MessageType_BinanceGetPublicKey",
                    "id": 702
                },
                {
                    "name": "MessageType_BinancePublicKey",
                    "id": 703
                },
                {
                    "name": "MessageType_BinanceSignTx",
                    "id": 704
                },
                {
                    "name": "MessageType_BinanceTxRequest",
                    "id": 705
                },
                {
                    "name": "MessageType_BinanceTransferMsg",
                    "id": 706
                },
                {
                    "name": "MessageType_BinanceOrderMsg",
                    "id": 707
                },
                {
                    "name": "MessageType_BinanceCancelMsg",
                    "id": 708
                },
                {
                    "name": "MessageType_BinanceSignedTx",
                    "id": 709
                }
            ],
            "options": {}
        }
    ],
    "imports": [],
    "options": {},
    "services": []
};

var globalMessagesV8 = {
    "package": null,
    "messages": [
        {
            "name": "BinanceGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinancePublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "msg_count",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "account_number",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "chain_id",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "memo",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "sequence",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "source",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceTxRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceTransferMsg",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "BinanceInputOutput",
                    "name": "inputs",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "BinanceInputOutput",
                    "name": "outputs",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "BinanceInputOutput",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "address",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "BinanceCoin",
                            "name": "coins",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "BinanceCoin",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "sint64",
                            "name": "amount",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "denom",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceOrderMsg",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "id",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "BinanceOrderType",
                    "name": "ordertype",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "price",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "quantity",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "sender",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "BinanceOrderSide",
                    "name": "side",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "symbol",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "BinanceTimeInForce",
                    "name": "timeinforce",
                    "id": 8
                }
            ],
            "enums": [
                {
                    "name": "BinanceOrderType",
                    "values": [
                        {
                            "name": "OT_UNKNOWN",
                            "id": 0
                        },
                        {
                            "name": "MARKET",
                            "id": 1
                        },
                        {
                            "name": "LIMIT",
                            "id": 2
                        },
                        {
                            "name": "OT_RESERVED",
                            "id": 3
                        }
                    ],
                    "options": {}
                },
                {
                    "name": "BinanceOrderSide",
                    "values": [
                        {
                            "name": "SIDE_UNKNOWN",
                            "id": 0
                        },
                        {
                            "name": "BUY",
                            "id": 1
                        },
                        {
                            "name": "SELL",
                            "id": 2
                        }
                    ],
                    "options": {}
                },
                {
                    "name": "BinanceTimeInForce",
                    "values": [
                        {
                            "name": "TIF_UNKNOWN",
                            "id": 0
                        },
                        {
                            "name": "GTE",
                            "id": 1
                        },
                        {
                            "name": "TIF_RESERVED",
                            "id": 2
                        },
                        {
                            "name": "IOC",
                            "id": 3
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceCancelMsg",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "refid",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "sender",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "symbol",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MultisigRedeemScriptType",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "HDNodePathType",
                    "name": "pubkeys",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "signatures",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "m",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "nodes",
                    "id": 4
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "HDNodePathType",
                    "fields": [
                        {
                            "rule": "required",
                            "options": {},
                            "type": "HDNodeType",
                            "name": "node",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "ecdsa_curve_name",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "SPENDADDRESS"
                    },
                    "type": "InputScriptType",
                    "name": "script_type",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "xpub",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MultisigRedeemScriptType",
                    "name": "multisig",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "SPENDADDRESS"
                    },
                    "type": "InputScriptType",
                    "name": "script_type",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Address",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "SPENDADDRESS"
                    },
                    "type": "InputScriptType",
                    "name": "script_type",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MessageSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "VerifyMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignTx",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "outputs_count",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "inputs_count",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 1
                    },
                    "type": "uint32",
                    "name": "version",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 0
                    },
                    "type": "uint32",
                    "name": "lock_time",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "expiry",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "overwintered",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "version_group_id",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "timestamp",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "branch_id",
                    "id": 10
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TxRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "RequestType",
                    "name": "request_type",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TxRequestDetailsType",
                    "name": "details",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TxRequestSerializedType",
                    "name": "serialized",
                    "id": 3
                }
            ],
            "enums": [
                {
                    "name": "RequestType",
                    "values": [
                        {
                            "name": "TXINPUT",
                            "id": 0
                        },
                        {
                            "name": "TXOUTPUT",
                            "id": 1
                        },
                        {
                            "name": "TXMETA",
                            "id": 2
                        },
                        {
                            "name": "TXFINISHED",
                            "id": 3
                        },
                        {
                            "name": "TXEXTRADATA",
                            "id": 4
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [
                {
                    "name": "TxRequestDetailsType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "request_index",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "tx_hash",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "extra_data_len",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "extra_data_offset",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TxRequestSerializedType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "signature_index",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "signature",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "serialized_tx",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TxAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TransactionType",
                    "name": "tx",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "TransactionType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "version",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "TxInputType",
                            "name": "inputs",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "TxOutputBinType",
                            "name": "bin_outputs",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "lock_time",
                            "id": 4
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "TxOutputType",
                            "name": "outputs",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "inputs_cnt",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "outputs_cnt",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "extra_data",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "extra_data_len",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "expiry",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "overwintered",
                            "id": 11
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "version_group_id",
                            "id": 12
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "timestamp",
                            "id": 13
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "branch_id",
                            "id": 14
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "TxInputType",
                            "fields": [
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "address_n",
                                    "id": 1
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "prev_hash",
                                    "id": 2
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "prev_index",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "script_sig",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {
                                        "default": 4294967295
                                    },
                                    "type": "uint32",
                                    "name": "sequence",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {
                                        "default": "SPENDADDRESS"
                                    },
                                    "type": "InputScriptType",
                                    "name": "script_type",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "MultisigRedeemScriptType",
                                    "name": "multisig",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_tree",
                                    "id": 9
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_script_version",
                                    "id": 10
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "prev_block_hash_bip115",
                                    "id": 11
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "prev_block_height_bip115",
                                    "id": 12
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TxOutputBinType",
                            "fields": [
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 1
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "script_pubkey",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_script_version",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TxOutputType",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "address",
                                    "id": 1
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "address_n",
                                    "id": 2
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 3
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "OutputScriptType",
                                    "name": "script_type",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "MultisigRedeemScriptType",
                                    "name": "multisig",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "op_return_data",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_script_version",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "block_hash_bip115",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "block_height_bip115",
                                    "id": 9
                                }
                            ],
                            "enums": [
                                {
                                    "name": "OutputScriptType",
                                    "values": [
                                        {
                                            "name": "PAYTOADDRESS",
                                            "id": 0
                                        },
                                        {
                                            "name": "PAYTOSCRIPTHASH",
                                            "id": 1
                                        },
                                        {
                                            "name": "PAYTOMULTISIG",
                                            "id": 2
                                        },
                                        {
                                            "name": "PAYTOOPRETURN",
                                            "id": 3
                                        },
                                        {
                                            "name": "PAYTOWITNESS",
                                            "id": 4
                                        },
                                        {
                                            "name": "PAYTOP2SHWITNESS",
                                            "id": 5
                                        }
                                    ],
                                    "options": {}
                                }
                            ],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "FirmwareErase",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "length",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "FirmwareRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "offset",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "length",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "FirmwareUpload",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "hash",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SelfTest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "xpub",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "CardanoTxInputType",
                    "name": "inputs",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "CardanoTxOutputType",
                    "name": "outputs",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "transactions_count",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "protocol_magic",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "CardanoTxInputType",
                    "fields": [
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "prev_hash",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "prev_index",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "type",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "CardanoTxOutputType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "address",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoTxRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "tx_index",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_hash",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_body",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoTxAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "transaction",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_hash",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_body",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Success",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "message",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Failure",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "FailureType",
                    "name": "code",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "message",
                    "id": 2
                }
            ],
            "enums": [
                {
                    "name": "FailureType",
                    "values": [
                        {
                            "name": "Failure_UnexpectedMessage",
                            "id": 1
                        },
                        {
                            "name": "Failure_ButtonExpected",
                            "id": 2
                        },
                        {
                            "name": "Failure_DataError",
                            "id": 3
                        },
                        {
                            "name": "Failure_ActionCancelled",
                            "id": 4
                        },
                        {
                            "name": "Failure_PinExpected",
                            "id": 5
                        },
                        {
                            "name": "Failure_PinCancelled",
                            "id": 6
                        },
                        {
                            "name": "Failure_PinInvalid",
                            "id": 7
                        },
                        {
                            "name": "Failure_InvalidSignature",
                            "id": 8
                        },
                        {
                            "name": "Failure_ProcessError",
                            "id": 9
                        },
                        {
                            "name": "Failure_NotEnoughFunds",
                            "id": 10
                        },
                        {
                            "name": "Failure_NotInitialized",
                            "id": 11
                        },
                        {
                            "name": "Failure_PinMismatch",
                            "id": 12
                        },
                        {
                            "name": "Failure_WipeCodeMismatch",
                            "id": 13
                        },
                        {
                            "name": "Failure_FirmwareError",
                            "id": 99
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ButtonRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "ButtonRequestType",
                    "name": "code",
                    "id": 1
                }
            ],
            "enums": [
                {
                    "name": "ButtonRequestType",
                    "values": [
                        {
                            "name": "ButtonRequest_Other",
                            "id": 1
                        },
                        {
                            "name": "ButtonRequest_FeeOverThreshold",
                            "id": 2
                        },
                        {
                            "name": "ButtonRequest_ConfirmOutput",
                            "id": 3
                        },
                        {
                            "name": "ButtonRequest_ResetDevice",
                            "id": 4
                        },
                        {
                            "name": "ButtonRequest_ConfirmWord",
                            "id": 5
                        },
                        {
                            "name": "ButtonRequest_WipeDevice",
                            "id": 6
                        },
                        {
                            "name": "ButtonRequest_ProtectCall",
                            "id": 7
                        },
                        {
                            "name": "ButtonRequest_SignTx",
                            "id": 8
                        },
                        {
                            "name": "ButtonRequest_FirmwareCheck",
                            "id": 9
                        },
                        {
                            "name": "ButtonRequest_Address",
                            "id": 10
                        },
                        {
                            "name": "ButtonRequest_PublicKey",
                            "id": 11
                        },
                        {
                            "name": "ButtonRequest_MnemonicWordCount",
                            "id": 12
                        },
                        {
                            "name": "ButtonRequest_MnemonicInput",
                            "id": 13
                        },
                        {
                            "name": "ButtonRequest_PassphraseType",
                            "id": 14
                        },
                        {
                            "name": "ButtonRequest_UnknownDerivationPath",
                            "id": 15
                        },
                        {
                            "name": "ButtonRequest_RecoveryHomepage",
                            "id": 16
                        },
                        {
                            "name": "ButtonRequest_Success",
                            "id": 17
                        },
                        {
                            "name": "ButtonRequest_Warning",
                            "id": 18
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ButtonAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PinMatrixRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "PinMatrixRequestType",
                    "name": "type",
                    "id": 1
                }
            ],
            "enums": [
                {
                    "name": "PinMatrixRequestType",
                    "values": [
                        {
                            "name": "PinMatrixRequestType_Current",
                            "id": 1
                        },
                        {
                            "name": "PinMatrixRequestType_NewFirst",
                            "id": 2
                        },
                        {
                            "name": "PinMatrixRequestType_NewSecond",
                            "id": 3
                        },
                        {
                            "name": "PinMatrixRequestType_WipeCodeFirst",
                            "id": 4
                        },
                        {
                            "name": "PinMatrixRequestType_WipeCodeSecond",
                            "id": 5
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PinMatrixAck",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "pin",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "on_device",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "passphrase",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "state",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseStateRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "state",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseStateAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "HDNodeType",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "depth",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "fingerprint",
                    "id": 2
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "child_num",
                    "id": 3
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "chain_code",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "private_key",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CipherKeyValue",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "encrypt",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "ask_on_encrypt",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "ask_on_decrypt",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "iv",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CipheredKeyValue",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "IdentityType",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "proto",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "user",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "host",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "port",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "path",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 0
                    },
                    "type": "uint32",
                    "name": "index",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignIdentity",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "IdentityType",
                    "name": "identity",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "challenge_hidden",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "challenge_visual",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "ecdsa_curve_name",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignedIdentity",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetECDHSessionKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "IdentityType",
                    "name": "identity",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "peer_public_key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "ecdsa_curve_name",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ECDHSessionKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "session_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiCommit",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiCommitment",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "commitment",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pubkey",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiSign",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "global_commitment",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "global_pubkey",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkDecision",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "yes_no",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "DebugSwipeDirection",
                    "name": "swipe",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "input",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "x",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "y",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wait",
                    "id": 6
                }
            ],
            "enums": [
                {
                    "name": "DebugSwipeDirection",
                    "values": [
                        {
                            "name": "UP",
                            "id": 0
                        },
                        {
                            "name": "DOWN",
                            "id": 1
                        },
                        {
                            "name": "LEFT",
                            "id": 2
                        },
                        {
                            "name": "RIGHT",
                            "id": 3
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkLayout",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "string",
                    "name": "lines",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkGetState",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wait_word_list",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wait_word_pos",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wait_layout",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkState",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "layout",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "pin",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "matrix",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "mnemonic_secret",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "reset_word",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "reset_entropy",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "recovery_fake_word",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "recovery_word_pos",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "reset_word_pos",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "mnemonic_type",
                    "id": 12
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "string",
                    "name": "layout_lines",
                    "id": 13
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkStop",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkLog",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "level",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "bucket",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "text",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkMemoryRead",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "length",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkMemory",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "memory",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkMemoryWrite",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "memory",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "flash",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkFlashErase",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sector",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "wif_public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "raw_public_key",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "chain_id",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosTxHeader",
                    "name": "header",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "num_actions",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "EosTxHeader",
                    "fields": [
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "expiration",
                            "id": 1
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "ref_block_num",
                            "id": 2
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "ref_block_prefix",
                            "id": 3
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "max_net_usage_words",
                            "id": 4
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "max_cpu_usage_ms",
                            "id": 5
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "delay_sec",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosTxActionRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "data_size",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosTxActionAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionCommon",
                    "name": "common",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionTransfer",
                    "name": "transfer",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionDelegate",
                    "name": "delegate",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionUndelegate",
                    "name": "undelegate",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionRefund",
                    "name": "refund",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionBuyRam",
                    "name": "buy_ram",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionBuyRamBytes",
                    "name": "buy_ram_bytes",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionSellRam",
                    "name": "sell_ram",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionVoteProducer",
                    "name": "vote_producer",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionUpdateAuth",
                    "name": "update_auth",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionDeleteAuth",
                    "name": "delete_auth",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionLinkAuth",
                    "name": "link_auth",
                    "id": 12
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionUnlinkAuth",
                    "name": "unlink_auth",
                    "id": 13
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionNewAccount",
                    "name": "new_account",
                    "id": 14
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionUnknown",
                    "name": "unknown",
                    "id": 15
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "EosAsset",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "sint64",
                            "name": "amount",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "symbol",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosPermissionLevel",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "actor",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "permission",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosAuthorizationKey",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "type",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "key",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "weight",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosAuthorizationAccount",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosPermissionLevel",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "weight",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosAuthorizationWait",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "wait_sec",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "weight",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosAuthorization",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "threshold",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "EosAuthorizationKey",
                            "name": "keys",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "EosAuthorizationAccount",
                            "name": "accounts",
                            "id": 3
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "EosAuthorizationWait",
                            "name": "waits",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionCommon",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "name",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "EosPermissionLevel",
                            "name": "authorization",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionTransfer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "sender",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "quantity",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "memo",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionDelegate",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "sender",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "net_quantity",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "cpu_quantity",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "transfer",
                            "id": 5
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionUndelegate",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "sender",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "net_quantity",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "cpu_quantity",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionRefund",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "owner",
                            "id": 1
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionBuyRam",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "payer",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "quantity",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionBuyRamBytes",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "payer",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "bytes",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionSellRam",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "bytes",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionVoteProducer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "voter",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "proxy",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint64",
                            "name": "producers",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionUpdateAuth",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "permission",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "parent",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAuthorization",
                            "name": "auth",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionDeleteAuth",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "permission",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionLinkAuth",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "code",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "type",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "requirement",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionUnlinkAuth",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "code",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "type",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionNewAccount",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "creator",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "name",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAuthorization",
                            "name": "owner",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAuthorization",
                            "name": "active",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionUnknown",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "data_size",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "data_chunk",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "signature",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "xpub",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {
                        "deprecated": true
                    },
                    "type": "bytes",
                    "name": "old_address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "nonce",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "gas_price",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "gas_limit",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "to",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data_initial_chunk",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "data_length",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "chain_id",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "tx_type",
                    "id": 10
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumTxRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "data_length",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "signature_v",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature_r",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature_s",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumTxAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data_chunk",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumSignMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumMessageSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumVerifyMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "LiskTransactionCommon",
                    "name": "transaction",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "LiskTransactionCommon",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "LiskTransactionType",
                            "name": "type",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {
                                "default": 0
                            },
                            "type": "uint64",
                            "name": "amount",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "recipient_id",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "sender_public_key",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "requester_public_key",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "signature",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "timestamp",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "LiskTransactionAsset",
                            "name": "asset",
                            "id": 9
                        }
                    ],
                    "enums": [
                        {
                            "name": "LiskTransactionType",
                            "values": [
                                {
                                    "name": "Transfer",
                                    "id": 0
                                },
                                {
                                    "name": "RegisterSecondPassphrase",
                                    "id": 1
                                },
                                {
                                    "name": "RegisterDelegate",
                                    "id": 2
                                },
                                {
                                    "name": "CastVotes",
                                    "id": 3
                                },
                                {
                                    "name": "RegisterMultisignatureAccount",
                                    "id": 4
                                },
                                {
                                    "name": "CreateDapp",
                                    "id": 5
                                },
                                {
                                    "name": "TransferIntoDapp",
                                    "id": 6
                                },
                                {
                                    "name": "TransferOutOfDapp",
                                    "id": 7
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [
                        {
                            "name": "LiskTransactionAsset",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "LiskSignatureType",
                                    "name": "signature",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "LiskDelegateType",
                                    "name": "delegate",
                                    "id": 2
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "string",
                                    "name": "votes",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "LiskMultisignatureType",
                                    "name": "multisignature",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "data",
                                    "id": 5
                                }
                            ],
                            "enums": [],
                            "messages": [
                                {
                                    "name": "LiskSignatureType",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "bytes",
                                            "name": "public_key",
                                            "id": 1
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                },
                                {
                                    "name": "LiskDelegateType",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "string",
                                            "name": "username",
                                            "id": 1
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                },
                                {
                                    "name": "LiskMultisignatureType",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint32",
                                            "name": "min",
                                            "id": 1
                                        },
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint32",
                                            "name": "life_time",
                                            "id": 2
                                        },
                                        {
                                            "rule": "repeated",
                                            "options": {},
                                            "type": "string",
                                            "name": "keys_group",
                                            "id": 3
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                }
                            ],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskSignMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskMessageSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskVerifyMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Initialize",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "state",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "skip_passphrase",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetFeatures",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Features",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "vendor",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "major_version",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "minor_version",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "patch_version",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "bootloader_mode",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "device_id",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "language",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "initialized",
                    "id": 12
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "revision",
                    "id": 13
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "bootloader_hash",
                    "id": 14
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "imported",
                    "id": 15
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_cached",
                    "id": 16
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_cached",
                    "id": 17
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "firmware_present",
                    "id": 18
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "needs_backup",
                    "id": 19
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "flags",
                    "id": 20
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "model",
                    "id": 21
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fw_major",
                    "id": 22
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fw_minor",
                    "id": 23
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fw_patch",
                    "id": 24
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "fw_vendor",
                    "id": 25
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "fw_vendor_keys",
                    "id": 26
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "unfinished_backup",
                    "id": 27
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "no_backup",
                    "id": 28
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "recovery_mode",
                    "id": 29
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "Capability",
                    "name": "capabilities",
                    "id": 30
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "BackupType",
                    "name": "backup_type",
                    "id": 31
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "sd_card_present",
                    "id": 32
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "sd_protection",
                    "id": 33
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wipe_code_protection",
                    "id": 34
                }
            ],
            "enums": [
                {
                    "name": "Capability",
                    "values": [
                        {
                            "name": "Capability_Bitcoin",
                            "id": 1
                        },
                        {
                            "name": "Capability_Bitcoin_like",
                            "id": 2
                        },
                        {
                            "name": "Capability_Binance",
                            "id": 3
                        },
                        {
                            "name": "Capability_Cardano",
                            "id": 4
                        },
                        {
                            "name": "Capability_Crypto",
                            "id": 5
                        },
                        {
                            "name": "Capability_EOS",
                            "id": 6
                        },
                        {
                            "name": "Capability_Ethereum",
                            "id": 7
                        },
                        {
                            "name": "Capability_Lisk",
                            "id": 8
                        },
                        {
                            "name": "Capability_Monero",
                            "id": 9
                        },
                        {
                            "name": "Capability_NEM",
                            "id": 10
                        },
                        {
                            "name": "Capability_Ripple",
                            "id": 11
                        },
                        {
                            "name": "Capability_Stellar",
                            "id": 12
                        },
                        {
                            "name": "Capability_Tezos",
                            "id": 13
                        },
                        {
                            "name": "Capability_U2F",
                            "id": 14
                        },
                        {
                            "name": "Capability_Shamir",
                            "id": 15
                        },
                        {
                            "name": "Capability_ShamirGroups",
                            "id": 16
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ClearSession",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ApplySettings",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "language",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "use_passphrase",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "homescreen",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "PassphraseSourceType",
                    "name": "passphrase_source",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "auto_lock_delay_ms",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "display_rotation",
                    "id": 7
                }
            ],
            "enums": [
                {
                    "name": "PassphraseSourceType",
                    "values": [
                        {
                            "name": "ASK",
                            "id": 0
                        },
                        {
                            "name": "DEVICE",
                            "id": 1
                        },
                        {
                            "name": "HOST",
                            "id": 2
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ApplyFlags",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "flags",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ChangePin",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "remove",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ChangeWipeCode",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "remove",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SdProtect",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "SdProtectOperationType",
                    "name": "operation",
                    "id": 1
                }
            ],
            "enums": [
                {
                    "name": "SdProtectOperationType",
                    "values": [
                        {
                            "name": "DISABLE",
                            "id": 0
                        },
                        {
                            "name": "ENABLE",
                            "id": 1
                        },
                        {
                            "name": "REFRESH",
                            "id": 2
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Ping",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "message",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "button_protection",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Cancel",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetEntropy",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "size",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Entropy",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "entropy",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WipeDevice",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LoadDevice",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "string",
                    "name": "mnemonics",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "pin",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "english"
                    },
                    "type": "string",
                    "name": "language",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "skip_checksum",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "needs_backup",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "no_backup",
                    "id": 10
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ResetDevice",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "display_random",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 256
                    },
                    "type": "uint32",
                    "name": "strength",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "english"
                    },
                    "type": "string",
                    "name": "language",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "skip_backup",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "no_backup",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bip39"
                    },
                    "type": "BackupType",
                    "name": "backup_type",
                    "id": 10
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BackupDevice",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EntropyRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EntropyAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "entropy",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RecoveryDevice",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "word_count",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "english"
                    },
                    "type": "string",
                    "name": "language",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "enforce_wordlist",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "RecoveryDeviceType",
                    "name": "type",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "dry_run",
                    "id": 10
                }
            ],
            "enums": [
                {
                    "name": "RecoveryDeviceType",
                    "values": [
                        {
                            "name": "RecoveryDeviceType_ScrambledWords",
                            "id": 0
                        },
                        {
                            "name": "RecoveryDeviceType_Matrix",
                            "id": 1
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WordRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "WordRequestType",
                    "name": "type",
                    "id": 1
                }
            ],
            "enums": [
                {
                    "name": "WordRequestType",
                    "values": [
                        {
                            "name": "WordRequestType_Plain",
                            "id": 0
                        },
                        {
                            "name": "WordRequestType_Matrix9",
                            "id": 1
                        },
                        {
                            "name": "WordRequestType_Matrix6",
                            "id": 2
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WordAck",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "word",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SetU2FCounter",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetNextU2FCounter",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NextU2FCounter",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSourceEntry",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroOutputEntry",
                    "name": "outputs",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "real_output",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "real_out_tx_key",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "real_out_additional_tx_keys",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "real_output_in_tx_index",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "amount",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "rct",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "mask",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroMultisigKLRki",
                    "name": "multisig_kLRki",
                    "id": 9
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroOutputEntry",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "idx",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "MoneroRctKeyPublic",
                            "name": "key",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "MoneroRctKeyPublic",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "dest",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "commitment",
                                    "id": 2
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "MoneroMultisigKLRki",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "K",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "L",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "R",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "ki",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionDestinationEntry",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "amount",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroAccountPublicAddress",
                    "name": "addr",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "is_subaddress",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "original",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "is_integrated",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroAccountPublicAddress",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "spend_public_key",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "view_public_key",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionRsigData",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "rsig_type",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "offload_type",
                    "id": 2
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint64",
                    "name": "grouping",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "mask",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "rsig",
                    "id": 5
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "rsig_parts",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "bp_version",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "account",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "minor",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payment_id",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetWatchKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroWatchKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "watch_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "address",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInitRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "version",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionData",
                    "name": "tsx_data",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroTransactionData",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "version",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "payment_id",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "unlock_time",
                            "id": 3
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "MoneroTransactionDestinationEntry",
                            "name": "outputs",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "MoneroTransactionDestinationEntry",
                            "name": "change_dts",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "num_inputs",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "mixin",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "account",
                            "id": 9
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "minor_indices",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "MoneroTransactionRsigData",
                            "name": "rsig_data",
                            "id": 11
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "integrated_indices",
                            "id": 12
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "client_version",
                            "id": 13
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "hard_fork",
                            "id": 14
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "monero_version",
                            "id": 15
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInitAck",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "hmacs",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetInputRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionSourceEntry",
                    "name": "src_entr",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetInputAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini_hmac",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_hmac",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_alpha",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "spend_key",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputsPermutationRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "perm",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputsPermutationAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputViniRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionSourceEntry",
                    "name": "src_entr",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini_hmac",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_hmac",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputViniAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllInputsSetRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllInputsSetAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetOutputRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionDestinationEntry",
                    "name": "dst_entr",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "dst_entr_hmac",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "is_offloaded_bp",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetOutputAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_out",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vouti_hmac",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "out_pk",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "ecdh_info",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllOutSetRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllOutSetAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "extra",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_prefix_hash",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroRingCtSig",
                    "name": "rv",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "full_message_hash",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroRingCtSig",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "txn_fee",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "message",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "rv_type",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSignInputRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionSourceEntry",
                    "name": "src_entr",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini_hmac",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_hmac",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_alpha",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "spend_key",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSignInputAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionFinalRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionFinalAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "cout_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "rand_mult",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_enc_keys",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageExportInitRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "num",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "hash",
                    "id": 2
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 4
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroSubAddressIndicesList",
                    "name": "subs",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroSubAddressIndicesList",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "minor_indices",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageExportInitAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncStepRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroTransferDetails",
                    "name": "tdis",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroTransferDetails",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "out_key",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "tx_pub_key",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "bytes",
                            "name": "additional_tx_pub_keys",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "internal_output_index",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncStepAck",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroExportedKeyImage",
                    "name": "kis",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroExportedKeyImage",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "iv",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "blob",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncFinalRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncFinalAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "enc_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetTxKeyRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt1",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt2",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_enc_keys",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_prefix_hash",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "reason",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "view_public_key",
                    "id": 8
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetTxKeyAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_keys",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_derivations",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshStartRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshStartAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshStepRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "out_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "recv_deriv",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "real_out_idx",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sub_addr_major",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sub_addr_minor",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshStepAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "key_image",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshFinalRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshFinalAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugMoneroDiagRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "ins",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p1",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p2",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint64",
                    "name": "pd",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data1",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data2",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugMoneroDiagAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "ins",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p1",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p2",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint64",
                    "name": "pd",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data1",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data2",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMAddress",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMSignTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMTransactionCommon",
                    "name": "transaction",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMTransactionCommon",
                    "name": "multisig",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMTransfer",
                    "name": "transfer",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "cosigning",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMProvisionNamespace",
                    "name": "provision_namespace",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMMosaicCreation",
                    "name": "mosaic_creation",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMMosaicSupplyChange",
                    "name": "supply_change",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMAggregateModification",
                    "name": "aggregate_modification",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMImportanceTransfer",
                    "name": "importance_transfer",
                    "id": 9
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "NEMTransactionCommon",
                    "fields": [
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "network",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "timestamp",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "deadline",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "signer",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMTransfer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "recipient",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "payload",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 4
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "NEMMosaic",
                            "name": "mosaics",
                            "id": 5
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "NEMMosaic",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "namespace",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "mosaic",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "quantity",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMProvisionNamespace",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "namespace",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "parent",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "sink",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMMosaicCreation",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "NEMMosaicDefinition",
                            "name": "definition",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "sink",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "NEMMosaicDefinition",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "name",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "ticker",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "namespace",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "mosaic",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "divisibility",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "NEMMosaicLevy",
                                    "name": "levy",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "fee",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "levy_address",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "levy_namespace",
                                    "id": 9
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "levy_mosaic",
                                    "id": 10
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "supply",
                                    "id": 11
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bool",
                                    "name": "mutable_supply",
                                    "id": 12
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bool",
                                    "name": "transferable",
                                    "id": 13
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "description",
                                    "id": 14
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "networks",
                                    "id": 15
                                }
                            ],
                            "enums": [
                                {
                                    "name": "NEMMosaicLevy",
                                    "values": [
                                        {
                                            "name": "MosaicLevy_Absolute",
                                            "id": 1
                                        },
                                        {
                                            "name": "MosaicLevy_Percentile",
                                            "id": 2
                                        }
                                    ],
                                    "options": {}
                                }
                            ],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMMosaicSupplyChange",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "namespace",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "mosaic",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "NEMSupplyChangeType",
                            "name": "type",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "delta",
                            "id": 4
                        }
                    ],
                    "enums": [
                        {
                            "name": "NEMSupplyChangeType",
                            "values": [
                                {
                                    "name": "SupplyChange_Increase",
                                    "id": 1
                                },
                                {
                                    "name": "SupplyChange_Decrease",
                                    "id": 2
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMAggregateModification",
                    "fields": [
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "NEMCosignatoryModification",
                            "name": "modifications",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "sint32",
                            "name": "relative_change",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "NEMCosignatoryModification",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "NEMModificationType",
                                    "name": "type",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "public_key",
                                    "id": 2
                                }
                            ],
                            "enums": [
                                {
                                    "name": "NEMModificationType",
                                    "values": [
                                        {
                                            "name": "CosignatoryModification_Add",
                                            "id": 1
                                        },
                                        {
                                            "name": "CosignatoryModification_Delete",
                                            "id": 2
                                        }
                                    ],
                                    "options": {}
                                }
                            ],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMImportanceTransfer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "NEMImportanceTransferMode",
                            "name": "mode",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 2
                        }
                    ],
                    "enums": [
                        {
                            "name": "NEMImportanceTransferMode",
                            "values": [
                                {
                                    "name": "ImportanceTransfer_Activate",
                                    "id": 1
                                },
                                {
                                    "name": "ImportanceTransfer_Deactivate",
                                    "id": 2
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMDecryptMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMDecryptedMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "fee",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "flags",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sequence",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "last_ledger_sequence",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "RipplePayment",
                    "name": "payment",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "RipplePayment",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "destination",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "destination_tag",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "serialized_tx",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAssetType",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "type",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "code",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "issuer",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "network_passphrase",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fee",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "sequence_number",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "timebounds_start",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "timebounds_end",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "memo_type",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "memo_text",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "memo_id",
                    "id": 12
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "memo_hash",
                    "id": 13
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "num_operations",
                    "id": 14
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarTxOpRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarPaymentOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "destination_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "asset",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "amount",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarCreateAccountOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "new_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "starting_balance",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarPathPaymentOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "send_asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "send_max",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "destination_account",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "destination_asset",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "destination_amount",
                    "id": 6
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "paths",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarManageOfferOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "selling_asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "buying_asset",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "amount",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_n",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_d",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "offer_id",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarCreatePassiveOfferOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "selling_asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "buying_asset",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "amount",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_n",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_d",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarSetOptionsOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "inflation_destination_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "clear_flags",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "set_flags",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "master_weight",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "low_threshold",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "medium_threshold",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "high_threshold",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "home_domain",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "signer_type",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signer_key",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "signer_weight",
                    "id": 12
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarChangeTrustOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "limit",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAllowTrustOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "trusted_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "asset_type",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "asset_code",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "is_authorized",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAccountMergeOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "destination_account",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarManageDataOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarBumpSequenceOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "bump_to",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "public_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "branch",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosRevealOp",
                    "name": "reveal",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosTransactionOp",
                    "name": "transaction",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosOriginationOp",
                    "name": "origination",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosDelegationOp",
                    "name": "delegation",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosProposalOp",
                    "name": "proposal",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosBallotOp",
                    "name": "ballot",
                    "id": 8
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "TezosContractID",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractType",
                            "name": "tag",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "hash",
                            "id": 2
                        }
                    ],
                    "enums": [
                        {
                            "name": "TezosContractType",
                            "values": [
                                {
                                    "name": "Implicit",
                                    "id": 0
                                },
                                {
                                    "name": "Originated",
                                    "id": 1
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosRevealOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosTransactionOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractID",
                            "name": "destination",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "parameters",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosParametersManager",
                            "name": "parameters_manager",
                            "id": 10
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "TezosParametersManager",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "set_delegate",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bool",
                                    "name": "cancel_delegate",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "TezosManagerTransfer",
                                    "name": "transfer",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [
                                {
                                    "name": "TezosManagerTransfer",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "TezosContractID",
                                            "name": "destination",
                                            "id": 1
                                        },
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint64",
                                            "name": "amount",
                                            "id": 2
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                }
                            ],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosOriginationOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 12
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "manager_pubkey",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "balance",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "spendable",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "delegatable",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "delegate",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "script",
                            "id": 11
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosDelegationOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "delegate",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosProposalOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "period",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "bytes",
                            "name": "proposals",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosBallotOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "period",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "proposal",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosBallotType",
                            "name": "ballot",
                            "id": 4
                        }
                    ],
                    "enums": [
                        {
                            "name": "TezosBallotType",
                            "values": [
                                {
                                    "name": "Yay",
                                    "id": 0
                                },
                                {
                                    "name": "Nay",
                                    "id": 1
                                },
                                {
                                    "name": "Pass",
                                    "id": 2
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "sig_op_contents",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "operation_hash",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WebAuthnListResidentCredentials",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WebAuthnAddResidentCredential",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "credential_id",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WebAuthnRemoveResidentCredential",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "index",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WebAuthnCredentials",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "WebAuthnCredential",
                    "name": "credentials",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "WebAuthnCredential",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "index",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "id",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "rp_id",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "rp_name",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "user_id",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "user_name",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "user_display_name",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "creation_time",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "hmac_secret",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "use_sign_count",
                            "id": 10
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "ref": "google.protobuf.EnumValueOptions",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_in",
                    "id": 50002
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_out",
                    "id": 50003
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_debug_in",
                    "id": 50004
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_debug_out",
                    "id": 50005
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_tiny",
                    "id": 50006
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_bootloader",
                    "id": 50007
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_no_fsm",
                    "id": 50008
                }
            ]
        }
    ],
    "enums": [
        {
            "name": "InputScriptType",
            "values": [
                {
                    "name": "SPENDADDRESS",
                    "id": 0
                },
                {
                    "name": "SPENDMULTISIG",
                    "id": 1
                },
                {
                    "name": "EXTERNAL",
                    "id": 2
                },
                {
                    "name": "SPENDWITNESS",
                    "id": 3
                },
                {
                    "name": "SPENDP2SHWITNESS",
                    "id": 4
                }
            ],
            "options": {}
        },
        {
            "name": "BackupType",
            "values": [
                {
                    "name": "Bip39",
                    "id": 0
                },
                {
                    "name": "Slip39_Basic",
                    "id": 1
                },
                {
                    "name": "Slip39_Advanced",
                    "id": 2
                }
            ],
            "options": {}
        },
        {
            "name": "MessageType",
            "values": [
                {
                    "name": "MessageType_Initialize",
                    "id": 0
                },
                {
                    "name": "MessageType_Ping",
                    "id": 1
                },
                {
                    "name": "MessageType_Success",
                    "id": 2
                },
                {
                    "name": "MessageType_Failure",
                    "id": 3
                },
                {
                    "name": "MessageType_ChangePin",
                    "id": 4
                },
                {
                    "name": "MessageType_WipeDevice",
                    "id": 5
                },
                {
                    "name": "MessageType_GetEntropy",
                    "id": 9
                },
                {
                    "name": "MessageType_Entropy",
                    "id": 10
                },
                {
                    "name": "MessageType_LoadDevice",
                    "id": 13
                },
                {
                    "name": "MessageType_ResetDevice",
                    "id": 14
                },
                {
                    "name": "MessageType_Features",
                    "id": 17
                },
                {
                    "name": "MessageType_PinMatrixRequest",
                    "id": 18
                },
                {
                    "name": "MessageType_PinMatrixAck",
                    "id": 19
                },
                {
                    "name": "MessageType_Cancel",
                    "id": 20
                },
                {
                    "name": "MessageType_ClearSession",
                    "id": 24
                },
                {
                    "name": "MessageType_ApplySettings",
                    "id": 25
                },
                {
                    "name": "MessageType_ButtonRequest",
                    "id": 26
                },
                {
                    "name": "MessageType_ButtonAck",
                    "id": 27
                },
                {
                    "name": "MessageType_ApplyFlags",
                    "id": 28
                },
                {
                    "name": "MessageType_BackupDevice",
                    "id": 34
                },
                {
                    "name": "MessageType_EntropyRequest",
                    "id": 35
                },
                {
                    "name": "MessageType_EntropyAck",
                    "id": 36
                },
                {
                    "name": "MessageType_PassphraseRequest",
                    "id": 41
                },
                {
                    "name": "MessageType_PassphraseAck",
                    "id": 42
                },
                {
                    "name": "MessageType_PassphraseStateRequest",
                    "id": 77
                },
                {
                    "name": "MessageType_PassphraseStateAck",
                    "id": 78
                },
                {
                    "name": "MessageType_RecoveryDevice",
                    "id": 45
                },
                {
                    "name": "MessageType_WordRequest",
                    "id": 46
                },
                {
                    "name": "MessageType_WordAck",
                    "id": 47
                },
                {
                    "name": "MessageType_GetFeatures",
                    "id": 55
                },
                {
                    "name": "MessageType_SetU2FCounter",
                    "id": 63
                },
                {
                    "name": "MessageType_SdProtect",
                    "id": 79
                },
                {
                    "name": "MessageType_GetNextU2FCounter",
                    "id": 80
                },
                {
                    "name": "MessageType_NextU2FCounter",
                    "id": 81
                },
                {
                    "name": "MessageType_ChangeWipeCode",
                    "id": 82
                },
                {
                    "name": "MessageType_FirmwareErase",
                    "id": 6
                },
                {
                    "name": "MessageType_FirmwareUpload",
                    "id": 7
                },
                {
                    "name": "MessageType_FirmwareRequest",
                    "id": 8
                },
                {
                    "name": "MessageType_SelfTest",
                    "id": 32
                },
                {
                    "name": "MessageType_GetPublicKey",
                    "id": 11
                },
                {
                    "name": "MessageType_PublicKey",
                    "id": 12
                },
                {
                    "name": "MessageType_SignTx",
                    "id": 15
                },
                {
                    "name": "MessageType_TxRequest",
                    "id": 21
                },
                {
                    "name": "MessageType_TxAck",
                    "id": 22
                },
                {
                    "name": "MessageType_GetAddress",
                    "id": 29
                },
                {
                    "name": "MessageType_Address",
                    "id": 30
                },
                {
                    "name": "MessageType_SignMessage",
                    "id": 38
                },
                {
                    "name": "MessageType_VerifyMessage",
                    "id": 39
                },
                {
                    "name": "MessageType_MessageSignature",
                    "id": 40
                },
                {
                    "name": "MessageType_CipherKeyValue",
                    "id": 23
                },
                {
                    "name": "MessageType_CipheredKeyValue",
                    "id": 48
                },
                {
                    "name": "MessageType_SignIdentity",
                    "id": 53
                },
                {
                    "name": "MessageType_SignedIdentity",
                    "id": 54
                },
                {
                    "name": "MessageType_GetECDHSessionKey",
                    "id": 61
                },
                {
                    "name": "MessageType_ECDHSessionKey",
                    "id": 62
                },
                {
                    "name": "MessageType_CosiCommit",
                    "id": 71
                },
                {
                    "name": "MessageType_CosiCommitment",
                    "id": 72
                },
                {
                    "name": "MessageType_CosiSign",
                    "id": 73
                },
                {
                    "name": "MessageType_CosiSignature",
                    "id": 74
                },
                {
                    "name": "MessageType_DebugLinkDecision",
                    "id": 100
                },
                {
                    "name": "MessageType_DebugLinkGetState",
                    "id": 101
                },
                {
                    "name": "MessageType_DebugLinkState",
                    "id": 102
                },
                {
                    "name": "MessageType_DebugLinkStop",
                    "id": 103
                },
                {
                    "name": "MessageType_DebugLinkLog",
                    "id": 104
                },
                {
                    "name": "MessageType_DebugLinkMemoryRead",
                    "id": 110
                },
                {
                    "name": "MessageType_DebugLinkMemory",
                    "id": 111
                },
                {
                    "name": "MessageType_DebugLinkMemoryWrite",
                    "id": 112
                },
                {
                    "name": "MessageType_DebugLinkFlashErase",
                    "id": 113
                },
                {
                    "name": "MessageType_DebugLinkLayout",
                    "id": 9001
                },
                {
                    "name": "MessageType_EthereumGetPublicKey",
                    "id": 450
                },
                {
                    "name": "MessageType_EthereumPublicKey",
                    "id": 451
                },
                {
                    "name": "MessageType_EthereumGetAddress",
                    "id": 56
                },
                {
                    "name": "MessageType_EthereumAddress",
                    "id": 57
                },
                {
                    "name": "MessageType_EthereumSignTx",
                    "id": 58
                },
                {
                    "name": "MessageType_EthereumTxRequest",
                    "id": 59
                },
                {
                    "name": "MessageType_EthereumTxAck",
                    "id": 60
                },
                {
                    "name": "MessageType_EthereumSignMessage",
                    "id": 64
                },
                {
                    "name": "MessageType_EthereumVerifyMessage",
                    "id": 65
                },
                {
                    "name": "MessageType_EthereumMessageSignature",
                    "id": 66
                },
                {
                    "name": "MessageType_NEMGetAddress",
                    "id": 67
                },
                {
                    "name": "MessageType_NEMAddress",
                    "id": 68
                },
                {
                    "name": "MessageType_NEMSignTx",
                    "id": 69
                },
                {
                    "name": "MessageType_NEMSignedTx",
                    "id": 70
                },
                {
                    "name": "MessageType_NEMDecryptMessage",
                    "id": 75
                },
                {
                    "name": "MessageType_NEMDecryptedMessage",
                    "id": 76
                },
                {
                    "name": "MessageType_LiskGetAddress",
                    "id": 114
                },
                {
                    "name": "MessageType_LiskAddress",
                    "id": 115
                },
                {
                    "name": "MessageType_LiskSignTx",
                    "id": 116
                },
                {
                    "name": "MessageType_LiskSignedTx",
                    "id": 117
                },
                {
                    "name": "MessageType_LiskSignMessage",
                    "id": 118
                },
                {
                    "name": "MessageType_LiskMessageSignature",
                    "id": 119
                },
                {
                    "name": "MessageType_LiskVerifyMessage",
                    "id": 120
                },
                {
                    "name": "MessageType_LiskGetPublicKey",
                    "id": 121
                },
                {
                    "name": "MessageType_LiskPublicKey",
                    "id": 122
                },
                {
                    "name": "MessageType_TezosGetAddress",
                    "id": 150
                },
                {
                    "name": "MessageType_TezosAddress",
                    "id": 151
                },
                {
                    "name": "MessageType_TezosSignTx",
                    "id": 152
                },
                {
                    "name": "MessageType_TezosSignedTx",
                    "id": 153
                },
                {
                    "name": "MessageType_TezosGetPublicKey",
                    "id": 154
                },
                {
                    "name": "MessageType_TezosPublicKey",
                    "id": 155
                },
                {
                    "name": "MessageType_StellarSignTx",
                    "id": 202
                },
                {
                    "name": "MessageType_StellarTxOpRequest",
                    "id": 203
                },
                {
                    "name": "MessageType_StellarGetAddress",
                    "id": 207
                },
                {
                    "name": "MessageType_StellarAddress",
                    "id": 208
                },
                {
                    "name": "MessageType_StellarCreateAccountOp",
                    "id": 210
                },
                {
                    "name": "MessageType_StellarPaymentOp",
                    "id": 211
                },
                {
                    "name": "MessageType_StellarPathPaymentOp",
                    "id": 212
                },
                {
                    "name": "MessageType_StellarManageOfferOp",
                    "id": 213
                },
                {
                    "name": "MessageType_StellarCreatePassiveOfferOp",
                    "id": 214
                },
                {
                    "name": "MessageType_StellarSetOptionsOp",
                    "id": 215
                },
                {
                    "name": "MessageType_StellarChangeTrustOp",
                    "id": 216
                },
                {
                    "name": "MessageType_StellarAllowTrustOp",
                    "id": 217
                },
                {
                    "name": "MessageType_StellarAccountMergeOp",
                    "id": 218
                },
                {
                    "name": "MessageType_StellarManageDataOp",
                    "id": 220
                },
                {
                    "name": "MessageType_StellarBumpSequenceOp",
                    "id": 221
                },
                {
                    "name": "MessageType_StellarSignedTx",
                    "id": 230
                },
                {
                    "name": "MessageType_CardanoSignTx",
                    "id": 303
                },
                {
                    "name": "MessageType_CardanoTxRequest",
                    "id": 304
                },
                {
                    "name": "MessageType_CardanoGetPublicKey",
                    "id": 305
                },
                {
                    "name": "MessageType_CardanoPublicKey",
                    "id": 306
                },
                {
                    "name": "MessageType_CardanoGetAddress",
                    "id": 307
                },
                {
                    "name": "MessageType_CardanoAddress",
                    "id": 308
                },
                {
                    "name": "MessageType_CardanoTxAck",
                    "id": 309
                },
                {
                    "name": "MessageType_CardanoSignedTx",
                    "id": 310
                },
                {
                    "name": "MessageType_RippleGetAddress",
                    "id": 400
                },
                {
                    "name": "MessageType_RippleAddress",
                    "id": 401
                },
                {
                    "name": "MessageType_RippleSignTx",
                    "id": 402
                },
                {
                    "name": "MessageType_RippleSignedTx",
                    "id": 403
                },
                {
                    "name": "MessageType_MoneroTransactionInitRequest",
                    "id": 501
                },
                {
                    "name": "MessageType_MoneroTransactionInitAck",
                    "id": 502
                },
                {
                    "name": "MessageType_MoneroTransactionSetInputRequest",
                    "id": 503
                },
                {
                    "name": "MessageType_MoneroTransactionSetInputAck",
                    "id": 504
                },
                {
                    "name": "MessageType_MoneroTransactionInputsPermutationRequest",
                    "id": 505
                },
                {
                    "name": "MessageType_MoneroTransactionInputsPermutationAck",
                    "id": 506
                },
                {
                    "name": "MessageType_MoneroTransactionInputViniRequest",
                    "id": 507
                },
                {
                    "name": "MessageType_MoneroTransactionInputViniAck",
                    "id": 508
                },
                {
                    "name": "MessageType_MoneroTransactionAllInputsSetRequest",
                    "id": 509
                },
                {
                    "name": "MessageType_MoneroTransactionAllInputsSetAck",
                    "id": 510
                },
                {
                    "name": "MessageType_MoneroTransactionSetOutputRequest",
                    "id": 511
                },
                {
                    "name": "MessageType_MoneroTransactionSetOutputAck",
                    "id": 512
                },
                {
                    "name": "MessageType_MoneroTransactionAllOutSetRequest",
                    "id": 513
                },
                {
                    "name": "MessageType_MoneroTransactionAllOutSetAck",
                    "id": 514
                },
                {
                    "name": "MessageType_MoneroTransactionSignInputRequest",
                    "id": 515
                },
                {
                    "name": "MessageType_MoneroTransactionSignInputAck",
                    "id": 516
                },
                {
                    "name": "MessageType_MoneroTransactionFinalRequest",
                    "id": 517
                },
                {
                    "name": "MessageType_MoneroTransactionFinalAck",
                    "id": 518
                },
                {
                    "name": "MessageType_MoneroKeyImageExportInitRequest",
                    "id": 530
                },
                {
                    "name": "MessageType_MoneroKeyImageExportInitAck",
                    "id": 531
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncStepRequest",
                    "id": 532
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncStepAck",
                    "id": 533
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncFinalRequest",
                    "id": 534
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncFinalAck",
                    "id": 535
                },
                {
                    "name": "MessageType_MoneroGetAddress",
                    "id": 540
                },
                {
                    "name": "MessageType_MoneroAddress",
                    "id": 541
                },
                {
                    "name": "MessageType_MoneroGetWatchKey",
                    "id": 542
                },
                {
                    "name": "MessageType_MoneroWatchKey",
                    "id": 543
                },
                {
                    "name": "MessageType_DebugMoneroDiagRequest",
                    "id": 546
                },
                {
                    "name": "MessageType_DebugMoneroDiagAck",
                    "id": 547
                },
                {
                    "name": "MessageType_MoneroGetTxKeyRequest",
                    "id": 550
                },
                {
                    "name": "MessageType_MoneroGetTxKeyAck",
                    "id": 551
                },
                {
                    "name": "MessageType_MoneroLiveRefreshStartRequest",
                    "id": 552
                },
                {
                    "name": "MessageType_MoneroLiveRefreshStartAck",
                    "id": 553
                },
                {
                    "name": "MessageType_MoneroLiveRefreshStepRequest",
                    "id": 554
                },
                {
                    "name": "MessageType_MoneroLiveRefreshStepAck",
                    "id": 555
                },
                {
                    "name": "MessageType_MoneroLiveRefreshFinalRequest",
                    "id": 556
                },
                {
                    "name": "MessageType_MoneroLiveRefreshFinalAck",
                    "id": 557
                },
                {
                    "name": "MessageType_EosGetPublicKey",
                    "id": 600
                },
                {
                    "name": "MessageType_EosPublicKey",
                    "id": 601
                },
                {
                    "name": "MessageType_EosSignTx",
                    "id": 602
                },
                {
                    "name": "MessageType_EosTxActionRequest",
                    "id": 603
                },
                {
                    "name": "MessageType_EosTxActionAck",
                    "id": 604
                },
                {
                    "name": "MessageType_EosSignedTx",
                    "id": 605
                },
                {
                    "name": "MessageType_BinanceGetAddress",
                    "id": 700
                },
                {
                    "name": "MessageType_BinanceAddress",
                    "id": 701
                },
                {
                    "name": "MessageType_BinanceGetPublicKey",
                    "id": 702
                },
                {
                    "name": "MessageType_BinancePublicKey",
                    "id": 703
                },
                {
                    "name": "MessageType_BinanceSignTx",
                    "id": 704
                },
                {
                    "name": "MessageType_BinanceTxRequest",
                    "id": 705
                },
                {
                    "name": "MessageType_BinanceTransferMsg",
                    "id": 706
                },
                {
                    "name": "MessageType_BinanceOrderMsg",
                    "id": 707
                },
                {
                    "name": "MessageType_BinanceCancelMsg",
                    "id": 708
                },
                {
                    "name": "MessageType_BinanceSignedTx",
                    "id": 709
                },
                {
                    "name": "MessageType_WebAuthnListResidentCredentials",
                    "id": 800
                },
                {
                    "name": "MessageType_WebAuthnCredentials",
                    "id": 801
                },
                {
                    "name": "MessageType_WebAuthnAddResidentCredential",
                    "id": 802
                },
                {
                    "name": "MessageType_WebAuthnRemoveResidentCredential",
                    "id": 803
                }
            ],
            "options": {}
        }
    ],
    "imports": [],
    "options": {},
    "services": []
}; 

var globalMessages = {
    "package": null,
    "messages": [
        {
            "name": "BinanceGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinancePublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "msg_count",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "account_number",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "chain_id",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "memo",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "sequence",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "source",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceTxRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceTransferMsg",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "BinanceInputOutput",
                    "name": "inputs",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "BinanceInputOutput",
                    "name": "outputs",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "BinanceInputOutput",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "address",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "BinanceCoin",
                            "name": "coins",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "BinanceCoin",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "sint64",
                            "name": "amount",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "denom",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceOrderMsg",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "id",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "BinanceOrderType",
                    "name": "ordertype",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "price",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "quantity",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "sender",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "BinanceOrderSide",
                    "name": "side",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "symbol",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "BinanceTimeInForce",
                    "name": "timeinforce",
                    "id": 8
                }
            ],
            "enums": [
                {
                    "name": "BinanceOrderType",
                    "values": [
                        {
                            "name": "OT_UNKNOWN",
                            "id": 0
                        },
                        {
                            "name": "MARKET",
                            "id": 1
                        },
                        {
                            "name": "LIMIT",
                            "id": 2
                        },
                        {
                            "name": "OT_RESERVED",
                            "id": 3
                        }
                    ],
                    "options": {}
                },
                {
                    "name": "BinanceOrderSide",
                    "values": [
                        {
                            "name": "SIDE_UNKNOWN",
                            "id": 0
                        },
                        {
                            "name": "BUY",
                            "id": 1
                        },
                        {
                            "name": "SELL",
                            "id": 2
                        }
                    ],
                    "options": {}
                },
                {
                    "name": "BinanceTimeInForce",
                    "values": [
                        {
                            "name": "TIF_UNKNOWN",
                            "id": 0
                        },
                        {
                            "name": "GTE",
                            "id": 1
                        },
                        {
                            "name": "TIF_RESERVED",
                            "id": 2
                        },
                        {
                            "name": "IOC",
                            "id": 3
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceCancelMsg",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "refid",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "sender",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "symbol",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BinanceSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MultisigRedeemScriptType",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "HDNodePathType",
                    "name": "pubkeys",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "signatures",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "m",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "nodes",
                    "id": 4
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "HDNodePathType",
                    "fields": [
                        {
                            "rule": "required",
                            "options": {},
                            "type": "HDNodeType",
                            "name": "node",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "ecdsa_curve_name",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "SPENDADDRESS"
                    },
                    "type": "InputScriptType",
                    "name": "script_type",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "xpub",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MultisigRedeemScriptType",
                    "name": "multisig",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "SPENDADDRESS"
                    },
                    "type": "InputScriptType",
                    "name": "script_type",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Address",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "SPENDADDRESS"
                    },
                    "type": "InputScriptType",
                    "name": "script_type",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MessageSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "VerifyMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignTx",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "outputs_count",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "inputs_count",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bitcoin"
                    },
                    "type": "string",
                    "name": "coin_name",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 1
                    },
                    "type": "uint32",
                    "name": "version",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 0
                    },
                    "type": "uint32",
                    "name": "lock_time",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "expiry",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "overwintered",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "version_group_id",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "timestamp",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "branch_id",
                    "id": 10
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TxRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "RequestType",
                    "name": "request_type",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TxRequestDetailsType",
                    "name": "details",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TxRequestSerializedType",
                    "name": "serialized",
                    "id": 3
                }
            ],
            "enums": [
                {
                    "name": "RequestType",
                    "values": [
                        {
                            "name": "TXINPUT",
                            "id": 0
                        },
                        {
                            "name": "TXOUTPUT",
                            "id": 1
                        },
                        {
                            "name": "TXMETA",
                            "id": 2
                        },
                        {
                            "name": "TXFINISHED",
                            "id": 3
                        },
                        {
                            "name": "TXEXTRADATA",
                            "id": 4
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [
                {
                    "name": "TxRequestDetailsType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "request_index",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "tx_hash",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "extra_data_len",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "extra_data_offset",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TxRequestSerializedType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "signature_index",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "signature",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "serialized_tx",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TxAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TransactionType",
                    "name": "tx",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "TransactionType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "version",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "TxInputType",
                            "name": "inputs",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "TxOutputBinType",
                            "name": "bin_outputs",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "lock_time",
                            "id": 4
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "TxOutputType",
                            "name": "outputs",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "inputs_cnt",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "outputs_cnt",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "extra_data",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "extra_data_len",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "expiry",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "overwintered",
                            "id": 11
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "version_group_id",
                            "id": 12
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "timestamp",
                            "id": 13
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "branch_id",
                            "id": 14
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "TxInputType",
                            "fields": [
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "address_n",
                                    "id": 1
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "prev_hash",
                                    "id": 2
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "prev_index",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "script_sig",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {
                                        "default": 4294967295
                                    },
                                    "type": "uint32",
                                    "name": "sequence",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {
                                        "default": "SPENDADDRESS"
                                    },
                                    "type": "InputScriptType",
                                    "name": "script_type",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "MultisigRedeemScriptType",
                                    "name": "multisig",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_tree",
                                    "id": 9
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_script_version",
                                    "id": 10
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "prev_block_hash_bip115",
                                    "id": 11
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "prev_block_height_bip115",
                                    "id": 12
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TxOutputBinType",
                            "fields": [
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 1
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "script_pubkey",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_script_version",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        },
                        {
                            "name": "TxOutputType",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "address",
                                    "id": 1
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "address_n",
                                    "id": 2
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "amount",
                                    "id": 3
                                },
                                {
                                    "rule": "required",
                                    "options": {},
                                    "type": "OutputScriptType",
                                    "name": "script_type",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "MultisigRedeemScriptType",
                                    "name": "multisig",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "op_return_data",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "decred_script_version",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "block_hash_bip115",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "block_height_bip115",
                                    "id": 9
                                }
                            ],
                            "enums": [
                                {
                                    "name": "OutputScriptType",
                                    "values": [
                                        {
                                            "name": "PAYTOADDRESS",
                                            "id": 0
                                        },
                                        {
                                            "name": "PAYTOSCRIPTHASH",
                                            "id": 1
                                        },
                                        {
                                            "name": "PAYTOMULTISIG",
                                            "id": 2
                                        },
                                        {
                                            "name": "PAYTOOPRETURN",
                                            "id": 3
                                        },
                                        {
                                            "name": "PAYTOWITNESS",
                                            "id": 4
                                        },
                                        {
                                            "name": "PAYTOP2SHWITNESS",
                                            "id": 5
                                        }
                                    ],
                                    "options": {}
                                }
                            ],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "FirmwareErase",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "length",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "FirmwareRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "offset",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "length",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "FirmwareUpload",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "hash",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SelfTest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "xpub",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "CardanoTxInputType",
                    "name": "inputs",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "CardanoTxOutputType",
                    "name": "outputs",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "transactions_count",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "protocol_magic",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "CardanoTxInputType",
                    "fields": [
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "prev_hash",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "prev_index",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "type",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "CardanoTxOutputType",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "address",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoTxRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "tx_index",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_hash",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_body",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoTxAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "transaction",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CardanoSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_hash",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_body",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Success",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "message",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Failure",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "FailureType",
                    "name": "code",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "message",
                    "id": 2
                }
            ],
            "enums": [
                {
                    "name": "FailureType",
                    "values": [
                        {
                            "name": "Failure_UnexpectedMessage",
                            "id": 1
                        },
                        {
                            "name": "Failure_ButtonExpected",
                            "id": 2
                        },
                        {
                            "name": "Failure_DataError",
                            "id": 3
                        },
                        {
                            "name": "Failure_ActionCancelled",
                            "id": 4
                        },
                        {
                            "name": "Failure_PinExpected",
                            "id": 5
                        },
                        {
                            "name": "Failure_PinCancelled",
                            "id": 6
                        },
                        {
                            "name": "Failure_PinInvalid",
                            "id": 7
                        },
                        {
                            "name": "Failure_InvalidSignature",
                            "id": 8
                        },
                        {
                            "name": "Failure_ProcessError",
                            "id": 9
                        },
                        {
                            "name": "Failure_NotEnoughFunds",
                            "id": 10
                        },
                        {
                            "name": "Failure_NotInitialized",
                            "id": 11
                        },
                        {
                            "name": "Failure_PinMismatch",
                            "id": 12
                        },
                        {
                            "name": "Failure_WipeCodeMismatch",
                            "id": 13
                        },
                        {
                            "name": "Failure_FirmwareError",
                            "id": 99
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ButtonRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "ButtonRequestType",
                    "name": "code",
                    "id": 1
                }
            ],
            "enums": [
                {
                    "name": "ButtonRequestType",
                    "values": [
                        {
                            "name": "ButtonRequest_Other",
                            "id": 1
                        },
                        {
                            "name": "ButtonRequest_FeeOverThreshold",
                            "id": 2
                        },
                        {
                            "name": "ButtonRequest_ConfirmOutput",
                            "id": 3
                        },
                        {
                            "name": "ButtonRequest_ResetDevice",
                            "id": 4
                        },
                        {
                            "name": "ButtonRequest_ConfirmWord",
                            "id": 5
                        },
                        {
                            "name": "ButtonRequest_WipeDevice",
                            "id": 6
                        },
                        {
                            "name": "ButtonRequest_ProtectCall",
                            "id": 7
                        },
                        {
                            "name": "ButtonRequest_SignTx",
                            "id": 8
                        },
                        {
                            "name": "ButtonRequest_FirmwareCheck",
                            "id": 9
                        },
                        {
                            "name": "ButtonRequest_Address",
                            "id": 10
                        },
                        {
                            "name": "ButtonRequest_PublicKey",
                            "id": 11
                        },
                        {
                            "name": "ButtonRequest_MnemonicWordCount",
                            "id": 12
                        },
                        {
                            "name": "ButtonRequest_MnemonicInput",
                            "id": 13
                        },
                        {
                            "name": "_Deprecated_ButtonRequest_PassphraseType",
                            "id": 14
                        },
                        {
                            "name": "ButtonRequest_UnknownDerivationPath",
                            "id": 15
                        },
                        {
                            "name": "ButtonRequest_RecoveryHomepage",
                            "id": 16
                        },
                        {
                            "name": "ButtonRequest_Success",
                            "id": 17
                        },
                        {
                            "name": "ButtonRequest_Warning",
                            "id": 18
                        },
                        {
                            "name": "ButtonRequest_PassphraseEntry",
                            "id": 19
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ButtonAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PinMatrixRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "PinMatrixRequestType",
                    "name": "type",
                    "id": 1
                }
            ],
            "enums": [
                {
                    "name": "PinMatrixRequestType",
                    "values": [
                        {
                            "name": "PinMatrixRequestType_Current",
                            "id": 1
                        },
                        {
                            "name": "PinMatrixRequestType_NewFirst",
                            "id": 2
                        },
                        {
                            "name": "PinMatrixRequestType_NewSecond",
                            "id": 3
                        },
                        {
                            "name": "PinMatrixRequestType_WipeCodeFirst",
                            "id": 4
                        },
                        {
                            "name": "PinMatrixRequestType_WipeCodeSecond",
                            "id": 5
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PinMatrixAck",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "pin",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {
                        "deprecated": true
                    },
                    "type": "bool",
                    "name": "_on_device",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "PassphraseAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "passphrase",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {
                        "deprecated": true
                    },
                    "type": "bytes",
                    "name": "_state",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "on_device",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Deprecated_PassphraseStateRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "state",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {
                "deprecated": true
            },
            "oneofs": {}
        },
        {
            "name": "Deprecated_PassphraseStateAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {
                "deprecated": true
            },
            "oneofs": {}
        },
        {
            "name": "HDNodeType",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "depth",
                    "id": 1
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "fingerprint",
                    "id": 2
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "child_num",
                    "id": 3
                },
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "chain_code",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "private_key",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CipherKeyValue",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "encrypt",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "ask_on_encrypt",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "ask_on_decrypt",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "iv",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CipheredKeyValue",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "IdentityType",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "proto",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "user",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "host",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "port",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "path",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 0
                    },
                    "type": "uint32",
                    "name": "index",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignIdentity",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "IdentityType",
                    "name": "identity",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "challenge_hidden",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "challenge_visual",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "ecdsa_curve_name",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SignedIdentity",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetECDHSessionKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "IdentityType",
                    "name": "identity",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "peer_public_key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "ecdsa_curve_name",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ECDHSessionKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "session_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiCommit",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiCommitment",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "commitment",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pubkey",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiSign",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "global_commitment",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "global_pubkey",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "CosiSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkDecision",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "yes_no",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "DebugSwipeDirection",
                    "name": "swipe",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "input",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "x",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "y",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wait",
                    "id": 6
                }
            ],
            "enums": [
                {
                    "name": "DebugSwipeDirection",
                    "values": [
                        {
                            "name": "UP",
                            "id": 0
                        },
                        {
                            "name": "DOWN",
                            "id": 1
                        },
                        {
                            "name": "LEFT",
                            "id": 2
                        },
                        {
                            "name": "RIGHT",
                            "id": 3
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkLayout",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "string",
                    "name": "lines",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkReseedRandom",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "value",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkRecordScreen",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "target_directory",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkShowText",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "header_text",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "DebugLinkShowTextItem",
                    "name": "body_text",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "header_icon",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "icon_color",
                    "id": 4
                }
            ],
            "enums": [
                {
                    "name": "DebugLinkShowTextStyle",
                    "values": [
                        {
                            "name": "NORMAL",
                            "id": 0
                        },
                        {
                            "name": "BOLD",
                            "id": 1
                        },
                        {
                            "name": "MONO",
                            "id": 2
                        },
                        {
                            "name": "MONO_BOLD",
                            "id": 3
                        },
                        {
                            "name": "BR",
                            "id": 4
                        },
                        {
                            "name": "BR_HALF",
                            "id": 5
                        },
                        {
                            "name": "SET_COLOR",
                            "id": 6
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [
                {
                    "name": "DebugLinkShowTextItem",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "DebugLinkShowTextStyle",
                            "name": "style",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "content",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkGetState",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wait_word_list",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wait_word_pos",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wait_layout",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkState",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "layout",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "pin",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "matrix",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "mnemonic_secret",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "reset_word",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "reset_entropy",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "recovery_fake_word",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "recovery_word_pos",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "reset_word_pos",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "mnemonic_type",
                    "id": 12
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "string",
                    "name": "layout_lines",
                    "id": 13
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkStop",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkLog",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "level",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "bucket",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "text",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkMemoryRead",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "length",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkMemory",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "memory",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkMemoryWrite",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "memory",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "flash",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkFlashErase",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sector",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugLinkEraseSdCard",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "format",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "wif_public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "raw_public_key",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "chain_id",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosTxHeader",
                    "name": "header",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "num_actions",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "EosTxHeader",
                    "fields": [
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "expiration",
                            "id": 1
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "ref_block_num",
                            "id": 2
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "ref_block_prefix",
                            "id": 3
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "max_net_usage_words",
                            "id": 4
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "max_cpu_usage_ms",
                            "id": 5
                        },
                        {
                            "rule": "required",
                            "options": {},
                            "type": "uint32",
                            "name": "delay_sec",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosTxActionRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "data_size",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosTxActionAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionCommon",
                    "name": "common",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionTransfer",
                    "name": "transfer",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionDelegate",
                    "name": "delegate",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionUndelegate",
                    "name": "undelegate",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionRefund",
                    "name": "refund",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionBuyRam",
                    "name": "buy_ram",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionBuyRamBytes",
                    "name": "buy_ram_bytes",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionSellRam",
                    "name": "sell_ram",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionVoteProducer",
                    "name": "vote_producer",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionUpdateAuth",
                    "name": "update_auth",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionDeleteAuth",
                    "name": "delete_auth",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionLinkAuth",
                    "name": "link_auth",
                    "id": 12
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionUnlinkAuth",
                    "name": "unlink_auth",
                    "id": 13
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionNewAccount",
                    "name": "new_account",
                    "id": 14
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "EosActionUnknown",
                    "name": "unknown",
                    "id": 15
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "EosAsset",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "sint64",
                            "name": "amount",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "symbol",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosPermissionLevel",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "actor",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "permission",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosAuthorizationKey",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "type",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "key",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "weight",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosAuthorizationAccount",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosPermissionLevel",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "weight",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosAuthorizationWait",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "wait_sec",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "weight",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosAuthorization",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "threshold",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "EosAuthorizationKey",
                            "name": "keys",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "EosAuthorizationAccount",
                            "name": "accounts",
                            "id": 3
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "EosAuthorizationWait",
                            "name": "waits",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionCommon",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "name",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "EosPermissionLevel",
                            "name": "authorization",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionTransfer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "sender",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "quantity",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "memo",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionDelegate",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "sender",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "net_quantity",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "cpu_quantity",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "transfer",
                            "id": 5
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionUndelegate",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "sender",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "net_quantity",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "cpu_quantity",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionRefund",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "owner",
                            "id": 1
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionBuyRam",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "payer",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAsset",
                            "name": "quantity",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionBuyRamBytes",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "payer",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "receiver",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "bytes",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionSellRam",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "bytes",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionVoteProducer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "voter",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "proxy",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint64",
                            "name": "producers",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionUpdateAuth",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "permission",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "parent",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAuthorization",
                            "name": "auth",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionDeleteAuth",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "permission",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionLinkAuth",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "code",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "type",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "requirement",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionUnlinkAuth",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "code",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "type",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionNewAccount",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "creator",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "name",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAuthorization",
                            "name": "owner",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "EosAuthorization",
                            "name": "active",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "EosActionUnknown",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "data_size",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "data_chunk",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EosSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "signature",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "HDNodeType",
                    "name": "node",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "xpub",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {
                        "deprecated": true
                    },
                    "type": "bytes",
                    "name": "old_address",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "nonce",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "gas_price",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "gas_limit",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "to",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data_initial_chunk",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "data_length",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "chain_id",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "tx_type",
                    "id": 10
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumTxRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "data_length",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "signature_v",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature_r",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature_s",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumTxAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data_chunk",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumSignMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumMessageSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EthereumVerifyMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "LiskTransactionCommon",
                    "name": "transaction",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "LiskTransactionCommon",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "LiskTransactionType",
                            "name": "type",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "recipient_id",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "sender_public_key",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "requester_public_key",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "signature",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "timestamp",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "LiskTransactionAsset",
                            "name": "asset",
                            "id": 9
                        }
                    ],
                    "enums": [
                        {
                            "name": "LiskTransactionType",
                            "values": [
                                {
                                    "name": "Transfer",
                                    "id": 0
                                },
                                {
                                    "name": "RegisterSecondPassphrase",
                                    "id": 1
                                },
                                {
                                    "name": "RegisterDelegate",
                                    "id": 2
                                },
                                {
                                    "name": "CastVotes",
                                    "id": 3
                                },
                                {
                                    "name": "RegisterMultisignatureAccount",
                                    "id": 4
                                },
                                {
                                    "name": "CreateDapp",
                                    "id": 5
                                },
                                {
                                    "name": "TransferIntoDapp",
                                    "id": 6
                                },
                                {
                                    "name": "TransferOutOfDapp",
                                    "id": 7
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [
                        {
                            "name": "LiskTransactionAsset",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "LiskSignatureType",
                                    "name": "signature",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "LiskDelegateType",
                                    "name": "delegate",
                                    "id": 2
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "string",
                                    "name": "votes",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "LiskMultisignatureType",
                                    "name": "multisignature",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "data",
                                    "id": 5
                                }
                            ],
                            "enums": [],
                            "messages": [
                                {
                                    "name": "LiskSignatureType",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "bytes",
                                            "name": "public_key",
                                            "id": 1
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                },
                                {
                                    "name": "LiskDelegateType",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "string",
                                            "name": "username",
                                            "id": 1
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                },
                                {
                                    "name": "LiskMultisignatureType",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint32",
                                            "name": "min",
                                            "id": 1
                                        },
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint32",
                                            "name": "life_time",
                                            "id": 2
                                        },
                                        {
                                            "rule": "repeated",
                                            "options": {},
                                            "type": "string",
                                            "name": "keys_group",
                                            "id": 3
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                }
                            ],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskSignMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskMessageSignature",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LiskVerifyMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "message",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Initialize",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "session_id",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetFeatures",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Features",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "vendor",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "major_version",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "minor_version",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "patch_version",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "bootloader_mode",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "device_id",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "language",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "initialized",
                    "id": 12
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "revision",
                    "id": 13
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "bootloader_hash",
                    "id": 14
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "imported",
                    "id": 15
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_cached",
                    "id": 16
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "firmware_present",
                    "id": 18
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "needs_backup",
                    "id": 19
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "flags",
                    "id": 20
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "model",
                    "id": 21
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fw_major",
                    "id": 22
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fw_minor",
                    "id": 23
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fw_patch",
                    "id": 24
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "fw_vendor",
                    "id": 25
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "fw_vendor_keys",
                    "id": 26
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "unfinished_backup",
                    "id": 27
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "no_backup",
                    "id": 28
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "recovery_mode",
                    "id": 29
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "Capability",
                    "name": "capabilities",
                    "id": 30
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "BackupType",
                    "name": "backup_type",
                    "id": 31
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "sd_card_present",
                    "id": 32
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "sd_protection",
                    "id": 33
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wipe_code_protection",
                    "id": 34
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "session_id",
                    "id": 35
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_always_on_device",
                    "id": 36
                }
            ],
            "enums": [
                {
                    "name": "Capability",
                    "values": [
                        {
                            "name": "Capability_Bitcoin",
                            "id": 1
                        },
                        {
                            "name": "Capability_Bitcoin_like",
                            "id": 2
                        },
                        {
                            "name": "Capability_Binance",
                            "id": 3
                        },
                        {
                            "name": "Capability_Cardano",
                            "id": 4
                        },
                        {
                            "name": "Capability_Crypto",
                            "id": 5
                        },
                        {
                            "name": "Capability_EOS",
                            "id": 6
                        },
                        {
                            "name": "Capability_Ethereum",
                            "id": 7
                        },
                        {
                            "name": "Capability_Lisk",
                            "id": 8
                        },
                        {
                            "name": "Capability_Monero",
                            "id": 9
                        },
                        {
                            "name": "Capability_NEM",
                            "id": 10
                        },
                        {
                            "name": "Capability_Ripple",
                            "id": 11
                        },
                        {
                            "name": "Capability_Stellar",
                            "id": 12
                        },
                        {
                            "name": "Capability_Tezos",
                            "id": 13
                        },
                        {
                            "name": "Capability_U2F",
                            "id": 14
                        },
                        {
                            "name": "Capability_Shamir",
                            "id": 15
                        },
                        {
                            "name": "Capability_ShamirGroups",
                            "id": 16
                        },
                        {
                            "name": "Capability_PassphraseEntry",
                            "id": 17
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ClearSession",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ApplySettings",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "language",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "use_passphrase",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "homescreen",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "auto_lock_delay_ms",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "display_rotation",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_always_on_device",
                    "id": 8
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ApplyFlags",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "flags",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ChangePin",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "remove",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ChangeWipeCode",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "remove",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SdProtect",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "SdProtectOperationType",
                    "name": "operation",
                    "id": 1
                }
            ],
            "enums": [
                {
                    "name": "SdProtectOperationType",
                    "values": [
                        {
                            "name": "DISABLE",
                            "id": 0
                        },
                        {
                            "name": "ENABLE",
                            "id": 1
                        },
                        {
                            "name": "REFRESH",
                            "id": 2
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Ping",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "message",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "button_protection",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Cancel",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetEntropy",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "uint32",
                    "name": "size",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "Entropy",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "bytes",
                    "name": "entropy",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WipeDevice",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "LoadDevice",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "string",
                    "name": "mnemonics",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "pin",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "en-US"
                    },
                    "type": "string",
                    "name": "language",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "skip_checksum",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "needs_backup",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "no_backup",
                    "id": 10
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "ResetDevice",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "display_random",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": 256
                    },
                    "type": "uint32",
                    "name": "strength",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "en-US"
                    },
                    "type": "string",
                    "name": "language",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "skip_backup",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "no_backup",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "Bip39"
                    },
                    "type": "BackupType",
                    "name": "backup_type",
                    "id": 10
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "BackupDevice",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EntropyRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "EntropyAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "entropy",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RecoveryDevice",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "word_count",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "passphrase_protection",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "pin_protection",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {
                        "default": "en-US"
                    },
                    "type": "string",
                    "name": "language",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "label",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "enforce_wordlist",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "RecoveryDeviceType",
                    "name": "type",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "dry_run",
                    "id": 10
                }
            ],
            "enums": [
                {
                    "name": "RecoveryDeviceType",
                    "values": [
                        {
                            "name": "RecoveryDeviceType_ScrambledWords",
                            "id": 0
                        },
                        {
                            "name": "RecoveryDeviceType_Matrix",
                            "id": 1
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WordRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "WordRequestType",
                    "name": "type",
                    "id": 1
                }
            ],
            "enums": [
                {
                    "name": "WordRequestType",
                    "values": [
                        {
                            "name": "WordRequestType_Plain",
                            "id": 0
                        },
                        {
                            "name": "WordRequestType_Matrix9",
                            "id": 1
                        },
                        {
                            "name": "WordRequestType_Matrix6",
                            "id": 2
                        }
                    ],
                    "options": {}
                }
            ],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WordAck",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "word",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "SetU2FCounter",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "GetNextU2FCounter",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NextU2FCounter",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "u2f_counter",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSourceEntry",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroOutputEntry",
                    "name": "outputs",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "real_output",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "real_out_tx_key",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "real_out_additional_tx_keys",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "real_output_in_tx_index",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "amount",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "rct",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "mask",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroMultisigKLRki",
                    "name": "multisig_kLRki",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "subaddr_minor",
                    "id": 10
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroOutputEntry",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "idx",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "MoneroRctKeyPublic",
                            "name": "key",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "MoneroRctKeyPublic",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "dest",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "commitment",
                                    "id": 2
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "MoneroMultisigKLRki",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "K",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "L",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "R",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "ki",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionDestinationEntry",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "amount",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroAccountPublicAddress",
                    "name": "addr",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "is_subaddress",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "original",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "is_integrated",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroAccountPublicAddress",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "spend_public_key",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "view_public_key",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionRsigData",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "rsig_type",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "offload_type",
                    "id": 2
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint64",
                    "name": "grouping",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "mask",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "rsig",
                    "id": 5
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "rsig_parts",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "bp_version",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "account",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "minor",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payment_id",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetWatchKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroWatchKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "watch_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "address",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInitRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "version",
                    "id": 1
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionData",
                    "name": "tsx_data",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroTransactionData",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "version",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "payment_id",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "unlock_time",
                            "id": 3
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "MoneroTransactionDestinationEntry",
                            "name": "outputs",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "MoneroTransactionDestinationEntry",
                            "name": "change_dts",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "num_inputs",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "mixin",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "account",
                            "id": 9
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "minor_indices",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "MoneroTransactionRsigData",
                            "name": "rsig_data",
                            "id": 11
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "integrated_indices",
                            "id": 12
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "client_version",
                            "id": 13
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "hard_fork",
                            "id": 14
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "monero_version",
                            "id": 15
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInitAck",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "bytes",
                    "name": "hmacs",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetInputRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionSourceEntry",
                    "name": "src_entr",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetInputAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini_hmac",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_hmac",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_alpha",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "spend_key",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputsPermutationRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "perm",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputsPermutationAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputViniRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionSourceEntry",
                    "name": "src_entr",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini_hmac",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_hmac",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "orig_idx",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionInputViniAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllInputsSetRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllInputsSetAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetOutputRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionDestinationEntry",
                    "name": "dst_entr",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "dst_entr_hmac",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "is_offloaded_bp",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSetOutputAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_out",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vouti_hmac",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "out_pk",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "ecdh_info",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllOutSetRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionRsigData",
                    "name": "rsig_data",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionAllOutSetAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "extra",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_prefix_hash",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroRingCtSig",
                    "name": "rv",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "full_message_hash",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroRingCtSig",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "txn_fee",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "message",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "rv_type",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSignInputRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "MoneroTransactionSourceEntry",
                    "name": "src_entr",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "vini_hmac",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_hmac",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out_alpha",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "spend_key",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "orig_idx",
                    "id": 8
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionSignInputAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "pseudo_out",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionFinalRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroTransactionFinalAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "cout_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "rand_mult",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_enc_keys",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "opening_key",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageExportInitRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "num",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "hash",
                    "id": 2
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 4
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroSubAddressIndicesList",
                    "name": "subs",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroSubAddressIndicesList",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "account",
                            "id": 1
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "minor_indices",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageExportInitAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncStepRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroTransferDetails",
                    "name": "tdis",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroTransferDetails",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "out_key",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "tx_pub_key",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "bytes",
                            "name": "additional_tx_pub_keys",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "internal_output_index",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncStepAck",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "MoneroExportedKeyImage",
                    "name": "kis",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "MoneroExportedKeyImage",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "iv",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "blob",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncFinalRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroKeyImageSyncFinalAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "enc_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetTxKeyRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt1",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt2",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_enc_keys",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_prefix_hash",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "reason",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "view_public_key",
                    "id": 8
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroGetTxKeyAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_keys",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "tx_derivations",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshStartRequest",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network_type",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshStartAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshStepRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "out_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "recv_deriv",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "real_out_idx",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sub_addr_major",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sub_addr_minor",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshStepAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "salt",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "key_image",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshFinalRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "MoneroLiveRefreshFinalAck",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugMoneroDiagRequest",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "ins",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p1",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p2",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint64",
                    "name": "pd",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data1",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data2",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "DebugMoneroDiagAck",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "ins",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p1",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "p2",
                    "id": 3
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint64",
                    "name": "pd",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data1",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data2",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMAddress",
            "fields": [
                {
                    "rule": "required",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMSignTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMTransactionCommon",
                    "name": "transaction",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMTransactionCommon",
                    "name": "multisig",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMTransfer",
                    "name": "transfer",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "cosigning",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMProvisionNamespace",
                    "name": "provision_namespace",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMMosaicCreation",
                    "name": "mosaic_creation",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMMosaicSupplyChange",
                    "name": "supply_change",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMAggregateModification",
                    "name": "aggregate_modification",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "NEMImportanceTransfer",
                    "name": "importance_transfer",
                    "id": 9
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "NEMTransactionCommon",
                    "fields": [
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "uint32",
                            "name": "address_n",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "network",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "timestamp",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "deadline",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "signer",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMTransfer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "recipient",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "payload",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 4
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "NEMMosaic",
                            "name": "mosaics",
                            "id": 5
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "NEMMosaic",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "namespace",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "mosaic",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "quantity",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMProvisionNamespace",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "namespace",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "parent",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "sink",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMMosaicCreation",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "NEMMosaicDefinition",
                            "name": "definition",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "sink",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "NEMMosaicDefinition",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "name",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "ticker",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "namespace",
                                    "id": 3
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "mosaic",
                                    "id": 4
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "divisibility",
                                    "id": 5
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "NEMMosaicLevy",
                                    "name": "levy",
                                    "id": 6
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "fee",
                                    "id": 7
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "levy_address",
                                    "id": 8
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "levy_namespace",
                                    "id": 9
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "levy_mosaic",
                                    "id": 10
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "uint64",
                                    "name": "supply",
                                    "id": 11
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bool",
                                    "name": "mutable_supply",
                                    "id": 12
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bool",
                                    "name": "transferable",
                                    "id": 13
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "string",
                                    "name": "description",
                                    "id": 14
                                },
                                {
                                    "rule": "repeated",
                                    "options": {},
                                    "type": "uint32",
                                    "name": "networks",
                                    "id": 15
                                }
                            ],
                            "enums": [
                                {
                                    "name": "NEMMosaicLevy",
                                    "values": [
                                        {
                                            "name": "MosaicLevy_Absolute",
                                            "id": 1
                                        },
                                        {
                                            "name": "MosaicLevy_Percentile",
                                            "id": 2
                                        }
                                    ],
                                    "options": {}
                                }
                            ],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMMosaicSupplyChange",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "namespace",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "mosaic",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "NEMSupplyChangeType",
                            "name": "type",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "delta",
                            "id": 4
                        }
                    ],
                    "enums": [
                        {
                            "name": "NEMSupplyChangeType",
                            "values": [
                                {
                                    "name": "SupplyChange_Increase",
                                    "id": 1
                                },
                                {
                                    "name": "SupplyChange_Decrease",
                                    "id": 2
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMAggregateModification",
                    "fields": [
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "NEMCosignatoryModification",
                            "name": "modifications",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "sint32",
                            "name": "relative_change",
                            "id": 2
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "NEMCosignatoryModification",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "NEMModificationType",
                                    "name": "type",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "public_key",
                                    "id": 2
                                }
                            ],
                            "enums": [
                                {
                                    "name": "NEMModificationType",
                                    "values": [
                                        {
                                            "name": "CosignatoryModification_Add",
                                            "id": 1
                                        },
                                        {
                                            "name": "CosignatoryModification_Delete",
                                            "id": 2
                                        }
                                    ],
                                    "options": {}
                                }
                            ],
                            "messages": [],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "NEMImportanceTransfer",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "NEMImportanceTransferMode",
                            "name": "mode",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 2
                        }
                    ],
                    "enums": [
                        {
                            "name": "NEMImportanceTransferMode",
                            "values": [
                                {
                                    "name": "ImportanceTransfer_Activate",
                                    "id": 1
                                },
                                {
                                    "name": "ImportanceTransfer_Deactivate",
                                    "id": 2
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "data",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMDecryptMessage",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "network",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "NEMDecryptedMessage",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "payload",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "fee",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "flags",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "sequence",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "last_ledger_sequence",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "RipplePayment",
                    "name": "payment",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "RipplePayment",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "destination",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "destination_tag",
                            "id": 3
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "RippleSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "serialized_tx",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAssetType",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "type",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "code",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "issuer",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "network_passphrase",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "fee",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "sequence_number",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "timebounds_start",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "timebounds_end",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "memo_type",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "memo_text",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "memo_id",
                    "id": 12
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "memo_hash",
                    "id": 13
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "num_operations",
                    "id": 14
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarTxOpRequest",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarPaymentOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "destination_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "asset",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "amount",
                    "id": 4
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarCreateAccountOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "new_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "starting_balance",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarPathPaymentOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "send_asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "send_max",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "destination_account",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "destination_asset",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "destination_amount",
                    "id": 6
                },
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "paths",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarManageOfferOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "selling_asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "buying_asset",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "amount",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_n",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_d",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "offer_id",
                    "id": 7
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarCreatePassiveOfferOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "selling_asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "buying_asset",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "sint64",
                    "name": "amount",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_n",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "price_d",
                    "id": 6
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarSetOptionsOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "inflation_destination_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "clear_flags",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "set_flags",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "master_weight",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "low_threshold",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "medium_threshold",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "high_threshold",
                    "id": 8
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "home_domain",
                    "id": 9
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "signer_type",
                    "id": 10
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signer_key",
                    "id": 11
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "signer_weight",
                    "id": 12
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarChangeTrustOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "StellarAssetType",
                    "name": "asset",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "limit",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAllowTrustOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "trusted_account",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "asset_type",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "asset_code",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "is_authorized",
                    "id": 5
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarAccountMergeOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "destination_account",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarManageDataOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "key",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "value",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarBumpSequenceOp",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "source_account",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint64",
                    "name": "bump_to",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "StellarSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "public_key",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "signature",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosGetAddress",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosAddress",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "address",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosGetPublicKey",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "show_display",
                    "id": 2
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosPublicKey",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "public_key",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosSignTx",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "uint32",
                    "name": "address_n",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "branch",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosRevealOp",
                    "name": "reveal",
                    "id": 3
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosTransactionOp",
                    "name": "transaction",
                    "id": 4
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosOriginationOp",
                    "name": "origination",
                    "id": 5
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosDelegationOp",
                    "name": "delegation",
                    "id": 6
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosProposalOp",
                    "name": "proposal",
                    "id": 7
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "TezosBallotOp",
                    "name": "ballot",
                    "id": 8
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "TezosContractID",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractType",
                            "name": "tag",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "hash",
                            "id": 2
                        }
                    ],
                    "enums": [
                        {
                            "name": "TezosContractType",
                            "values": [
                                {
                                    "name": "Implicit",
                                    "id": 0
                                },
                                {
                                    "name": "Originated",
                                    "id": 1
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosRevealOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "public_key",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosTransactionOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "amount",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosContractID",
                            "name": "destination",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "parameters",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosParametersManager",
                            "name": "parameters_manager",
                            "id": 10
                        }
                    ],
                    "enums": [],
                    "messages": [
                        {
                            "name": "TezosParametersManager",
                            "fields": [
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bytes",
                                    "name": "set_delegate",
                                    "id": 1
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "bool",
                                    "name": "cancel_delegate",
                                    "id": 2
                                },
                                {
                                    "rule": "optional",
                                    "options": {},
                                    "type": "TezosManagerTransfer",
                                    "name": "transfer",
                                    "id": 3
                                }
                            ],
                            "enums": [],
                            "messages": [
                                {
                                    "name": "TezosManagerTransfer",
                                    "fields": [
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "TezosContractID",
                                            "name": "destination",
                                            "id": 1
                                        },
                                        {
                                            "rule": "optional",
                                            "options": {},
                                            "type": "uint64",
                                            "name": "amount",
                                            "id": 2
                                        }
                                    ],
                                    "enums": [],
                                    "messages": [],
                                    "options": {},
                                    "oneofs": {}
                                }
                            ],
                            "options": {},
                            "oneofs": {}
                        }
                    ],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosOriginationOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 12
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "manager_pubkey",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "balance",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "spendable",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "delegatable",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "delegate",
                            "id": 10
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "script",
                            "id": 11
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosDelegationOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "fee",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "counter",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "gas_limit",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "storage_limit",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "delegate",
                            "id": 6
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosProposalOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "period",
                            "id": 2
                        },
                        {
                            "rule": "repeated",
                            "options": {},
                            "type": "bytes",
                            "name": "proposals",
                            "id": 4
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                },
                {
                    "name": "TezosBallotOp",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "source",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint64",
                            "name": "period",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "proposal",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "TezosBallotType",
                            "name": "ballot",
                            "id": 4
                        }
                    ],
                    "enums": [
                        {
                            "name": "TezosBallotType",
                            "values": [
                                {
                                    "name": "Yay",
                                    "id": 0
                                },
                                {
                                    "name": "Nay",
                                    "id": 1
                                },
                                {
                                    "name": "Pass",
                                    "id": 2
                                }
                            ],
                            "options": {}
                        }
                    ],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "TezosSignedTx",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "signature",
                    "id": 1
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "sig_op_contents",
                    "id": 2
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "string",
                    "name": "operation_hash",
                    "id": 3
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WebAuthnListResidentCredentials",
            "fields": [],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WebAuthnAddResidentCredential",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bytes",
                    "name": "credential_id",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WebAuthnRemoveResidentCredential",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "uint32",
                    "name": "index",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [],
            "options": {},
            "oneofs": {}
        },
        {
            "name": "WebAuthnCredentials",
            "fields": [
                {
                    "rule": "repeated",
                    "options": {},
                    "type": "WebAuthnCredential",
                    "name": "credentials",
                    "id": 1
                }
            ],
            "enums": [],
            "messages": [
                {
                    "name": "WebAuthnCredential",
                    "fields": [
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "index",
                            "id": 1
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "id",
                            "id": 2
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "rp_id",
                            "id": 3
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "rp_name",
                            "id": 4
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bytes",
                            "name": "user_id",
                            "id": 5
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "user_name",
                            "id": 6
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "string",
                            "name": "user_display_name",
                            "id": 7
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "uint32",
                            "name": "creation_time",
                            "id": 8
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "hmac_secret",
                            "id": 9
                        },
                        {
                            "rule": "optional",
                            "options": {},
                            "type": "bool",
                            "name": "use_sign_count",
                            "id": 10
                        }
                    ],
                    "enums": [],
                    "messages": [],
                    "options": {},
                    "oneofs": {}
                }
            ],
            "options": {},
            "oneofs": {}
        },
        {
            "ref": "google.protobuf.EnumValueOptions",
            "fields": [
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_in",
                    "id": 50002
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_out",
                    "id": 50003
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_debug_in",
                    "id": 50004
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_debug_out",
                    "id": 50005
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_tiny",
                    "id": 50006
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_bootloader",
                    "id": 50007
                },
                {
                    "rule": "optional",
                    "options": {},
                    "type": "bool",
                    "name": "wire_no_fsm",
                    "id": 50008
                }
            ]
        }
    ],
    "enums": [
        {
            "name": "InputScriptType",
            "values": [
                {
                    "name": "SPENDADDRESS",
                    "id": 0
                },
                {
                    "name": "SPENDMULTISIG",
                    "id": 1
                },
                {
                    "name": "EXTERNAL",
                    "id": 2
                },
                {
                    "name": "SPENDWITNESS",
                    "id": 3
                },
                {
                    "name": "SPENDP2SHWITNESS",
                    "id": 4
                }
            ],
            "options": {}
        },
        {
            "name": "BackupType",
            "values": [
                {
                    "name": "Bip39",
                    "id": 0
                },
                {
                    "name": "Slip39_Basic",
                    "id": 1
                },
                {
                    "name": "Slip39_Advanced",
                    "id": 2
                }
            ],
            "options": {}
        },
        {
            "name": "MessageType",
            "values": [
                {
                    "name": "MessageType_Initialize",
                    "id": 0
                },
                {
                    "name": "MessageType_Ping",
                    "id": 1
                },
                {
                    "name": "MessageType_Success",
                    "id": 2
                },
                {
                    "name": "MessageType_Failure",
                    "id": 3
                },
                {
                    "name": "MessageType_ChangePin",
                    "id": 4
                },
                {
                    "name": "MessageType_WipeDevice",
                    "id": 5
                },
                {
                    "name": "MessageType_GetEntropy",
                    "id": 9
                },
                {
                    "name": "MessageType_Entropy",
                    "id": 10
                },
                {
                    "name": "MessageType_LoadDevice",
                    "id": 13
                },
                {
                    "name": "MessageType_ResetDevice",
                    "id": 14
                },
                {
                    "name": "MessageType_Features",
                    "id": 17
                },
                {
                    "name": "MessageType_PinMatrixRequest",
                    "id": 18
                },
                {
                    "name": "MessageType_PinMatrixAck",
                    "id": 19
                },
                {
                    "name": "MessageType_Cancel",
                    "id": 20
                },
                {
                    "name": "MessageType_ClearSession",
                    "id": 24
                },
                {
                    "name": "MessageType_ApplySettings",
                    "id": 25
                },
                {
                    "name": "MessageType_ButtonRequest",
                    "id": 26
                },
                {
                    "name": "MessageType_ButtonAck",
                    "id": 27
                },
                {
                    "name": "MessageType_ApplyFlags",
                    "id": 28
                },
                {
                    "name": "MessageType_BackupDevice",
                    "id": 34
                },
                {
                    "name": "MessageType_EntropyRequest",
                    "id": 35
                },
                {
                    "name": "MessageType_EntropyAck",
                    "id": 36
                },
                {
                    "name": "MessageType_PassphraseRequest",
                    "id": 41
                },
                {
                    "name": "MessageType_PassphraseAck",
                    "id": 42
                },
                {
                    "name": "MessageType_RecoveryDevice",
                    "id": 45
                },
                {
                    "name": "MessageType_WordRequest",
                    "id": 46
                },
                {
                    "name": "MessageType_WordAck",
                    "id": 47
                },
                {
                    "name": "MessageType_GetFeatures",
                    "id": 55
                },
                {
                    "name": "MessageType_SetU2FCounter",
                    "id": 63
                },
                {
                    "name": "MessageType_SdProtect",
                    "id": 79
                },
                {
                    "name": "MessageType_GetNextU2FCounter",
                    "id": 80
                },
                {
                    "name": "MessageType_NextU2FCounter",
                    "id": 81
                },
                {
                    "name": "MessageType_ChangeWipeCode",
                    "id": 82
                },
                {
                    "name": "MessageType_Deprecated_PassphraseStateRequest",
                    "id": 77
                },
                {
                    "name": "MessageType_Deprecated_PassphraseStateAck",
                    "id": 78
                },
                {
                    "name": "MessageType_FirmwareErase",
                    "id": 6
                },
                {
                    "name": "MessageType_FirmwareUpload",
                    "id": 7
                },
                {
                    "name": "MessageType_FirmwareRequest",
                    "id": 8
                },
                {
                    "name": "MessageType_SelfTest",
                    "id": 32
                },
                {
                    "name": "MessageType_GetPublicKey",
                    "id": 11
                },
                {
                    "name": "MessageType_PublicKey",
                    "id": 12
                },
                {
                    "name": "MessageType_SignTx",
                    "id": 15
                },
                {
                    "name": "MessageType_TxRequest",
                    "id": 21
                },
                {
                    "name": "MessageType_TxAck",
                    "id": 22
                },
                {
                    "name": "MessageType_GetAddress",
                    "id": 29
                },
                {
                    "name": "MessageType_Address",
                    "id": 30
                },
                {
                    "name": "MessageType_SignMessage",
                    "id": 38
                },
                {
                    "name": "MessageType_VerifyMessage",
                    "id": 39
                },
                {
                    "name": "MessageType_MessageSignature",
                    "id": 40
                },
                {
                    "name": "MessageType_CipherKeyValue",
                    "id": 23
                },
                {
                    "name": "MessageType_CipheredKeyValue",
                    "id": 48
                },
                {
                    "name": "MessageType_SignIdentity",
                    "id": 53
                },
                {
                    "name": "MessageType_SignedIdentity",
                    "id": 54
                },
                {
                    "name": "MessageType_GetECDHSessionKey",
                    "id": 61
                },
                {
                    "name": "MessageType_ECDHSessionKey",
                    "id": 62
                },
                {
                    "name": "MessageType_CosiCommit",
                    "id": 71
                },
                {
                    "name": "MessageType_CosiCommitment",
                    "id": 72
                },
                {
                    "name": "MessageType_CosiSign",
                    "id": 73
                },
                {
                    "name": "MessageType_CosiSignature",
                    "id": 74
                },
                {
                    "name": "MessageType_DebugLinkDecision",
                    "id": 100
                },
                {
                    "name": "MessageType_DebugLinkGetState",
                    "id": 101
                },
                {
                    "name": "MessageType_DebugLinkState",
                    "id": 102
                },
                {
                    "name": "MessageType_DebugLinkStop",
                    "id": 103
                },
                {
                    "name": "MessageType_DebugLinkLog",
                    "id": 104
                },
                {
                    "name": "MessageType_DebugLinkMemoryRead",
                    "id": 110
                },
                {
                    "name": "MessageType_DebugLinkMemory",
                    "id": 111
                },
                {
                    "name": "MessageType_DebugLinkMemoryWrite",
                    "id": 112
                },
                {
                    "name": "MessageType_DebugLinkFlashErase",
                    "id": 113
                },
                {
                    "name": "MessageType_DebugLinkLayout",
                    "id": 9001
                },
                {
                    "name": "MessageType_DebugLinkReseedRandom",
                    "id": 9002
                },
                {
                    "name": "MessageType_DebugLinkRecordScreen",
                    "id": 9003
                },
                {
                    "name": "MessageType_DebugLinkShowText",
                    "id": 9004
                },
                {
                    "name": "MessageType_DebugLinkEraseSdCard",
                    "id": 9005
                },
                {
                    "name": "MessageType_EthereumGetPublicKey",
                    "id": 450
                },
                {
                    "name": "MessageType_EthereumPublicKey",
                    "id": 451
                },
                {
                    "name": "MessageType_EthereumGetAddress",
                    "id": 56
                },
                {
                    "name": "MessageType_EthereumAddress",
                    "id": 57
                },
                {
                    "name": "MessageType_EthereumSignTx",
                    "id": 58
                },
                {
                    "name": "MessageType_EthereumTxRequest",
                    "id": 59
                },
                {
                    "name": "MessageType_EthereumTxAck",
                    "id": 60
                },
                {
                    "name": "MessageType_EthereumSignMessage",
                    "id": 64
                },
                {
                    "name": "MessageType_EthereumVerifyMessage",
                    "id": 65
                },
                {
                    "name": "MessageType_EthereumMessageSignature",
                    "id": 66
                },
                {
                    "name": "MessageType_NEMGetAddress",
                    "id": 67
                },
                {
                    "name": "MessageType_NEMAddress",
                    "id": 68
                },
                {
                    "name": "MessageType_NEMSignTx",
                    "id": 69
                },
                {
                    "name": "MessageType_NEMSignedTx",
                    "id": 70
                },
                {
                    "name": "MessageType_NEMDecryptMessage",
                    "id": 75
                },
                {
                    "name": "MessageType_NEMDecryptedMessage",
                    "id": 76
                },
                {
                    "name": "MessageType_LiskGetAddress",
                    "id": 114
                },
                {
                    "name": "MessageType_LiskAddress",
                    "id": 115
                },
                {
                    "name": "MessageType_LiskSignTx",
                    "id": 116
                },
                {
                    "name": "MessageType_LiskSignedTx",
                    "id": 117
                },
                {
                    "name": "MessageType_LiskSignMessage",
                    "id": 118
                },
                {
                    "name": "MessageType_LiskMessageSignature",
                    "id": 119
                },
                {
                    "name": "MessageType_LiskVerifyMessage",
                    "id": 120
                },
                {
                    "name": "MessageType_LiskGetPublicKey",
                    "id": 121
                },
                {
                    "name": "MessageType_LiskPublicKey",
                    "id": 122
                },
                {
                    "name": "MessageType_TezosGetAddress",
                    "id": 150
                },
                {
                    "name": "MessageType_TezosAddress",
                    "id": 151
                },
                {
                    "name": "MessageType_TezosSignTx",
                    "id": 152
                },
                {
                    "name": "MessageType_TezosSignedTx",
                    "id": 153
                },
                {
                    "name": "MessageType_TezosGetPublicKey",
                    "id": 154
                },
                {
                    "name": "MessageType_TezosPublicKey",
                    "id": 155
                },
                {
                    "name": "MessageType_StellarSignTx",
                    "id": 202
                },
                {
                    "name": "MessageType_StellarTxOpRequest",
                    "id": 203
                },
                {
                    "name": "MessageType_StellarGetAddress",
                    "id": 207
                },
                {
                    "name": "MessageType_StellarAddress",
                    "id": 208
                },
                {
                    "name": "MessageType_StellarCreateAccountOp",
                    "id": 210
                },
                {
                    "name": "MessageType_StellarPaymentOp",
                    "id": 211
                },
                {
                    "name": "MessageType_StellarPathPaymentOp",
                    "id": 212
                },
                {
                    "name": "MessageType_StellarManageOfferOp",
                    "id": 213
                },
                {
                    "name": "MessageType_StellarCreatePassiveOfferOp",
                    "id": 214
                },
                {
                    "name": "MessageType_StellarSetOptionsOp",
                    "id": 215
                },
                {
                    "name": "MessageType_StellarChangeTrustOp",
                    "id": 216
                },
                {
                    "name": "MessageType_StellarAllowTrustOp",
                    "id": 217
                },
                {
                    "name": "MessageType_StellarAccountMergeOp",
                    "id": 218
                },
                {
                    "name": "MessageType_StellarManageDataOp",
                    "id": 220
                },
                {
                    "name": "MessageType_StellarBumpSequenceOp",
                    "id": 221
                },
                {
                    "name": "MessageType_StellarSignedTx",
                    "id": 230
                },
                {
                    "name": "MessageType_CardanoSignTx",
                    "id": 303
                },
                {
                    "name": "MessageType_CardanoTxRequest",
                    "id": 304
                },
                {
                    "name": "MessageType_CardanoGetPublicKey",
                    "id": 305
                },
                {
                    "name": "MessageType_CardanoPublicKey",
                    "id": 306
                },
                {
                    "name": "MessageType_CardanoGetAddress",
                    "id": 307
                },
                {
                    "name": "MessageType_CardanoAddress",
                    "id": 308
                },
                {
                    "name": "MessageType_CardanoTxAck",
                    "id": 309
                },
                {
                    "name": "MessageType_CardanoSignedTx",
                    "id": 310
                },
                {
                    "name": "MessageType_RippleGetAddress",
                    "id": 400
                },
                {
                    "name": "MessageType_RippleAddress",
                    "id": 401
                },
                {
                    "name": "MessageType_RippleSignTx",
                    "id": 402
                },
                {
                    "name": "MessageType_RippleSignedTx",
                    "id": 403
                },
                {
                    "name": "MessageType_MoneroTransactionInitRequest",
                    "id": 501
                },
                {
                    "name": "MessageType_MoneroTransactionInitAck",
                    "id": 502
                },
                {
                    "name": "MessageType_MoneroTransactionSetInputRequest",
                    "id": 503
                },
                {
                    "name": "MessageType_MoneroTransactionSetInputAck",
                    "id": 504
                },
                {
                    "name": "MessageType_MoneroTransactionInputsPermutationRequest",
                    "id": 505
                },
                {
                    "name": "MessageType_MoneroTransactionInputsPermutationAck",
                    "id": 506
                },
                {
                    "name": "MessageType_MoneroTransactionInputViniRequest",
                    "id": 507
                },
                {
                    "name": "MessageType_MoneroTransactionInputViniAck",
                    "id": 508
                },
                {
                    "name": "MessageType_MoneroTransactionAllInputsSetRequest",
                    "id": 509
                },
                {
                    "name": "MessageType_MoneroTransactionAllInputsSetAck",
                    "id": 510
                },
                {
                    "name": "MessageType_MoneroTransactionSetOutputRequest",
                    "id": 511
                },
                {
                    "name": "MessageType_MoneroTransactionSetOutputAck",
                    "id": 512
                },
                {
                    "name": "MessageType_MoneroTransactionAllOutSetRequest",
                    "id": 513
                },
                {
                    "name": "MessageType_MoneroTransactionAllOutSetAck",
                    "id": 514
                },
                {
                    "name": "MessageType_MoneroTransactionSignInputRequest",
                    "id": 515
                },
                {
                    "name": "MessageType_MoneroTransactionSignInputAck",
                    "id": 516
                },
                {
                    "name": "MessageType_MoneroTransactionFinalRequest",
                    "id": 517
                },
                {
                    "name": "MessageType_MoneroTransactionFinalAck",
                    "id": 518
                },
                {
                    "name": "MessageType_MoneroKeyImageExportInitRequest",
                    "id": 530
                },
                {
                    "name": "MessageType_MoneroKeyImageExportInitAck",
                    "id": 531
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncStepRequest",
                    "id": 532
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncStepAck",
                    "id": 533
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncFinalRequest",
                    "id": 534
                },
                {
                    "name": "MessageType_MoneroKeyImageSyncFinalAck",
                    "id": 535
                },
                {
                    "name": "MessageType_MoneroGetAddress",
                    "id": 540
                },
                {
                    "name": "MessageType_MoneroAddress",
                    "id": 541
                },
                {
                    "name": "MessageType_MoneroGetWatchKey",
                    "id": 542
                },
                {
                    "name": "MessageType_MoneroWatchKey",
                    "id": 543
                },
                {
                    "name": "MessageType_DebugMoneroDiagRequest",
                    "id": 546
                },
                {
                    "name": "MessageType_DebugMoneroDiagAck",
                    "id": 547
                },
                {
                    "name": "MessageType_MoneroGetTxKeyRequest",
                    "id": 550
                },
                {
                    "name": "MessageType_MoneroGetTxKeyAck",
                    "id": 551
                },
                {
                    "name": "MessageType_MoneroLiveRefreshStartRequest",
                    "id": 552
                },
                {
                    "name": "MessageType_MoneroLiveRefreshStartAck",
                    "id": 553
                },
                {
                    "name": "MessageType_MoneroLiveRefreshStepRequest",
                    "id": 554
                },
                {
                    "name": "MessageType_MoneroLiveRefreshStepAck",
                    "id": 555
                },
                {
                    "name": "MessageType_MoneroLiveRefreshFinalRequest",
                    "id": 556
                },
                {
                    "name": "MessageType_MoneroLiveRefreshFinalAck",
                    "id": 557
                },
                {
                    "name": "MessageType_EosGetPublicKey",
                    "id": 600
                },
                {
                    "name": "MessageType_EosPublicKey",
                    "id": 601
                },
                {
                    "name": "MessageType_EosSignTx",
                    "id": 602
                },
                {
                    "name": "MessageType_EosTxActionRequest",
                    "id": 603
                },
                {
                    "name": "MessageType_EosTxActionAck",
                    "id": 604
                },
                {
                    "name": "MessageType_EosSignedTx",
                    "id": 605
                },
                {
                    "name": "MessageType_BinanceGetAddress",
                    "id": 700
                },
                {
                    "name": "MessageType_BinanceAddress",
                    "id": 701
                },
                {
                    "name": "MessageType_BinanceGetPublicKey",
                    "id": 702
                },
                {
                    "name": "MessageType_BinancePublicKey",
                    "id": 703
                },
                {
                    "name": "MessageType_BinanceSignTx",
                    "id": 704
                },
                {
                    "name": "MessageType_BinanceTxRequest",
                    "id": 705
                },
                {
                    "name": "MessageType_BinanceTransferMsg",
                    "id": 706
                },
                {
                    "name": "MessageType_BinanceOrderMsg",
                    "id": 707
                },
                {
                    "name": "MessageType_BinanceCancelMsg",
                    "id": 708
                },
                {
                    "name": "MessageType_BinanceSignedTx",
                    "id": 709
                },
                {
                    "name": "MessageType_WebAuthnListResidentCredentials",
                    "id": 800
                },
                {
                    "name": "MessageType_WebAuthnCredentials",
                    "id": 801
                },
                {
                    "name": "MessageType_WebAuthnAddResidentCredential",
                    "id": 802
                },
                {
                    "name": "MessageType_WebAuthnRemoveResidentCredential",
                    "id": 803
                }
            ],
            "options": {}
        }
    ],
    "imports": [],
    "options": {},
    "services": []
};

window.fetch = async function(url, obj,a, b, c, d, e) {
/*
  if (url == "./data/messages/messages.json") {
    return {
      ok: true,
      status: 200,
      text: async () => {return JSON.stringify(globalMessages)}
    };
  }
  if (url == "./data/messages/messages-v8.json") {
    return {
      ok: true,
      status: 200,
      text: async () => {return JSON.stringify(globalMessagesV8)}
    };
  }
  if (url == "./data/messages/messages-v7.json") {
    return {
      ok: true,
      status: 200,
      text: async () => {return JSON.stringify(globalMessagesV7)}
    };
  }
  if (url == "./data/config.json") {

    return {
      ok: true,
      status: 200,
      text: async () => {return JSON.stringify(globalDataConfig)}
    };
  }
  if (url == "./data/coins.json") {
    return {
      ok: true,
      status: 200,
      text: async () => {return JSON.stringify(globalConfigCoins)}
    };
  }
  if (url == "./data/bridge/releases.json") {
    return {
      ok: true,
      status: 200,
      text: async () => {return JSON.stringify(globalBridgeReleases)}
    };
  }
  
  if (url == "./data/firmware/1/releases.json") {
    return {
      ok: true,
      status: 200,
      text: async () => {return JSON.stringify(globalFirmwareReleases)}
    };
  }
  if (url == "./data/firmware/2/releases.json") {
    return {
      ok: true,
      status: 200,
      text: async () => {return JSON.stringify(globalFirmware2Releases)}
    };
  }
  if (url == "./data/messages/messages-v6.json") {
    return {
      ok: true,
      status: 200,
      text: async () => {return JSON.stringify(globalMessagesV6)}
    };
  }
*/
  console.log(chrome)
  return chrome.sendWithPromise("sendFetchRequest", url, obj)
};
